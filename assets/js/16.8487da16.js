(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{297:function(e,t,r){e.exports=r.p+"assets/img/igpu-entry.cc89d7f5.png"},298:function(e,t,r){e.exports=r.p+"assets/img/igpu-children.2675f538.png"},299:function(e,t,r){e.exports=r.p+"assets/img/connector-type-patch.9bb78031.png"},447:function(e,t,r){"use strict";r.r(t);var n=r(10),a=Object(n.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"修补连接器类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#修补连接器类型"}},[e._v("#")]),e._v(" 修补连接器类型")]),e._v(" "),t("ul",[t("li",[e._v("图片和信息基于"),t("a",{attrs:{href:"https://hackintosh.gitbook.io/-r-hackintosh-vanilla-desktop-guide/config.plist-per-hardware/coffee-lake#pink-purple-tint",target:"_blank",rel:"noopener noreferrer"}},[e._v("CorpNewt's Vanilla Guide"),t("OutboundLink")],1)])]),e._v(" "),t("p",[e._v("本节主要与那些在显示器（通常是HDMI端口）上出现黑屏或不正确颜色输出的用户有关。这是由于苹果公司在你的硬件上强制显示类型。为了解决这个问题，我们将修补苹果的连接器类型，以正确尊重我们的硬件。")]),e._v(" "),t("p",[e._v("在这个例子中，让我们来看看一个连接了HDMI显示器的UHD 630系统。这台机器已经被正确设置，但是在HDMI显示器上有一个粉红色/紫色的色调。")]),e._v(" "),t("p",[e._v("获得一份"),t("a",{attrs:{href:"https://github.com/khronokernel/IORegistryClone/blob/master/ioreg-302.zip",target:"_blank",rel:"noopener noreferrer"}},[e._v("IOReg"),t("OutboundLink")],1),e._v("的副本，搜索 "),t("code",[e._v("iGPU")]),e._v("条目。")]),e._v(" "),t("p",[t("img",{attrs:{src:r(297),alt:""}})]),e._v(" "),t("p",[e._v("接下来，清除该条目，这样我们就可以看到iGPU设备。")]),e._v(" "),t("p",[t("img",{attrs:{src:r(298),alt:""}})]),e._v(" "),t("p",[e._v("正如我们在上面的截图中所看到的，我们有几个帧缓冲器的条目被列出。这些都是存在于framebuffer特型中的显示特型，并且都有自己的设置。")]),e._v(" "),t("p",[e._v("对我们来说，我们关心的是那些有"),t("code",[e._v("display0")]),e._v("子项的条目，因为这就是驱动物理显示器的东西。在这个例子中，我们可以看到它是"),t("code",[e._v("AppleIntelFramebuffer@1")]),e._v("。当我们选择它时，你会看到在左边的窗格中，它的属性 "),t("code",[e._v("connector-type")]),e._v("的值是"),t("code",[e._v("<00 04 00 00>")]),e._v("。而当我们看下面的列表时：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("<02 00 00 00>        LVDS 和 eDP      - 笔记本电脑显示器\n<10 00 00 00>        VGA               - 在10.8和更新的版本中不被支持\n<00 04 00 00>        DisplayPort       - USB-C显示输出内部为DP\n<01 00 00 00>        DUMMY             - 在没有物理端口时使用\n<00 08 00 00>        HDMI\n<80 00 00 00>        S-Video\n<04 00 00 00>        DVI (双链路)\n<00 02 00 00>        DVI (单链路)\n")])])]),t("ul",[t("li",[e._v("注意：Skylake和更新版本的VGA在内部是DisplayPorts，所以被macOS支持。对于这些系统，请使用DisplayPort接口。")])]),e._v(" "),t("p",[e._v("仔细观察，我们发现HDMI端口实际上被列为DisplayPort。这就是WhateverGreen的修补机制发挥作用的地方。")]),e._v(" "),t("p",[e._v("由于错误的端口位于AppleIntelFramebuffer@1，这就是端口1。接下来，我们要为con1启用WhateverGreen的修补机制，然后将连接器类型设置为HDMI。要做到这一点，我们在"),t("code",[e._v("DeviceProperties -> Add -> PciRoot(0x0)/Pci(0x2,0x0)")]),e._v("下设置以下属性。")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("framebuffer-patch-enable = 01000000")]),e._v(" "),t("ul",[t("li",[e._v("启用WhateverGreen的补丁机制")])])]),e._v(" "),t("li",[t("code",[e._v("framebuffer-conX-enable = 01000000")]),e._v(" "),t("ul",[t("li",[e._v("启用WhateverGreen在conX上的补丁")])])]),e._v(" "),t("li",[t("code",[e._v("framebuffer-conX-type = 00080000")]),e._v(" "),t("ul",[t("li",[e._v("设置端口为HDMI("),t("code",[e._v("<00 08 00 00>")]),e._v(")")])])])]),e._v(" "),t("p",[e._v("注意：记得将两个补丁中的"),t("code",[e._v("conX")]),e._v("替换为 "),t("code",[e._v("con1")]),e._v("，以反映我们想要固定的端口，然后按上面列出的值设置。")]),e._v(" "),t("p",[t("img",{attrs:{src:r(299),alt:""}})])])}),[],!1,null,null,null);t.default=a.exports}}]);