(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{326:function(e,r,a){e.exports=a.p+"assets/img/vda.c3501622.png"},327:function(e,r,a){e.exports=a.p+"assets/img/dgpu-path.ee8b884a.png"},459:function(e,r,a){"use strict";a.r(r);var t=a(10),i=Object(t.a)({},(function(){var e=this,r=e._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"修复drm支持和igpu性能"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#修复drm支持和igpu性能"}},[e._v("#")]),e._v(" 修复DRM支持和iGPU性能")]),e._v(" "),r("ul",[r("li",[r("strong",[e._v("注意")]),e._v(":Safari 14和macOS 11, Big Sur目前不受WhateverGreen的DRM补丁支持。不过，在卡特琳娜及更老版本的Safari 13支持得还不错。")]),e._v(" "),r("li",[r("strong",[e._v("注2")]),e._v(":浏览器不使用基于硬件的DRM (ie Mozilla Firefox或基于Chrome的浏览器，如谷歌Chrome和Microsoft Edge)将有工作的DRM，而无需在igpu和dgpu上进行任何工作。以下指南是使用基于硬件的DRM Safari和其他应用程序。")])]),e._v(" "),r("p",[e._v("关于DRM，我们有几点需要提一下:")]),e._v(" "),r("ul",[r("li",[e._v("DRM需要支持的dGPU\n"),r("ul",[r("li",[e._v("有关支持的卡，请参阅"),r("a",{attrs:{href:"https://sumingyd.github.io/GPU-Buyers-Guide/",target:"_blank",rel:"noopener noreferrer"}},[e._v("GPU购买者指南"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[e._v("仅igpu系统的DRM损坏\n"),r("ul",[r("li",[e._v("这个问题可以在10.12.2之前用Shiki(现在的WhateverGreen)修复，但在10.12.3时被破坏了")]),e._v(" "),r("li",[e._v("这是由于我们的igpu不支持苹果的固件，我们的"),r("a",{attrs:{href:"https://en.wikipedia.org/wiki/Intel_Management_Engine",target:"_blank",rel:"noopener noreferrer"}},[e._v("管理引擎"),r("OutboundLink")],1),e._v(" 没有苹果的证书")])])]),e._v(" "),r("li",[e._v("工作硬件加速和解码")])]),e._v(" "),r("h2",{attrs:{id:"测试硬件加速和解码"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#测试硬件加速和解码"}},[e._v("#")]),e._v(" 测试硬件加速和解码")]),e._v(" "),r("p",[e._v("因此，在我们开始修复DRM之前，我们需要确保您的硬件是工作的。最好的检查方法是运行 "),r("a",{attrs:{href:"https://i.applelife.ru/2019/05/451893_10.12_VDADecoderChecker.zip",target:"_blank",rel:"noopener noreferrer"}},[e._v("VDADecoderChecker"),r("OutboundLink")],1),e._v(":")]),e._v(" "),r("p",[r("img",{attrs:{src:a(326),alt:""}})]),e._v(" "),r("p",[e._v("如果你在这一点上失败了，你可以检查以下几点:")]),e._v(" "),r("ul",[r("li",[e._v("确保您的硬件支持\n"),r("ul",[r("li",[e._v("参见"),r("a",{attrs:{href:"https://sumingyd.github.io/GPU-Buyers-Guide/",target:"_blank",rel:"noopener noreferrer"}},[e._v("GPU购买指南"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[e._v("确保你正在运行的SMBIOS与你的硬件匹配\n"),r("ul",[r("li",[e._v("例如，不要在台式机上使用Mac Mini SMBIOS，因为Mac Mini运行的是移动硬件，所以macOS也会有同样的要求")])])]),e._v(" "),r("li",[e._v("确保iGPU在BIOS中是启用的，并且具有正确的设置属性("),r("code",[e._v("AAPL,ig-platform-id")]),e._v("，如果需要，"),r("code",[e._v("device-id")]),e._v(")\n"),r("ul",[r("li",[e._v("您可以查看指南中的DeviceProperties部分或"),r("a",{attrs:{href:"https://github.com/acidanthera/WhateverGreen/blob/master/Manual/FAQ.IntelHD.en.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("WhateverGreen的手册"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[e._v("避免不必要的ACPI重命名，所有重要的重命名都由WhateverGreen处理\n"),r("ul",[r("li",[e._v("change GFX0 to IGPU")]),e._v(" "),r("li",[e._v("change PEG0 to GFX0")]),e._v(" "),r("li",[e._v("change HECI to IMEI")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/dortania/OpenCore-Install-Guide/blob/master/clover-conversion/Clover-config.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("等"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[e._v("确保Lilu和WhateverGreen已加载\n"),r("ul",[r("li",[e._v("确保没有任何遗留的图形补丁，因为它们已经被合并到WhateverGreen中:\n"),r("ul",[r("li",[e._v("IntelGraphicsFixup.kext")]),e._v(" "),r("li",[e._v("NvidiaGraphicsFixup.kext")]),e._v(" "),r("li",[e._v("Shiki.kext")])])])])])]),e._v(" "),r("p",[e._v("检查Lilu和WhateverGreen是否正确加载:")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v('kextstat | grep -E "Lilu|WhateverGreen"\n')])])]),r("blockquote",[r("p",[e._v("这些kext中的一个或多个没有出现")])]),e._v(" "),r("p",[e._v("一般来说，最好的开始是通过查看你的OpenCore日志，看看Lilu和WhateverGreen是否正确注入:")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("14:354 00:020 OC: Prelink injection Lilu.kext () - Success\n14:367 00:012 OC: Prelink injection WhateverGreen.kext () - Success\n")])])]),r("p",[e._v("如果它说注射失败:")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("15:448 00:007 OC: Prelink injection WhateverGreen.kext () - Invalid Parameter\n")])])]),r("p",[e._v("你可以查看的主要地方是:")]),e._v(" "),r("ul",[r("li",[r("strong",[e._v("注射顺序")]),e._v(":确保Lilu在WhateverGreen上面")]),e._v(" "),r("li",[r("strong",[e._v("所有的kext都是最新版本")]),e._v(":对于Lilu插件尤其重要，因为不匹配的kext可能会导致问题")])]),e._v(" "),r("p",[e._v("注意:要设置文件日志，请参阅 "),r("a",{attrs:{href:"https://sumingyd.github.io/OpenCore-Install-Guide/troubleshooting/debug.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("OpenCore 调试"),r("OutboundLink")],1),e._v(".")]),e._v(" "),r("p",[r("strong",[e._v("注")]),e._v(":在macOS 10.15及更新版本上，AppleGVA调试默认是关闭的，如果你在运行VDADecoderChecker时得到一个通用错误，你可以使用以下命令打开调试:")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("defaults write com.apple.AppleGVA enableSyslog -boolean true\n")])])]),r("p",[e._v("并撤销此操作:")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("defaults delete com.apple.AppleGVA enableSyslog\n")])])]),r("h2",{attrs:{id:"测试drm"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#测试drm"}},[e._v("#")]),e._v(" 测试DRM")]),e._v(" "),r("p",[e._v("因此，在我们深入讨论之前，我们需要回顾一些事情，主要是你将在现实中看到的DRM类型:")]),e._v(" "),r("p",[r("strong",[e._v("FairPlay 1.x")]),e._v(": 基于软件的DRM，可以更好地支持legacy mac")]),e._v(" "),r("ul",[r("li",[e._v("最简单的测试方法是播放iTunes电影: "),r("a",{attrs:{href:"https://drive.google.com/file/d/12pQ5FFpdHdGOVV6jvbqEq2wmkpMKxsOF/view",target:"_blank",rel:"noopener noreferrer"}},[e._v("FairPlay 1.x test"),r("OutboundLink")],1),e._v(" "),r("ul",[r("li",[e._v("FairPlay 1.x预告片将在任何配置上工作，如果WhateverGreen被正确设置-包括只有igpu的配置。然而，FairPlay 1.x "),r("em",[e._v("电影")]),e._v("将只在仅支持igpu的配置上播放大约3-5秒，之后会误以为HDCP不支持。")])])])]),e._v(" "),r("p",[r("strong",[e._v("FairPlay 2.x/3.x")]),e._v(": 基于硬件的DRM，可以在Netflix、Amazon Prime中找到")]),e._v(" "),r("ul",[r("li",[e._v("有几个方法测试:\n"),r("ul",[r("li",[e._v("在Netflix或Amazon Prime上播放节目")]),e._v(" "),r("li",[e._v("播放 Amazon Prime 预告片: "),r("a",{attrs:{href:"https://www.amazon.com/Spider-Man-Far-Home-Tom-Holland/dp/B07TP6D1DP",target:"_blank",rel:"noopener noreferrer"}},[e._v("蜘蛛侠: 英雄远征"),r("OutboundLink")],1),e._v(" "),r("ul",[r("li",[e._v("预告片本身并不使用DRM，但亚马逊仍然会在播放前进行检查")])])])])]),e._v(" "),r("li",[e._v("注意:需要更新的AMD GPU才能工作(Polaris+)")])]),e._v(" "),r("p",[r("strong",[e._v("FairPlay 4.x")]),e._v(": 混合DRM，在AppleTV+上找到")]),e._v(" "),r("ul",[r("li",[e._v("您可以打开TV.app，选择TV+ ->免费Apple TV+首映，然后点击任何一集进行测试，无需任何试用(您需要一个iCloud帐户)")]),e._v(" "),r("li",[e._v("如果你想使用Apple TV+，也可以免费试用")]),e._v(" "),r("li",[e._v("注意:需要没有iGPU (Xeon)或更新的AMD GPU工作(Polaris+)\n"),r("ul",[r("li",[e._v("当iGPU不存在时，可以强制FairPlay 1.x")])])])]),e._v(" "),r("p",[e._v("如果在这些测试中一切正常，则无需继续!否则,继续。")]),e._v(" "),r("h2",{attrs:{id:"修复drm"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#修复drm"}},[e._v("#")]),e._v(" 修复DRM")]),e._v(" "),r("p",[e._v("因此，要修复DRM，我们主要可以走一条路:为DRM打补丁，使用软件或AMD解码。Vit为不同的硬件配置制作了一个很棒的小图表:")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/acidanthera/WhateverGreen/blob/master/Manual/FAQ.Chart.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("WhateverGreen的DRM图标"),r("OutboundLink")],1)])]),e._v(" "),r("p",[e._v("那么如何使用它呢?首先，确定你在图表中有什么配置(AMD代表GPU，而不是CPU)。列出的SMBIOS (IM = iMac, MM = Mac Mini, IMP = iMac Pro, MP = Mac Pro)是你应该使用的，如果你匹配硬件配置。如果你没有匹配图表中的任何配置，你就不走运了。")]),e._v(" "),r("p",[e._v("接下来，确定你需要使用什么Shiki模式。如果您的设置有两种配置，它们将在使用的Shiki标志上有所不同。通常，硬件解码比软件解码更重要。如果mode列为空，则操作完成。否则，你应该使用DeviceProperties > add将"),r("code",[e._v("shikigva")]),e._v("作为属性添加到任何GPU。例如，如果我们需要使用的模式是"),r("code",[e._v("shikigva=80")]),e._v(":")]),e._v(" "),r("p",[r("img",{attrs:{src:a(327),alt:"Example of shikigva in Devices Properties"}})]),e._v(" "),r("p",[e._v("你也可以使用启动参数——它位于mode列中。")]),e._v(" "),r("p",[e._v("这里有一个例子。如果我们有一个Intel i9-9900K和一个RX 560，配置将是“AMD+IGPU”，我们应该使用iMac或Mac Mini SMBIOS(对于这个特定的配置，iMac19,1)。然后我们看到配置有两个选项:一个是模式为"),r("code",[e._v("shikigva=16")]),e._v("，另一个是"),r("code",[e._v("shikigva=80")]),e._v("。我们在“Prime预告片”和“Prime/Netflix”中看到了区别。我们希望Netflix能正常工作，所以我们选择"),r("code",[e._v("shikigva=80")]),e._v("选项。然后将类型为数字/整数和值为"),r("code",[e._v("80")]),e._v("的"),r("code",[e._v("shikigva")]),e._v("注入到我们的iGPU或dGPU中，重新启动，DRM应该可以工作了。")]),e._v(" "),r("p",[e._v("这是另一个例子。这次，我们有一个Ryzen 3700X和一个RX 480。在这种情况下，我们的配置只有“AMD”，我们应该使用iMac Pro或Mac Pro SMBIOS。同样，有两个选项:不设置shiki参数，以及设置"),r("code",[e._v("shikigva=128")]),e._v("。我们更喜欢硬件解码而不是软件解码，因此我们将选择"),r("code",[e._v("shikigva=128")]),e._v("选项，并再次将"),r("code",[e._v("shikigva")]),e._v("注入我们的dGPU，这次的值为"),r("code",[e._v("128")]),e._v("。重新启动后DRM开始工作。")]),e._v(" "),r("p",[r("strong",[e._v("注意:")])]),e._v(" "),r("ul",[r("li",[r("p",[e._v("你可以使用"),r("a",{attrs:{href:"https://github.com/acidanthera/gfxutil/releases",target:"_blank",rel:"noopener noreferrer"}},[e._v("gfxutil"),r("OutboundLink")],1),e._v("找到iGPU/dGPU的路径。")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("path/to/gfxutil -f GFX0")])]),e._v(" "),r("li",[r("code",[e._v("GFX0")]),e._v(": 表示dGPUs，如果安装了多个，请检查IORegistryExplorer中AMD卡的名称")]),e._v(" "),r("li",[r("code",[e._v("IGPU")]),e._v(": 表示IGPU")])])]),e._v(" "),r("li",[r("p",[e._v("如果你使用DeviceProperties注入"),r("code",[e._v("shikigva")]),e._v("，请确保只对一个GPU执行此操作，否则WhateverGreen将使用它首先找到的任何内容，并且不能保证一致性。")])]),e._v(" "),r("li",[r("p",[e._v("IQSV代表英特尔快速同步视频:这仅在iGPU存在并启用并正确设置时有效。")])]),e._v(" "),r("li",[r("p",[e._v("特殊配置(如Haswell + AMD dGPU和iMac SMBIOS，但iGPU是禁用的)不在图表中。你必须自己做研究。")])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://github.com/acidanthera/WhateverGreen/blob/master/WhateverGreen/kern_shiki.hpp",target:"_blank",rel:"noopener noreferrer"}},[e._v("Shiki 来源"),r("OutboundLink")],1),e._v(" 有助于理解标志的作用以及何时使用它们，并可能有助于特殊配置。")])]),e._v(" "),r("li",[r("p",[e._v("对于Big Sur下的 "),r("code",[e._v("VDADecoderCreate failed. err: -12473")]),e._v(" 错误,强制使用AMD解码器(在适用的系统上)可以帮助解决这个问题:")]),e._v(" "),r("div",{staticClass:"language-sh extra-class"},[r("pre",{pre:!0,attrs:{class:"language-sh"}},[r("code",[e._v("defaults "),r("span",{pre:!0,attrs:{class:"token function"}},[e._v("write")]),e._v(" com.apple.AppleGVA gvaForceAMDAVCDecode "),r("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-boolean")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[e._v("yes")]),e._v("\n")])])])])])])}),[],!1,null,null,null);r.default=i.exports}}]);