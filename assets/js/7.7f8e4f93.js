(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{340:function(t,a,s){t.exports=s.p+"assets/img/memory-error-notification.88c0943e.png"},341:function(t,a,s){t.exports=s.p+"assets/img/memory-error-aboutthismac.ecac0f88.png"},342:function(t,a,s){t.exports=s.p+"assets/img/CustomMemory-open.4edb1e60.png"},343:function(t,a,s){t.exports=s.p+"assets/img/system-profiler.1f390279.png"},344:function(t,a,s){t.exports=s.p+"assets/img/memory-example.eb665fb8.png"},345:function(t,a,s){t.exports=s.p+"assets/img/memory-example-done.ee737213.png"},346:function(t,a,s){t.exports=s.p+"assets/img/memory-fixed-system-profiler.3dca4074.png"},347:function(t,a,s){t.exports=s.p+"assets/img/memory-fixed-aboutthismac.e447bb59.png"},462:function(t,a,s){"use strict";s.r(a);var e=s(10),r=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"修复macpro7-1内存错误"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修复macpro7-1内存错误"}},[t._v("#")]),t._v(" 修复MacPro7,1内存错误")]),t._v(" "),a("p",[t._v("在macOS Catalina和更新版本上，MacPro7,1 SMBIOS的用户在每次引导时都会遇到以下错误:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("通知错误")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("关于此Mac错误")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("img",{attrs:{width:"1362",src:s(340)}})]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("img",{attrs:{src:s(341),alt:""}})])])])]),t._v(" "),a("p",[t._v("这个错误的确切原因有点未知，但是解决这个错误的方法是可行的。最常见的消除错误的方法是使用"),a("a",{attrs:{href:"https://github.com/acidanthera/RestrictEvents/releases",target:"_blank",rel:"noopener noreferrer"}},[t._v("RestrictEvents"),a("OutboundLink")],1),t._v("，我们强烈建议所有用户使用这个kext。")]),t._v(" "),a("p",[t._v("对于那些希望尝试传统映射方式的人，请参阅下面的指南。注意，这需要您手动映射所有内存，因此这将是一个耗时的过程。")]),t._v(" "),a("h2",{attrs:{id:"映射我们的内存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#映射我们的内存"}},[t._v("#")]),t._v(" 映射我们的内存")]),t._v(" "),a("p",[t._v("首先，我们要获取以下文件:")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/dortania/OpenCore-Post-Install/blob/master/extra-files/CustomMemory.plist.zip",target:"_blank",rel:"noopener noreferrer"}},[t._v("CustomMemory.plist"),a("OutboundLink")],1),t._v(" "),a("ul",[a("li",[t._v("在OpenCore使用CustomMemory的示例设置")])])]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/acidanthera/dmidecode/releases",target:"_blank",rel:"noopener noreferrer"}},[t._v("dmidecode"),a("OutboundLink")],1),t._v(" "),a("ul",[a("li",[t._v("在OpenCore使用CustomMemory的示例设置")])])])]),t._v(" "),a("p",[t._v("这是一个已经为你设置了属性的预制文件，一旦你打开它，你应该看到以下内容:")]),t._v(" "),a("p",[a("img",{attrs:{src:s(342),alt:""}})]),t._v(" "),a("p",[t._v("从这里我们可以看到许多属性，让我们尝试将其分解:")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#datawidth"}},[t._v("DataWidth")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#errorcorrection"}},[t._v("ErrorCorrection")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#formfactor"}},[t._v("FormFactor")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#maxcapacity"}},[t._v("MaxCapacity")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#totalwidth"}},[t._v("TotalWidth")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#type"}},[t._v("Type")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#typedetail"}},[t._v("TypeDetail")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#devices"}},[t._v("Devices")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#assettag"}},[t._v("AssetTag")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#banklocator"}},[t._v("BankLocator")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#devicelocator"}},[t._v("DeviceLocator")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#manufacturer"}},[t._v("Manufacturer")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#partnumber"}},[t._v("PartNumber")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#serialnumber"}},[t._v("SerialNumber")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#size"}},[t._v("Size")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#speed"}},[t._v("Speed")])])])]),t._v(" "),a("li",[a("a",{attrs:{href:"#cleaning-up"}},[t._v("Cleaning up")])])]),t._v(" "),a("h3",{attrs:{id:"datawidth"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#datawidth"}},[t._v("#")]),t._v(" DataWidth")]),t._v(" "),a("p",[t._v("指定内存的数据宽度，以位为单位。数据宽度为0，总宽度为8，表示设备仅用于提供8个纠错位。")]),t._v(" "),a("p",[t._v("要确定数据宽度，运行以下命令:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("path/to/dmidecode "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-t")]),t._v(" memory "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Data Width:"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 示例输出")]),t._v("\n Data Width: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("64")]),t._v(" bits\n Data Width: Unknown\n Data Width: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("64")]),t._v(" bits\n Data Width: Unknown\n Data Width: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("64")]),t._v(" bits\n Data Width: Unknown\n Data Width: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("64")]),t._v(" bits\n Data Width: Unknown\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 最终值")]),t._v("\nDataWidth "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("64")]),t._v("\n")])])]),a("h3",{attrs:{id:"errorcorrection"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#errorcorrection"}},[t._v("#")]),t._v(" ErrorCorrection")]),t._v(" "),a("p",[t._v("指定ECC支持:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("1 — Other\n2 — Unknown\n3 — None\n4 — Parity\n5 — Single-bit ECC\n6 — Multi-bit ECC\n7 — CRC\n")])])]),a("p",[t._v("运行下面的命令来确定错误修正:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("path/to/dmidecode "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-t")]),t._v(" memory "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Error Correction Type:"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 示例输出")]),t._v("\n Error Correction Type: None\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 最终值")]),t._v("\nErrorCorrection "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n")])])]),a("h3",{attrs:{id:"formfactor"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#formfactor"}},[t._v("#")]),t._v(" FormFactor")]),t._v(" "),a("p",[t._v("指定内存形式")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("1  — Other\n2  — Unknown\n9  — DIMM\n13 — SODIMM\n15 — FB-DIMM\n")])])]),a("p",[t._v("运行如下命令来确定FormFactor:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("path/to/dmidecode "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-t")]),t._v(" memory "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Form Factor:"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 示例输出")]),t._v("\n Form Factor: DIMM\n Form Factor: DIMM\n Form Factor: DIMM\n Form Factor: DIMM\n Form Factor: DIMM\n Form Factor: DIMM\n Form Factor: DIMM\n Form Factor: DIMM\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 最终值")]),t._v("\nFormFactor "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v("\n")])])]),a("h3",{attrs:{id:"maxcapacity"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#maxcapacity"}},[t._v("#")]),t._v(" MaxCapacity")]),t._v(" "),a("p",[t._v("指定系统中支持的最大内存")]),t._v(" "),a("p",[t._v("Type: Bytes")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("8GB   - 8589934592\n16GB  - 17179869184\n32GB  - 34359738368\n64GB  - 68719476736\n128GB - 137438953472\n256GB - 274877906944\n")])])]),a("h3",{attrs:{id:"totalwidth"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#totalwidth"}},[t._v("#")]),t._v(" TotalWidth")]),t._v(" "),a("p",[t._v("指定内存的总宽度(以位为单位)，包括任何检查或纠错位。如果没有纠错位，该值应该等于数据宽度。以上翻译结果来自有道神经网络翻译（YNMT）· 通用领域")]),t._v(" "),a("p",[t._v("要确定TotalWidth，运行以下命令:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("path/to/dmidecode "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-t")]),t._v(" memory "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Total Width:"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 示例输出")]),t._v("\n Total Width: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("72")]),t._v(" bits\n Total Width: Unknown\n Total Width: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("72")]),t._v(" bits\n Total Width: Unknown\n Total Width: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("72")]),t._v(" bits\n Total Width: Unknown\n Total Width: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("72")]),t._v(" bits\n Total Width: Unknown\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 最终值")]),t._v("\nTotalWidth "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("72")]),t._v("\n")])])]),a("h3",{attrs:{id:"type"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#type"}},[t._v("#")]),t._v(" Type")]),t._v(" "),a("p",[t._v("指定内存类型")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("1  — Other\n2  — Unknown\n15 — SDRAM\n18 — DDR\n19 — DDR2\n20 — DDR2 FB-DIMM\n24 — DDR3\n26 — DDR4\n27 — LPDDR\n28 — LPDDR2\n29 — LPDDR3\n30 — LPDDR4\n")])])]),a("p",[t._v("要确定Type，执行以下命令:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("path/to/dmidecode "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-t")]),t._v(" memory "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Type:"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 示例输出")]),t._v("\n Type: DDR4\n Type: Unknown\n Type: DDR4\n Type: Unknown\n Type: DDR4\n Type: Unknown\n Type: DDR4\n Type: Unknown\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 最终值")]),t._v("\nType "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("26")]),t._v("\n")])])]),a("h3",{attrs:{id:"typedetail"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#typedetail"}},[t._v("#")]),t._v(" TypeDetail")]),t._v(" "),a("p",[t._v("指定其他内存类型信息")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Bit 0 — Reserved, set to 0\nBit 1 — Other\nBit 2 — Unknown\nBit 7 — Synchronous\nBit 13 — Registered (buffered)\nBit 14 — Unbuffered (unregistered)\n")])])]),a("p",[t._v("把所有适用的组合起来，例如:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Bit 13 — Registered (buffered)\nBit 14 — Unbuffered (unregistered)\n-----------------------------------\n27 = TypeDetail\n")])])]),a("p",[t._v("要确定TypeDetail，运行以下命令:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("path/to/dmidecode "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-t")]),t._v(" memory "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Type Detail:"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 示例输出")]),t._v("\n Type Detail: Synchronous\n Type Detail: Synchronous\n Type Detail: Synchronous\n Type Detail: Synchronous\n Type Detail: Synchronous\n Type Detail: Synchronous\n Type Detail: Synchronous\n Type Detail: Synchronous\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 最终值")]),t._v("\nTypeDetail "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v("\n")])])]),a("h3",{attrs:{id:"devices"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#devices"}},[t._v("#")]),t._v(" Devices")]),t._v(" "),a("p",[t._v("存储设备的数组，我们在这里施展魔法来修复错误。在我提供的示例CustomMemory.plist中，我们在这里列出了12个插槽。然后，在macOS中打开System Profiler并查看Memory选项卡:")]),t._v(" "),a("p",[a("img",{attrs:{src:s(343),alt:""}})]),t._v(" "),a("p",[t._v("在这里，我们可以看到哪些槽被内存填充了，哪些是空的。对于填充的插槽，只需阅读下面关于如何获取信息的内容。然而，对于空槽，你需要添加一些空白信息，以为macOS已经填充了设备。确保到最后，总共有12个插槽装满了设备。")]),t._v(" "),a("p",[t._v("填充槽和假槽的例子:")]),t._v(" "),a("p",[a("img",{attrs:{src:s(344),alt:""}})]),t._v(" "),a("p",[t._v("我们建议将Size和Speed都设置为1，以确保从内存中提取的应用程序不会混淆，因为您拥有的内存超过了应该使用的内存。")]),t._v(" "),a("p",[t._v("接下来让我们分解属性:")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#assettag"}},[t._v("AssetTag")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#banklocator"}},[t._v("BankLocator")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#devicelocator"}},[t._v("DeviceLocator")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#manufacturer"}},[t._v("Manufacturer")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#partnumber"}},[t._v("PartNumber")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#serialnumber"}},[t._v("SerialNumber")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#size"}},[t._v("Size")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#speed"}},[t._v("Speed")])])]),t._v(" "),a("h4",{attrs:{id:"assettag"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#assettag"}},[t._v("#")]),t._v(" AssetTag")]),t._v(" "),a("p",[t._v("要确定AssetTag，运行以下命令:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("path/to/dmidecode "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-t")]),t._v(" memory "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Asset Tag:"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#示例输出")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 最终值")]),t._v("\n")])])]),a("ul",[a("li",[t._v("如果dmidecode打印出"),a("code",[t._v("Not Specified")]),t._v("，你可以将这个条目留空")])]),t._v(" "),a("h4",{attrs:{id:"banklocator"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#banklocator"}},[t._v("#")]),t._v(" BankLocator")]),t._v(" "),a("p",[t._v("To determine BankLocator, run the following:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("path/to/dmidecode "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-t")]),t._v(" memory "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Bank Locator:"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#示例输出")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 最终值")]),t._v("\n")])])]),a("ul",[a("li",[t._v("如果dmidecode打印出"),a("code",[t._v("Not Specified")]),t._v("，你可以将这个条目留空")])]),t._v(" "),a("h4",{attrs:{id:"devicelocator"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#devicelocator"}},[t._v("#")]),t._v(" DeviceLocator")]),t._v(" "),a("p",[t._v("要确定DeviceLocator，运行以下命令:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("path/to/dmidecode "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-t")]),t._v(" memory "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Locator:"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#示例输出")]),t._v("\n Locator: DIMM_A1\n Locator: DIMM_A2\n Locator: DIMM_B1\n Locator: DIMM_B2\n Locator: DIMM_C1\n Locator: DIMM_C2\n Locator: DIMM_D1\n Locator: DIMM_D2\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 最终值")]),t._v("\nEntry "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(":  DIMM_A1\nEntry "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(":  DIMM_A2\nEntry "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(":  DIMM_B1\nEntry "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(":  DIMM_B2\nEntry "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(":  DIMM_C1\nEntry "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v(":  DIMM_C2\nEntry "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v(":  DIMM_D1\nEntry "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(":  DIMM_D2\nEntry "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v(":  DIMM_EMPTY\nEntry "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(": DIMM_EMPTY\nEntry "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),t._v(": DIMM_EMPTY\nEntry "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v(": DIMM_EMPTY\n")])])]),a("h4",{attrs:{id:"manufacturer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#manufacturer"}},[t._v("#")]),t._v(" Manufacturer")]),t._v(" "),a("p",[t._v("要确定Manufacturer，运行以下命令:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("path/to/dmidecode "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-t")]),t._v(" memory "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Manufacturer:"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#示例输出")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 最终值")]),t._v("\n")])])]),a("h4",{attrs:{id:"partnumber"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#partnumber"}},[t._v("#")]),t._v(" PartNumber")]),t._v(" "),a("p",[t._v("要确定PartNumber，执行以下命令:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("path/to/dmidecode "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-t")]),t._v(" memory "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Part Number:"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#示例输出")]),t._v("\n Part Number: KHX2666C16/8G\n Part Number: NO DIMM\n Part Number: KHX2666C16/8G\n Part Number: NO DIMM\n Part Number: KHX2666C16/8G\n Part Number: NO DIMM\n Part Number: KHX2666C15D4/8G\n Part Number: NO DIMM\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 最终值")]),t._v("\nEntry "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(":  KHX2666C16/8G\nEntry "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(":  EmptyDIMM\nEntry "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(":  KHX2666C16/8G\nEntry "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(":  EmptyDIMM\nEntry "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(":  KHX2666C16/8G\nEntry "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v(":  EmptyDIMM\nEntry "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v(":  KHX2666C15D4/8G\nEntry "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(":  EmptyDIMM\nEntry "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v(":  EmptyDIMM\nEntry "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(": EmptyDIMM\nEntry "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),t._v(": EmptyDIMM\nEntry "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v(": EmptyDIMM\n")])])]),a("h4",{attrs:{id:"serialnumber"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#serialnumber"}},[t._v("#")]),t._v(" SerialNumber")]),t._v(" "),a("p",[t._v("要确定SerialNumber，运行如下命令:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("path/to/dmidecode "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-t")]),t._v(" memory "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Serial Number:"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#示例输出")]),t._v("\n Serial Number: 0F095257\n Serial Number: NO DIMM\n Serial Number: 0C099A57\n Serial Number: NO DIMM\n Serial Number: 752EDED8\n Serial Number: NO DIMM\n Serial Number: A2032E84\n Serial Number: NO DIMM\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 最终值")]),t._v("\nEntry "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(":  0F095257\nEntry "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(":  EmptyDIMM\nEntry "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(":  0C099A57\nEntry "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(":  EmptyDIMM\nEntry "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(":  752EDED8\nEntry "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v(":  EmptyDIMM\nEntry "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v(":  A2032E84\nEntry "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(":  EmptyDIMM\nEntry "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v(":  EmptyDIMM\nEntry "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(": EmptyDIMM\nEntry "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),t._v(": EmptyDIMM\nEntry "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v(": EmptyDIMM\n")])])]),a("h4",{attrs:{id:"size"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#size"}},[t._v("#")]),t._v(" Size")]),t._v(" "),a("p",[t._v("单个内存棒的大小(以MB为单位)")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("1GB  - 1024\n2GB  - 2048\n4GB  - 4096\n8GB  - 8192\n16GB - 16384\n32GB - 32768\n64GB - 65536\n12GB - 131072\n")])])]),a("p",[t._v("要确定Size，运行以下命令:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("path/to/dmidecode "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-t")]),t._v(" memory "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Size:"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#示例输出")]),t._v("\n Size: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(" GB\n Size: No Module Installed\n Size: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(" GB\n Size: No Module Installed\n Size: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(" GB\n Size: No Module Installed\n Size: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(" GB\n Size: No Module Installed\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 最终值")]),t._v("\nEntry "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(":  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8192")]),t._v("\nEntry "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(":  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nEntry "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(":  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8192")]),t._v("\nEntry "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(":  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nEntry "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(":  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8192")]),t._v("\nEntry "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v(":  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nEntry "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v(":  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8192")]),t._v("\nEntry "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(":  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nEntry "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v(":  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nEntry "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(": "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nEntry "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),t._v(": "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nEntry "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v(": "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])])]),a("h4",{attrs:{id:"speed"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#speed"}},[t._v("#")]),t._v(" Speed")]),t._v(" "),a("p",[t._v("以兆赫为单位的内存速度")]),t._v(" "),a("p",[t._v("ex: "),a("code",[t._v("3000Mhz")])]),t._v(" "),a("p",[t._v("要确定Speed，运行以下命令:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("path/to/dmidecode "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-t")]),t._v(" memory "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Speed:"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#示例输出")]),t._v("\n Speed: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2666")]),t._v(" MT/s\n Speed: Unknown\n Speed: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2666")]),t._v(" MT/s\n Speed: Unknown\n Speed: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2666")]),t._v(" MT/s\n Speed: Unknown\n Speed: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2666")]),t._v(" MT/s\n Speed: Unknown\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 最终值")]),t._v("\nEntry "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(":  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2666")]),t._v("\nEntry "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(":  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nEntry "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(":  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2666")]),t._v("\nEntry "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(":  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nEntry "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(":  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2666")]),t._v("\nEntry "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v(":  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nEntry "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v(":  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2666")]),t._v("\nEntry "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(":  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nEntry "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v(":  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nEntry "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(": "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nEntry "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),t._v(": "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nEntry "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v(": "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])])]),a("h2",{attrs:{id:"清理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#清理"}},[t._v("#")]),t._v(" 清理")]),t._v(" "),a("p",[t._v("现在已经构建了表，现在可以将它合并到config.plist中。")]),t._v(" "),a("p",[t._v("只需从CustomMemory.plist复制你的工作并粘贴到platformminfo:")]),t._v(" "),a("p",[a("img",{attrs:{src:s(345),alt:""}})]),t._v(" "),a("p",[t._v("复制完成后，启用"),a("code",[t._v("PlatformInfo -> CustomMemory")]),t._v("并重启。现在错误应该不会再出现了!")]),t._v(" "),a("p",[t._v("提醒你必须用内存"),a("strong",[t._v("填充")]),t._v("所有的12个槽，否则错误将不会消失:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("修复系统分析")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("修复关于此Mac")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("img",{attrs:{src:s(346),alt:""}})]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("img",{attrs:{src:s(347),alt:""}})])])])])])}),[],!1,null,null,null);a.default=r.exports}}]);