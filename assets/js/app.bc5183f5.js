(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[]]);!function(n){function e(e){for(var o,i,s=e[0],c=e[1],l=e[2],u=0,d=[];u<s.length;u++)i=s[u],Object.prototype.hasOwnProperty.call(r,i)&&r[i]&&d.push(r[i][0]),r[i]=0;for(o in c)Object.prototype.hasOwnProperty.call(c,o)&&(n[o]=c[o]);for(p&&p(e);d.length;)d.shift()();return a.push.apply(a,l||[]),t()}function t(){for(var n,e=0;e<a.length;e++){for(var t=a[e],o=!0,s=1;s<t.length;s++){var c=t[s];0!==r[c]&&(o=!1)}o&&(a.splice(e--,1),n=i(i.s=t[0]))}return n}var o={},r={1:0},a=[];function i(e){if(o[e])return o[e].exports;var t=o[e]={i:e,l:!1,exports:{}};return n[e].call(t.exports,t,t.exports,i),t.l=!0,t.exports}i.e=function(n){var e=[],t=r[n];if(0!==t)if(t)e.push(t[2]);else{var o=new Promise((function(e,o){t=r[n]=[e,o]}));e.push(t[2]=o);var a,s=document.createElement("script");s.charset="utf-8",s.timeout=120,i.nc&&s.setAttribute("nonce",i.nc),s.src=function(n){return i.p+"assets/js/"+({}[n]||n)+"."+{2:"57bf108e",3:"05486575",4:"fc0c659c",5:"7726045b",6:"6bed9d83",7:"7f8e4f93",8:"9c087d84",9:"6ae67583",10:"53138884",11:"24244bb4",12:"f408468b",13:"f12d72de",14:"66239405",15:"e41c9256",16:"7f463d5d",17:"79836a21",18:"5a1ee49a",19:"9b1de130",20:"f8240d46",21:"0fbda3cc",22:"555b37c4",23:"e3698e1a",24:"1e470ee6",25:"d819737a",26:"c0e23bd8",27:"bbbd6620",28:"f88785f6",29:"da9fd454",30:"b78d8df7",31:"951a4150",32:"7dd06d7d",33:"ff09c753",34:"e064a996",35:"586f0e8f",36:"b6cf674f",37:"5f0aa72a",38:"5c7ff15e",39:"184c2a48",40:"ef8fca90",41:"bb77a1e1",42:"9e834f40",43:"d31736e5",44:"1f8908a6",45:"1a8aa02e",46:"2e3f8639",47:"9e42c418",48:"03053e2d",49:"efe2f9eb"}[n]+".js"}(n);var c=new Error;a=function(e){s.onerror=s.onload=null,clearTimeout(l);var t=r[n];if(0!==t){if(t){var o=e&&("load"===e.type?"missing":e.type),a=e&&e.target&&e.target.src;c.message="Loading chunk "+n+" failed.\n("+o+": "+a+")",c.name="ChunkLoadError",c.type=o,c.request=a,t[1](c)}r[n]=void 0}};var l=setTimeout((function(){a({type:"timeout",target:s})}),12e4);s.onerror=s.onload=a,document.head.appendChild(s)}return Promise.all(e)},i.m=n,i.c=o,i.d=function(n,e,t){i.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:t})},i.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},i.t=function(n,e){if(1&e&&(n=i(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var t=Object.create(null);if(i.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var o in n)i.d(t,o,function(e){return n[e]}.bind(null,o));return t},i.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return i.d(e,"a",e),e},i.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},i.p="/OpenCore-Post-Install/",i.oe=function(n){throw console.error(n),n};var s=window.webpackJsonp=window.webpackJsonp||[],c=s.push.bind(s);s.push=e,s=s.slice();for(var l=0;l<s.length;l++)e(s[l]);var p=c;a.push([100,0]),t()}([function(n,e,t){var o=t(53),r=o.all;n.exports=o.IS_HTMLDDA?function(n){return"function"==typeof n||n===r}:function(n){return"function"==typeof n}},function(n,e){var t=function(n){return n&&n.Math==Math&&n};n.exports=t("object"==typeof globalThis&&globalThis)||t("object"==typeof window&&window)||t("object"==typeof self&&self)||t("object"==typeof global&&global)||function(){return this}()||Function("return this")()},function(n,e){n.exports=function(n){try{return!!n()}catch(n){return!0}}},function(n,e,t){var o=t(27),r=Function.prototype,a=r.call,i=o&&r.bind.bind(a,a);n.exports=o?i:function(n){return function(){return a.apply(n,arguments)}}},function(n,e,t){var o=t(2);n.exports=!o((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))},function(n,e){var t=Array.isArray;n.exports=t},function(n,e,t){var o=t(67),r="object"==typeof self&&self&&self.Object===Object&&self,a=o||r||Function("return this")();n.exports=a},function(n,e,t){var o=t(3),r=t(30),a=o({}.hasOwnProperty);n.exports=Object.hasOwn||function(n,e){return a(r(n),e)}},function(n,e,t){var o=t(0),r=t(53),a=r.all;n.exports=r.IS_HTMLDDA?function(n){return"object"==typeof n?null!==n:o(n)||n===a}:function(n){return"object"==typeof n?null!==n:o(n)}},function(n,e,t){var o=t(159),r=t(162);n.exports=function(n,e){var t=r(n,e);return o(t)?t:void 0}},function(n,e,t){"use strict";function o(n,e,t,o,r,a,i,s){var c,l="function"==typeof n?n.options:n;if(e&&(l.render=e,l.staticRenderFns=t,l._compiled=!0),o&&(l.functional=!0),a&&(l._scopeId="data-v-"+a),i?(c=function(n){(n=n||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(n=__VUE_SSR_CONTEXT__),r&&r.call(this,n),n&&n._registeredComponents&&n._registeredComponents.add(i)},l._ssrRegister=c):r&&(c=s?function(){r.call(this,(l.functional?this.parent:this).$root.$options.shadowRoot)}:r),c)if(l.functional){l._injectStyles=c;var p=l.render;l.render=function(n,e){return c.call(e),p(n,e)}}else{var u=l.beforeCreate;l.beforeCreate=u?[].concat(u,c):[c]}return{exports:n,options:l}}t.d(e,"a",(function(){return o}))},function(n,e){n.exports=function(n){return null!=n&&"object"==typeof n}},function(n,e,t){var o=t(13),r=t(144),a=t(145),i=o?o.toStringTag:void 0;n.exports=function(n){return null==n?void 0===n?"[object Undefined]":"[object Null]":i&&i in Object(n)?r(n):a(n)}},function(n,e,t){var o=t(6).Symbol;n.exports=o},function(n,e,t){var o=t(4),r=t(62),a=t(96),i=t(25),s=t(52),c=TypeError,l=Object.defineProperty,p=Object.getOwnPropertyDescriptor;e.f=o?a?function(n,e,t){if(i(n),e=s(e),i(t),"function"==typeof n&&"prototype"===e&&"value"in t&&"writable"in t&&!t.writable){var o=p(n,e);o&&o.writable&&(n[e]=t.value,t={configurable:"configurable"in t?t.configurable:o.configurable,enumerable:"enumerable"in t?t.enumerable:o.enumerable,writable:!1})}return l(n,e,t)}:l:function(n,e,t){if(i(n),e=s(e),i(t),r)try{return l(n,e,t)}catch(n){}if("get"in t||"set"in t)throw c("Accessors not supported");return"value"in t&&(n[e]=t.value),n}},function(n,e,t){var o=t(3),r=o({}.toString),a=o("".slice);n.exports=function(n){return a(r(n),8,-1)}},function(n,e,t){var o=t(1),r=t(0),a=function(n){return r(n)?n:void 0};n.exports=function(n,e){return arguments.length<2?a(o[n]):o[n]&&o[n][e]}},function(n,e,t){var o=t(4),r=t(14),a=t(33);n.exports=o?function(n,e,t){return r.f(n,e,a(1,t))}:function(n,e,t){return n[e]=t,n}},function(n,e,t){var o=t(149),r=t(150),a=t(151),i=t(152),s=t(153);function c(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var o=n[e];this.set(o[0],o[1])}}c.prototype.clear=o,c.prototype.delete=r,c.prototype.get=a,c.prototype.has=i,c.prototype.set=s,n.exports=c},function(n,e,t){var o=t(69);n.exports=function(n,e){for(var t=n.length;t--;)if(o(n[t][0],e))return t;return-1}},function(n,e,t){var o=t(9)(Object,"create");n.exports=o},function(n,e,t){var o=t(171);n.exports=function(n,e){var t=n.__data__;return o(e)?t["string"==typeof e?"string":"hash"]:t.map}},function(n,e,t){var o=t(43);n.exports=function(n){if("string"==typeof n||o(n))return n;var e=n+"";return"0"==e&&1/n==-1/0?"-0":e}},function(n,e){var t=/^\s+|\s+$/g,o=/^[-+]0x[0-9a-f]+$/i,r=/^0b[01]+$/i,a=/^0o[0-7]+$/i,i=parseInt,s="object"==typeof global&&global&&global.Object===Object&&global,c="object"==typeof self&&self&&self.Object===Object&&self,l=s||c||Function("return this")(),p=Object.prototype.toString,u=Math.max,d=Math.min,m=function(){return l.Date.now()};function f(n){var e=typeof n;return!!n&&("object"==e||"function"==e)}function h(n){if("number"==typeof n)return n;if(function(n){return"symbol"==typeof n||function(n){return!!n&&"object"==typeof n}(n)&&"[object Symbol]"==p.call(n)}(n))return NaN;if(f(n)){var e="function"==typeof n.valueOf?n.valueOf():n;n=f(e)?e+"":e}if("string"!=typeof n)return 0===n?n:+n;n=n.replace(t,"");var s=r.test(n);return s||a.test(n)?i(n.slice(2),s?2:8):o.test(n)?NaN:+n}n.exports=function(n,e,t){var o,r,a,i,s,c,l=0,p=!1,v=!1,g=!0;if("function"!=typeof n)throw new TypeError("Expected a function");function b(e){var t=o,a=r;return o=r=void 0,l=e,i=n.apply(a,t)}function y(n){return l=n,s=setTimeout(S,e),p?b(n):i}function x(n){var t=n-c;return void 0===c||t>=e||t<0||v&&n-l>=a}function S(){var n=m();if(x(n))return C(n);s=setTimeout(S,function(n){var t=e-(n-c);return v?d(t,a-(n-l)):t}(n))}function C(n){return s=void 0,g&&o?b(n):(o=r=void 0,i)}function w(){var n=m(),t=x(n);if(o=arguments,r=this,c=n,t){if(void 0===s)return y(c);if(v)return s=setTimeout(S,e),b(c)}return void 0===s&&(s=setTimeout(S,e)),i}return e=h(e)||0,f(t)&&(p=!!t.leading,a=(v="maxWait"in t)?u(h(t.maxWait)||0,e):a,g="trailing"in t?!!t.trailing:g),w.cancel=function(){void 0!==s&&clearTimeout(s),l=0,o=c=r=s=void 0},w.flush=function(){return void 0===s?i:C(m())},w}},function(n,e,t){var o,r;
/* NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
 * @license MIT */void 0===(r="function"==typeof(o=function(){var n,e,t={version:"0.2.0"},o=t.settings={minimum:.08,easing:"ease",positionUsing:"",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,showSpinner:!0,barSelector:'[role="bar"]',spinnerSelector:'[role="spinner"]',parent:"body",template:'<div class="bar" role="bar"><div class="peg"></div></div><div class="spinner" role="spinner"><div class="spinner-icon"></div></div>'};function r(n,e,t){return n<e?e:n>t?t:n}function a(n){return 100*(-1+n)}t.configure=function(n){var e,t;for(e in n)void 0!==(t=n[e])&&n.hasOwnProperty(e)&&(o[e]=t);return this},t.status=null,t.set=function(n){var e=t.isStarted();n=r(n,o.minimum,1),t.status=1===n?null:n;var c=t.render(!e),l=c.querySelector(o.barSelector),p=o.speed,u=o.easing;return c.offsetWidth,i((function(e){""===o.positionUsing&&(o.positionUsing=t.getPositioningCSS()),s(l,function(n,e,t){var r;return(r="translate3d"===o.positionUsing?{transform:"translate3d("+a(n)+"%,0,0)"}:"translate"===o.positionUsing?{transform:"translate("+a(n)+"%,0)"}:{"margin-left":a(n)+"%"}).transition="all "+e+"ms "+t,r}(n,p,u)),1===n?(s(c,{transition:"none",opacity:1}),c.offsetWidth,setTimeout((function(){s(c,{transition:"all "+p+"ms linear",opacity:0}),setTimeout((function(){t.remove(),e()}),p)}),p)):setTimeout(e,p)})),this},t.isStarted=function(){return"number"==typeof t.status},t.start=function(){t.status||t.set(0);var n=function(){setTimeout((function(){t.status&&(t.trickle(),n())}),o.trickleSpeed)};return o.trickle&&n(),this},t.done=function(n){return n||t.status?t.inc(.3+.5*Math.random()).set(1):this},t.inc=function(n){var e=t.status;return e?("number"!=typeof n&&(n=(1-e)*r(Math.random()*e,.1,.95)),e=r(e+n,0,.994),t.set(e)):t.start()},t.trickle=function(){return t.inc(Math.random()*o.trickleRate)},n=0,e=0,t.promise=function(o){return o&&"resolved"!==o.state()?(0===e&&t.start(),n++,e++,o.always((function(){0==--e?(n=0,t.done()):t.set((n-e)/n)})),this):this},t.render=function(n){if(t.isRendered())return document.getElementById("nprogress");l(document.documentElement,"nprogress-busy");var e=document.createElement("div");e.id="nprogress",e.innerHTML=o.template;var r,i=e.querySelector(o.barSelector),c=n?"-100":a(t.status||0),p=document.querySelector(o.parent);return s(i,{transition:"all 0 linear",transform:"translate3d("+c+"%,0,0)"}),o.showSpinner||(r=e.querySelector(o.spinnerSelector))&&d(r),p!=document.body&&l(p,"nprogress-custom-parent"),p.appendChild(e),e},t.remove=function(){p(document.documentElement,"nprogress-busy"),p(document.querySelector(o.parent),"nprogress-custom-parent");var n=document.getElementById("nprogress");n&&d(n)},t.isRendered=function(){return!!document.getElementById("nprogress")},t.getPositioningCSS=function(){var n=document.body.style,e="WebkitTransform"in n?"Webkit":"MozTransform"in n?"Moz":"msTransform"in n?"ms":"OTransform"in n?"O":"";return e+"Perspective"in n?"translate3d":e+"Transform"in n?"translate":"margin"};var i=function(){var n=[];function e(){var t=n.shift();t&&t(e)}return function(t){n.push(t),1==n.length&&e()}}(),s=function(){var n=["Webkit","O","Moz","ms"],e={};function t(t){return t=t.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,(function(n,e){return e.toUpperCase()})),e[t]||(e[t]=function(e){var t=document.body.style;if(e in t)return e;for(var o,r=n.length,a=e.charAt(0).toUpperCase()+e.slice(1);r--;)if((o=n[r]+a)in t)return o;return e}(t))}function o(n,e,o){e=t(e),n.style[e]=o}return function(n,e){var t,r,a=arguments;if(2==a.length)for(t in e)void 0!==(r=e[t])&&e.hasOwnProperty(t)&&o(n,t,r);else o(n,a[1],a[2])}}();function c(n,e){return("string"==typeof n?n:u(n)).indexOf(" "+e+" ")>=0}function l(n,e){var t=u(n),o=t+e;c(t,e)||(n.className=o.substring(1))}function p(n,e){var t,o=u(n);c(n,e)&&(t=o.replace(" "+e+" "," "),n.className=t.substring(1,t.length-1))}function u(n){return(" "+(n.className||"")+" ").replace(/\s+/gi," ")}function d(n){n&&n.parentNode&&n.parentNode.removeChild(n)}return t})?o.call(e,t,e,n):o)||(n.exports=r)},function(n,e,t){var o=t(8),r=String,a=TypeError;n.exports=function(n){if(o(n))return n;throw a(r(n)+" is not an object")}},function(n,e,t){var o=t(1),r=t(49).f,a=t(17),i=t(108),s=t(35),c=t(63),l=t(121);n.exports=function(n,e){var t,p,u,d,m,f=n.target,h=n.global,v=n.stat;if(t=h?o:v?o[f]||s(f,{}):(o[f]||{}).prototype)for(p in e){if(d=e[p],u=n.dontCallGetSet?(m=r(t,p))&&m.value:t[p],!l(h?p:f+(v?".":"#")+p,n.forced)&&void 0!==u){if(typeof d==typeof u)continue;c(d,u)}(n.sham||u&&u.sham)&&a(d,"sham",!0),i(t,p,d,n)}}},function(n,e,t){var o=t(2);n.exports=!o((function(){var n=function(){}.bind();return"function"!=typeof n||n.hasOwnProperty("prototype")}))},function(n,e,t){var o=t(45),r=t(50);n.exports=function(n){return o(r(n))}},function(n,e,t){var o=t(1),r=t(59),a=t(7),i=t(61),s=t(57),c=t(56),l=r("wks"),p=o.Symbol,u=p&&p.for,d=c?p:p&&p.withoutSetter||i;n.exports=function(n){if(!a(l,n)||!s&&"string"!=typeof l[n]){var e="Symbol."+n;s&&a(p,n)?l[n]=p[n]:l[n]=c&&u?u(e):d(e)}return l[n]}},function(n,e,t){var o=t(50),r=Object;n.exports=function(n){return r(o(n))}},function(n,e,t){var o=t(119);n.exports=function(n){return o(n.length)}},function(n,e,t){var o=t(27),r=Function.prototype.call;n.exports=o?r.bind(r):function(){return r.apply(r,arguments)}},function(n,e){n.exports=function(n,e){return{enumerable:!(1&n),configurable:!(2&n),writable:!(4&n),value:e}}},function(n,e,t){var o=t(1),r=t(35),a=o["__core-js_shared__"]||r("__core-js_shared__",{});n.exports=a},function(n,e,t){var o=t(1),r=Object.defineProperty;n.exports=function(n,e){try{r(o,n,{value:e,configurable:!0,writable:!0})}catch(t){o[n]=e}return e}},function(n,e,t){var o=t(143),r=t(11),a=Object.prototype,i=a.hasOwnProperty,s=a.propertyIsEnumerable,c=o(function(){return arguments}())?o:function(n){return r(n)&&i.call(n,"callee")&&!s.call(n,"callee")};n.exports=c},function(n,e,t){var o=t(9)(t(6),"Map");n.exports=o},function(n,e){n.exports=function(n){var e=typeof n;return null!=n&&("object"==e||"function"==e)}},function(n,e,t){var o=t(163),r=t(170),a=t(172),i=t(173),s=t(174);function c(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var o=n[e];this.set(o[0],o[1])}}c.prototype.clear=o,c.prototype.delete=r,c.prototype.get=a,c.prototype.has=i,c.prototype.set=s,n.exports=c},function(n,e){n.exports=function(n){var e=-1,t=Array(n.size);return n.forEach((function(n){t[++e]=n})),t}},function(n,e){n.exports=function(n){return"number"==typeof n&&n>-1&&n%1==0&&n<=9007199254740991}},function(n,e,t){var o=t(5),r=t(43),a=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,i=/^\w*$/;n.exports=function(n,e){if(o(n))return!1;var t=typeof n;return!("number"!=t&&"symbol"!=t&&"boolean"!=t&&null!=n&&!r(n))||(i.test(n)||!a.test(n)||null!=e&&n in Object(e))}},function(n,e,t){var o=t(12),r=t(11);n.exports=function(n){return"symbol"==typeof n||r(n)&&"[object Symbol]"==o(n)}},function(n,e){n.exports=function(n){return n}},function(n,e,t){var o=t(3),r=t(2),a=t(15),i=Object,s=o("".split);n.exports=r((function(){return!i("z").propertyIsEnumerable(0)}))?function(n){return"String"==a(n)?s(n,""):i(n)}:i},function(n,e,t){var o=t(0),r=t(106),a=TypeError;n.exports=function(n){if(o(n))return n;throw a(r(n)+" is not a function")}},function(n,e){n.exports={}},function(n,e){n.exports=function(n){return n.webpackPolyfill||(n.deprecate=function(){},n.paths=[],n.children||(n.children=[]),Object.defineProperty(n,"loaded",{enumerable:!0,get:function(){return n.l}}),Object.defineProperty(n,"id",{enumerable:!0,get:function(){return n.i}}),n.webpackPolyfill=1),n}},function(n,e,t){var o=t(4),r=t(32),a=t(102),i=t(33),s=t(28),c=t(52),l=t(7),p=t(62),u=Object.getOwnPropertyDescriptor;e.f=o?u:function(n,e){if(n=s(n),e=c(e),p)try{return u(n,e)}catch(n){}if(l(n,e))return i(!r(a.f,n,e),n[e])}},function(n,e,t){var o=t(51),r=TypeError;n.exports=function(n){if(o(n))throw r("Can't call method on "+n);return n}},function(n,e){n.exports=function(n){return null==n}},function(n,e,t){var o=t(103),r=t(54);n.exports=function(n){var e=o(n,"string");return r(e)?e:e+""}},function(n,e){var t="object"==typeof document&&document.all,o=void 0===t&&void 0!==t;n.exports={all:t,IS_HTMLDDA:o}},function(n,e,t){var o=t(16),r=t(0),a=t(55),i=t(56),s=Object;n.exports=i?function(n){return"symbol"==typeof n}:function(n){var e=o("Symbol");return r(e)&&a(e.prototype,s(n))}},function(n,e,t){var o=t(3);n.exports=o({}.isPrototypeOf)},function(n,e,t){var o=t(57);n.exports=o&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},function(n,e,t){var o=t(58),r=t(2);n.exports=!!Object.getOwnPropertySymbols&&!r((function(){var n=Symbol();return!String(n)||!(Object(n)instanceof Symbol)||!Symbol.sham&&o&&o<41}))},function(n,e,t){var o,r,a=t(1),i=t(104),s=a.process,c=a.Deno,l=s&&s.versions||c&&c.version,p=l&&l.v8;p&&(r=(o=p.split("."))[0]>0&&o[0]<4?1:+(o[0]+o[1])),!r&&i&&(!(o=i.match(/Edge\/(\d+)/))||o[1]>=74)&&(o=i.match(/Chrome\/(\d+)/))&&(r=+o[1]),n.exports=r},function(n,e,t){var o=t(60),r=t(34);(n.exports=function(n,e){return r[n]||(r[n]=void 0!==e?e:{})})("versions",[]).push({version:"3.27.1",mode:o?"pure":"global",copyright:"© 2014-2022 Denis Pushkarev (zloirock.ru)",license:"https://github.com/zloirock/core-js/blob/v3.27.1/LICENSE",source:"https://github.com/zloirock/core-js"})},function(n,e){n.exports=!1},function(n,e,t){var o=t(3),r=0,a=Math.random(),i=o(1..toString);n.exports=function(n){return"Symbol("+(void 0===n?"":n)+")_"+i(++r+a,36)}},function(n,e,t){var o=t(4),r=t(2),a=t(95);n.exports=!o&&!r((function(){return 7!=Object.defineProperty(a("div"),"a",{get:function(){return 7}}).a}))},function(n,e,t){var o=t(7),r=t(114),a=t(49),i=t(14);n.exports=function(n,e,t){for(var s=r(e),c=i.f,l=a.f,p=0;p<s.length;p++){var u=s[p];o(n,u)||t&&o(t,u)||c(n,u,l(e,u))}}},function(n,e,t){var o=t(118);n.exports=function(n){var e=+n;return e!=e||0===e?0:o(e)}},function(n,e,t){var o=t(3),r=t(25),a=t(131);n.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var n,e=!1,t={};try{(n=o(Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set))(t,[]),e=t instanceof Array}catch(n){}return function(t,o){return r(t),a(o),e?n(t,o):t.__proto__=o,t}}():void 0)},function(n,e){n.exports=function(n,e){for(var t=-1,o=e.length,r=n.length;++t<o;)n[r+t]=e[t];return n}},function(n,e){var t="object"==typeof global&&global&&global.Object===Object&&global;n.exports=t},function(n,e,t){var o=t(18),r=t(154),a=t(155),i=t(156),s=t(157),c=t(158);function l(n){var e=this.__data__=new o(n);this.size=e.size}l.prototype.clear=r,l.prototype.delete=a,l.prototype.get=i,l.prototype.has=s,l.prototype.set=c,n.exports=l},function(n,e){n.exports=function(n,e){return n===e||n!=n&&e!=e}},function(n,e,t){var o=t(12),r=t(38);n.exports=function(n){if(!r(n))return!1;var e=o(n);return"[object Function]"==e||"[object GeneratorFunction]"==e||"[object AsyncFunction]"==e||"[object Proxy]"==e}},function(n,e){var t=Function.prototype.toString;n.exports=function(n){if(null!=n){try{return t.call(n)}catch(n){}try{return n+""}catch(n){}}return""}},function(n,e,t){var o=t(175),r=t(11);n.exports=function n(e,t,a,i,s){return e===t||(null==e||null==t||!r(e)&&!r(t)?e!=e&&t!=t:o(e,t,a,i,n,s))}},function(n,e,t){var o=t(74),r=t(178),a=t(75);n.exports=function(n,e,t,i,s,c){var l=1&t,p=n.length,u=e.length;if(p!=u&&!(l&&u>p))return!1;var d=c.get(n),m=c.get(e);if(d&&m)return d==e&&m==n;var f=-1,h=!0,v=2&t?new o:void 0;for(c.set(n,e),c.set(e,n);++f<p;){var g=n[f],b=e[f];if(i)var y=l?i(b,g,f,e,n,c):i(g,b,f,n,e,c);if(void 0!==y){if(y)continue;h=!1;break}if(v){if(!r(e,(function(n,e){if(!a(v,e)&&(g===n||s(g,n,t,i,c)))return v.push(e)}))){h=!1;break}}else if(g!==b&&!s(g,b,t,i,c)){h=!1;break}}return c.delete(n),c.delete(e),h}},function(n,e,t){var o=t(39),r=t(176),a=t(177);function i(n){var e=-1,t=null==n?0:n.length;for(this.__data__=new o;++e<t;)this.add(n[e])}i.prototype.add=i.prototype.push=r,i.prototype.has=a,n.exports=i},function(n,e){n.exports=function(n,e){return n.has(e)}},function(n,e,t){var o=t(188),r=t(194),a=t(80);n.exports=function(n){return a(n)?o(n):r(n)}},function(n,e,t){(function(n){var o=t(6),r=t(190),a=e&&!e.nodeType&&e,i=a&&"object"==typeof n&&n&&!n.nodeType&&n,s=i&&i.exports===a?o.Buffer:void 0,c=(s?s.isBuffer:void 0)||r;n.exports=c}).call(this,t(48)(n))},function(n,e){var t=/^(?:0|[1-9]\d*)$/;n.exports=function(n,e){var o=typeof n;return!!(e=null==e?9007199254740991:e)&&("number"==o||"symbol"!=o&&t.test(n))&&n>-1&&n%1==0&&n<e}},function(n,e,t){var o=t(191),r=t(192),a=t(193),i=a&&a.isTypedArray,s=i?r(i):o;n.exports=s},function(n,e,t){var o=t(70),r=t(41);n.exports=function(n){return null!=n&&r(n.length)&&!o(n)}},function(n,e,t){var o=t(9)(t(6),"Set");n.exports=o},function(n,e,t){var o=t(38);n.exports=function(n){return n==n&&!o(n)}},function(n,e){n.exports=function(n,e){return function(t){return null!=t&&(t[n]===e&&(void 0!==e||n in Object(t)))}}},function(n,e,t){var o=t(85),r=t(22);n.exports=function(n,e){for(var t=0,a=(e=o(e,n)).length;null!=n&&t<a;)n=n[r(e[t++])];return t&&t==a?n:void 0}},function(n,e,t){var o=t(5),r=t(42),a=t(205),i=t(208);n.exports=function(n,e){return o(n)?n:r(n,e)?[n]:a(i(n))}},function(n,e,t){},function(n,e,t){"use strict";e.a=["ThemeManager","BackToTop"]},function(n,e,t){},function(n,e,t){},function(n,e,t){var o=t(141),r=t(146),a=t(217),i=t(225),s=t(234),c=t(99),l=a((function(n){var e=c(n);return s(e)&&(e=void 0),i(o(n,1,s,!0),r(e,2))}));n.exports=l},function(n,e,t){"use strict";
/*!
 * escape-html
 * Copyright(c) 2012-2013 TJ Holowaychuk
 * Copyright(c) 2015 Andreas Lubbe
 * Copyright(c) 2015 Tiancheng "Timothy" Gu
 * MIT Licensed
 */var o=/["'&<>]/;n.exports=function(n){var e,t=""+n,r=o.exec(t);if(!r)return t;var a="",i=0,s=0;for(i=r.index;i<t.length;i++){switch(t.charCodeAt(i)){case 34:e="&quot;";break;case 38:e="&amp;";break;case 39:e="&#39;";break;case 60:e="&lt;";break;case 62:e="&gt;";break;default:continue}s!==i&&(a+=t.substring(s,i)),s=i+1,a+=e}return s!==i?a+t.substring(s,i):a}},function(n,e,t){!function(){"use strict";n.exports={polyfill:function(){var n=window,e=document;if(!("scrollBehavior"in e.documentElement.style)||!0===n.__forceSmoothScrollPolyfill__){var t,o=n.HTMLElement||n.Element,r={scroll:n.scroll||n.scrollTo,scrollBy:n.scrollBy,elementScroll:o.prototype.scroll||s,scrollIntoView:o.prototype.scrollIntoView},a=n.performance&&n.performance.now?n.performance.now.bind(n.performance):Date.now,i=(t=n.navigator.userAgent,new RegExp(["MSIE ","Trident/","Edge/"].join("|")).test(t)?1:0);n.scroll=n.scrollTo=function(){void 0!==arguments[0]&&(!0!==c(arguments[0])?f.call(n,e.body,void 0!==arguments[0].left?~~arguments[0].left:n.scrollX||n.pageXOffset,void 0!==arguments[0].top?~~arguments[0].top:n.scrollY||n.pageYOffset):r.scroll.call(n,void 0!==arguments[0].left?arguments[0].left:"object"!=typeof arguments[0]?arguments[0]:n.scrollX||n.pageXOffset,void 0!==arguments[0].top?arguments[0].top:void 0!==arguments[1]?arguments[1]:n.scrollY||n.pageYOffset))},n.scrollBy=function(){void 0!==arguments[0]&&(c(arguments[0])?r.scrollBy.call(n,void 0!==arguments[0].left?arguments[0].left:"object"!=typeof arguments[0]?arguments[0]:0,void 0!==arguments[0].top?arguments[0].top:void 0!==arguments[1]?arguments[1]:0):f.call(n,e.body,~~arguments[0].left+(n.scrollX||n.pageXOffset),~~arguments[0].top+(n.scrollY||n.pageYOffset)))},o.prototype.scroll=o.prototype.scrollTo=function(){if(void 0!==arguments[0])if(!0!==c(arguments[0])){var n=arguments[0].left,e=arguments[0].top;f.call(this,this,void 0===n?this.scrollLeft:~~n,void 0===e?this.scrollTop:~~e)}else{if("number"==typeof arguments[0]&&void 0===arguments[1])throw new SyntaxError("Value could not be converted");r.elementScroll.call(this,void 0!==arguments[0].left?~~arguments[0].left:"object"!=typeof arguments[0]?~~arguments[0]:this.scrollLeft,void 0!==arguments[0].top?~~arguments[0].top:void 0!==arguments[1]?~~arguments[1]:this.scrollTop)}},o.prototype.scrollBy=function(){void 0!==arguments[0]&&(!0!==c(arguments[0])?this.scroll({left:~~arguments[0].left+this.scrollLeft,top:~~arguments[0].top+this.scrollTop,behavior:arguments[0].behavior}):r.elementScroll.call(this,void 0!==arguments[0].left?~~arguments[0].left+this.scrollLeft:~~arguments[0]+this.scrollLeft,void 0!==arguments[0].top?~~arguments[0].top+this.scrollTop:~~arguments[1]+this.scrollTop))},o.prototype.scrollIntoView=function(){if(!0!==c(arguments[0])){var t=d(this),o=t.getBoundingClientRect(),a=this.getBoundingClientRect();t!==e.body?(f.call(this,t,t.scrollLeft+a.left-o.left,t.scrollTop+a.top-o.top),"fixed"!==n.getComputedStyle(t).position&&n.scrollBy({left:o.left,top:o.top,behavior:"smooth"})):n.scrollBy({left:a.left,top:a.top,behavior:"smooth"})}else r.scrollIntoView.call(this,void 0===arguments[0]||arguments[0])}}function s(n,e){this.scrollLeft=n,this.scrollTop=e}function c(n){if(null===n||"object"!=typeof n||void 0===n.behavior||"auto"===n.behavior||"instant"===n.behavior)return!0;if("object"==typeof n&&"smooth"===n.behavior)return!1;throw new TypeError("behavior member of ScrollOptions "+n.behavior+" is not a valid value for enumeration ScrollBehavior.")}function l(n,e){return"Y"===e?n.clientHeight+i<n.scrollHeight:"X"===e?n.clientWidth+i<n.scrollWidth:void 0}function p(e,t){var o=n.getComputedStyle(e,null)["overflow"+t];return"auto"===o||"scroll"===o}function u(n){var e=l(n,"Y")&&p(n,"Y"),t=l(n,"X")&&p(n,"X");return e||t}function d(n){for(;n!==e.body&&!1===u(n);)n=n.parentNode||n.host;return n}function m(e){var t,o,r,i,s=(a()-e.startTime)/468;i=s=s>1?1:s,t=.5*(1-Math.cos(Math.PI*i)),o=e.startX+(e.x-e.startX)*t,r=e.startY+(e.y-e.startY)*t,e.method.call(e.scrollable,o,r),o===e.x&&r===e.y||n.requestAnimationFrame(m.bind(n,e))}function f(t,o,i){var c,l,p,u,d=a();t===e.body?(c=n,l=n.scrollX||n.pageXOffset,p=n.scrollY||n.pageYOffset,u=r.scroll):(c=t,l=t.scrollLeft,p=t.scrollTop,u=s),m({scrollable:c,method:u,startTime:d,startX:l,startY:p,x:o,y:i})}}}}()},function(n,e,t){"use strict";var o=t(26),r=t(30),a=t(31),i=t(125),s=t(127),c=t(2)((function(){return 4294967297!==[].push.call({length:4294967296},1)})),l=!function(){try{Object.defineProperty([],"length",{writable:!1}).push()}catch(n){return n instanceof TypeError}}();o({target:"Array",proto:!0,arity:1,forced:c||l},{push:function(n){var e=r(this),t=a(e),o=arguments.length;s(t+o);for(var c=0;c<o;c++)e[t]=arguments[c],t++;return i(e,t),t}})},function(n,e){n.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},function(n,e,t){var o=t(1),r=t(8),a=o.document,i=r(a)&&r(a.createElement);n.exports=function(n){return i?a.createElement(n):{}}},function(n,e,t){var o=t(4),r=t(2);n.exports=o&&r((function(){return 42!=Object.defineProperty((function(){}),"prototype",{value:42,writable:!1}).prototype}))},function(n,e,t){var o=t(59),r=t(61),a=o("keys");n.exports=function(n){return a[n]||(a[n]=r(n))}},function(n,e,t){var o=t(3),r=t(7),a=t(28),i=t(116).indexOf,s=t(47),c=o([].push);n.exports=function(n,e){var t,o=a(n),l=0,p=[];for(t in o)!r(s,t)&&r(o,t)&&c(p,t);for(;e.length>l;)r(o,t=e[l++])&&(~i(p,t)||c(p,t));return p}},function(n,e){n.exports=function(n){var e=null==n?0:n.length;return e?n[e-1]:void 0}},function(n,e,t){n.exports=t(242)},function(n,e,t){"use strict";var o=t(26),r=t(122).left,a=t(123),i=t(58),s=t(124);o({target:"Array",proto:!0,forced:!a("reduce")||!s&&i>79&&i<83},{reduce:function(n){var e=arguments.length;return r(this,n,e,e>1?arguments[1]:void 0)}})},function(n,e,t){"use strict";var o={}.propertyIsEnumerable,r=Object.getOwnPropertyDescriptor,a=r&&!o.call({1:2},1);e.f=a?function(n){var e=r(this,n);return!!e&&e.enumerable}:o},function(n,e,t){var o=t(32),r=t(8),a=t(54),i=t(105),s=t(107),c=t(29),l=TypeError,p=c("toPrimitive");n.exports=function(n,e){if(!r(n)||a(n))return n;var t,c=i(n,p);if(c){if(void 0===e&&(e="default"),t=o(c,n,e),!r(t)||a(t))return t;throw l("Can't convert object to primitive value")}return void 0===e&&(e="number"),s(n,e)}},function(n,e,t){var o=t(16);n.exports=o("navigator","userAgent")||""},function(n,e,t){var o=t(46),r=t(51);n.exports=function(n,e){var t=n[e];return r(t)?void 0:o(t)}},function(n,e){var t=String;n.exports=function(n){try{return t(n)}catch(n){return"Object"}}},function(n,e,t){var o=t(32),r=t(0),a=t(8),i=TypeError;n.exports=function(n,e){var t,s;if("string"===e&&r(t=n.toString)&&!a(s=o(t,n)))return s;if(r(t=n.valueOf)&&!a(s=o(t,n)))return s;if("string"!==e&&r(t=n.toString)&&!a(s=o(t,n)))return s;throw i("Can't convert object to primitive value")}},function(n,e,t){var o=t(0),r=t(14),a=t(109),i=t(35);n.exports=function(n,e,t,s){s||(s={});var c=s.enumerable,l=void 0!==s.name?s.name:e;if(o(t)&&a(t,l,s),s.global)c?n[e]=t:i(e,t);else{try{s.unsafe?n[e]&&(c=!0):delete n[e]}catch(n){}c?n[e]=t:r.f(n,e,{value:t,enumerable:!1,configurable:!s.nonConfigurable,writable:!s.nonWritable})}return n}},function(n,e,t){var o=t(2),r=t(0),a=t(7),i=t(4),s=t(110).CONFIGURABLE,c=t(111),l=t(112),p=l.enforce,u=l.get,d=Object.defineProperty,m=i&&!o((function(){return 8!==d((function(){}),"length",{value:8}).length})),f=String(String).split("String"),h=n.exports=function(n,e,t){"Symbol("===String(e).slice(0,7)&&(e="["+String(e).replace(/^Symbol\(([^)]*)\)/,"$1")+"]"),t&&t.getter&&(e="get "+e),t&&t.setter&&(e="set "+e),(!a(n,"name")||s&&n.name!==e)&&(i?d(n,"name",{value:e,configurable:!0}):n.name=e),m&&t&&a(t,"arity")&&n.length!==t.arity&&d(n,"length",{value:t.arity});try{t&&a(t,"constructor")&&t.constructor?i&&d(n,"prototype",{writable:!1}):n.prototype&&(n.prototype=void 0)}catch(n){}var o=p(n);return a(o,"source")||(o.source=f.join("string"==typeof e?e:"")),n};Function.prototype.toString=h((function(){return r(this)&&u(this).source||c(this)}),"toString")},function(n,e,t){var o=t(4),r=t(7),a=Function.prototype,i=o&&Object.getOwnPropertyDescriptor,s=r(a,"name"),c=s&&"something"===function(){}.name,l=s&&(!o||o&&i(a,"name").configurable);n.exports={EXISTS:s,PROPER:c,CONFIGURABLE:l}},function(n,e,t){var o=t(3),r=t(0),a=t(34),i=o(Function.toString);r(a.inspectSource)||(a.inspectSource=function(n){return i(n)}),n.exports=a.inspectSource},function(n,e,t){var o,r,a,i=t(113),s=t(1),c=t(8),l=t(17),p=t(7),u=t(34),d=t(97),m=t(47),f=s.TypeError,h=s.WeakMap;if(i||u.state){var v=u.state||(u.state=new h);v.get=v.get,v.has=v.has,v.set=v.set,o=function(n,e){if(v.has(n))throw f("Object already initialized");return e.facade=n,v.set(n,e),e},r=function(n){return v.get(n)||{}},a=function(n){return v.has(n)}}else{var g=d("state");m[g]=!0,o=function(n,e){if(p(n,g))throw f("Object already initialized");return e.facade=n,l(n,g,e),e},r=function(n){return p(n,g)?n[g]:{}},a=function(n){return p(n,g)}}n.exports={set:o,get:r,has:a,enforce:function(n){return a(n)?r(n):o(n,{})},getterFor:function(n){return function(e){var t;if(!c(e)||(t=r(e)).type!==n)throw f("Incompatible receiver, "+n+" required");return t}}}},function(n,e,t){var o=t(1),r=t(0),a=o.WeakMap;n.exports=r(a)&&/native code/.test(String(a))},function(n,e,t){var o=t(16),r=t(3),a=t(115),i=t(120),s=t(25),c=r([].concat);n.exports=o("Reflect","ownKeys")||function(n){var e=a.f(s(n)),t=i.f;return t?c(e,t(n)):e}},function(n,e,t){var o=t(98),r=t(94).concat("length","prototype");e.f=Object.getOwnPropertyNames||function(n){return o(n,r)}},function(n,e,t){var o=t(28),r=t(117),a=t(31),i=function(n){return function(e,t,i){var s,c=o(e),l=a(c),p=r(i,l);if(n&&t!=t){for(;l>p;)if((s=c[p++])!=s)return!0}else for(;l>p;p++)if((n||p in c)&&c[p]===t)return n||p||0;return!n&&-1}};n.exports={includes:i(!0),indexOf:i(!1)}},function(n,e,t){var o=t(64),r=Math.max,a=Math.min;n.exports=function(n,e){var t=o(n);return t<0?r(t+e,0):a(t,e)}},function(n,e){var t=Math.ceil,o=Math.floor;n.exports=Math.trunc||function(n){var e=+n;return(e>0?o:t)(e)}},function(n,e,t){var o=t(64),r=Math.min;n.exports=function(n){return n>0?r(o(n),9007199254740991):0}},function(n,e){e.f=Object.getOwnPropertySymbols},function(n,e,t){var o=t(2),r=t(0),a=/#|\.prototype\./,i=function(n,e){var t=c[s(n)];return t==p||t!=l&&(r(e)?o(e):!!e)},s=i.normalize=function(n){return String(n).replace(a,".").toLowerCase()},c=i.data={},l=i.NATIVE="N",p=i.POLYFILL="P";n.exports=i},function(n,e,t){var o=t(46),r=t(30),a=t(45),i=t(31),s=TypeError,c=function(n){return function(e,t,c,l){o(t);var p=r(e),u=a(p),d=i(p),m=n?d-1:0,f=n?-1:1;if(c<2)for(;;){if(m in u){l=u[m],m+=f;break}if(m+=f,n?m<0:d<=m)throw s("Reduce of empty array with no initial value")}for(;n?m>=0:d>m;m+=f)m in u&&(l=t(l,u[m],m,p));return l}};n.exports={left:c(!1),right:c(!0)}},function(n,e,t){"use strict";var o=t(2);n.exports=function(n,e){var t=[][n];return!!t&&o((function(){t.call(null,e||function(){return 1},1)}))}},function(n,e,t){var o=t(15),r=t(1);n.exports="process"==o(r.process)},function(n,e,t){"use strict";var o=t(4),r=t(126),a=TypeError,i=Object.getOwnPropertyDescriptor,s=o&&!function(){if(void 0!==this)return!0;try{Object.defineProperty([],"length",{writable:!1}).length=1}catch(n){return n instanceof TypeError}}();n.exports=s?function(n,e){if(r(n)&&!i(n,"length").writable)throw a("Cannot set read only .length");return n.length=e}:function(n,e){return n.length=e}},function(n,e,t){var o=t(15);n.exports=Array.isArray||function(n){return"Array"==o(n)}},function(n,e){var t=TypeError;n.exports=function(n){if(n>9007199254740991)throw t("Maximum allowed index exceeded");return n}},function(n,e,t){var o=t(26),r=t(1),a=t(129),i=t(130),s=r.WebAssembly,c=7!==Error("e",{cause:7}).cause,l=function(n,e){var t={};t[n]=i(n,e,c),o({global:!0,constructor:!0,arity:1,forced:c},t)},p=function(n,e){if(s&&s[n]){var t={};t[n]=i("WebAssembly."+n,e,c),o({target:"WebAssembly",stat:!0,constructor:!0,arity:1,forced:c},t)}};l("Error",(function(n){return function(e){return a(n,this,arguments)}})),l("EvalError",(function(n){return function(e){return a(n,this,arguments)}})),l("RangeError",(function(n){return function(e){return a(n,this,arguments)}})),l("ReferenceError",(function(n){return function(e){return a(n,this,arguments)}})),l("SyntaxError",(function(n){return function(e){return a(n,this,arguments)}})),l("TypeError",(function(n){return function(e){return a(n,this,arguments)}})),l("URIError",(function(n){return function(e){return a(n,this,arguments)}})),p("CompileError",(function(n){return function(e){return a(n,this,arguments)}})),p("LinkError",(function(n){return function(e){return a(n,this,arguments)}})),p("RuntimeError",(function(n){return function(e){return a(n,this,arguments)}}))},function(n,e,t){var o=t(27),r=Function.prototype,a=r.apply,i=r.call;n.exports="object"==typeof Reflect&&Reflect.apply||(o?i.bind(a):function(){return i.apply(a,arguments)})},function(n,e,t){"use strict";var o=t(16),r=t(7),a=t(17),i=t(55),s=t(65),c=t(63),l=t(132),p=t(133),u=t(134),d=t(138),m=t(139),f=t(140),h=t(4),v=t(60);n.exports=function(n,e,t,g){var b=g?2:1,y=n.split("."),x=y[y.length-1],S=o.apply(null,y);if(S){var C=S.prototype;if(!v&&r(C,"cause")&&delete C.cause,!t)return S;var w=o("Error"),k=e((function(n,e){var t=u(g?e:n,void 0),o=g?new S(n):new S;return void 0!==t&&a(o,"message",t),f&&a(o,"stack",m(o.stack,2)),this&&i(C,this)&&p(o,this,k),arguments.length>b&&d(o,arguments[b]),o}));if(k.prototype=C,"Error"!==x?s?s(k,w):c(k,w,{name:!0}):h&&"stackTraceLimit"in S&&(l(k,S,"stackTraceLimit"),l(k,S,"prepareStackTrace")),c(k,S),!v)try{C.name!==x&&a(C,"name",x),C.constructor=k}catch(n){}return k}}},function(n,e,t){var o=t(0),r=String,a=TypeError;n.exports=function(n){if("object"==typeof n||o(n))return n;throw a("Can't set "+r(n)+" as a prototype")}},function(n,e,t){var o=t(14).f;n.exports=function(n,e,t){t in n||o(n,t,{configurable:!0,get:function(){return e[t]},set:function(n){e[t]=n}})}},function(n,e,t){var o=t(0),r=t(8),a=t(65);n.exports=function(n,e,t){var i,s;return a&&o(i=e.constructor)&&i!==t&&r(s=i.prototype)&&s!==t.prototype&&a(n,s),n}},function(n,e,t){var o=t(135);n.exports=function(n,e){return void 0===n?arguments.length<2?"":e:o(n)}},function(n,e,t){var o=t(136),r=String;n.exports=function(n){if("Symbol"===o(n))throw TypeError("Cannot convert a Symbol value to a string");return r(n)}},function(n,e,t){var o=t(137),r=t(0),a=t(15),i=t(29)("toStringTag"),s=Object,c="Arguments"==a(function(){return arguments}());n.exports=o?a:function(n){var e,t,o;return void 0===n?"Undefined":null===n?"Null":"string"==typeof(t=function(n,e){try{return n[e]}catch(n){}}(e=s(n),i))?t:c?a(e):"Object"==(o=a(e))&&r(e.callee)?"Arguments":o}},function(n,e,t){var o={};o[t(29)("toStringTag")]="z",n.exports="[object z]"===String(o)},function(n,e,t){var o=t(8),r=t(17);n.exports=function(n,e){o(e)&&"cause"in e&&r(n,"cause",e.cause)}},function(n,e,t){var o=t(3),r=Error,a=o("".replace),i=String(r("zxcasd").stack),s=/\n\s*at [^:]*:[^\n]*/,c=s.test(i);n.exports=function(n,e){if(c&&"string"==typeof n&&!r.prepareStackTrace)for(;e--;)n=a(n,s,"");return n}},function(n,e,t){var o=t(2),r=t(33);n.exports=!o((function(){var n=Error("a");return!("stack"in n)||(Object.defineProperty(n,"stack",r(1,7)),7!==n.stack)}))},function(n,e,t){var o=t(66),r=t(142);n.exports=function n(e,t,a,i,s){var c=-1,l=e.length;for(a||(a=r),s||(s=[]);++c<l;){var p=e[c];t>0&&a(p)?t>1?n(p,t-1,a,i,s):o(s,p):i||(s[s.length]=p)}return s}},function(n,e,t){var o=t(13),r=t(36),a=t(5),i=o?o.isConcatSpreadable:void 0;n.exports=function(n){return a(n)||r(n)||!!(i&&n&&n[i])}},function(n,e,t){var o=t(12),r=t(11);n.exports=function(n){return r(n)&&"[object Arguments]"==o(n)}},function(n,e,t){var o=t(13),r=Object.prototype,a=r.hasOwnProperty,i=r.toString,s=o?o.toStringTag:void 0;n.exports=function(n){var e=a.call(n,s),t=n[s];try{n[s]=void 0;var o=!0}catch(n){}var r=i.call(n);return o&&(e?n[s]=t:delete n[s]),r}},function(n,e){var t=Object.prototype.toString;n.exports=function(n){return t.call(n)}},function(n,e,t){var o=t(147),r=t(203),a=t(44),i=t(5),s=t(214);n.exports=function(n){return"function"==typeof n?n:null==n?a:"object"==typeof n?i(n)?r(n[0],n[1]):o(n):s(n)}},function(n,e,t){var o=t(148),r=t(202),a=t(83);n.exports=function(n){var e=r(n);return 1==e.length&&e[0][2]?a(e[0][0],e[0][1]):function(t){return t===n||o(t,n,e)}}},function(n,e,t){var o=t(68),r=t(72);n.exports=function(n,e,t,a){var i=t.length,s=i,c=!a;if(null==n)return!s;for(n=Object(n);i--;){var l=t[i];if(c&&l[2]?l[1]!==n[l[0]]:!(l[0]in n))return!1}for(;++i<s;){var p=(l=t[i])[0],u=n[p],d=l[1];if(c&&l[2]){if(void 0===u&&!(p in n))return!1}else{var m=new o;if(a)var f=a(u,d,p,n,e,m);if(!(void 0===f?r(d,u,3,a,m):f))return!1}}return!0}},function(n,e){n.exports=function(){this.__data__=[],this.size=0}},function(n,e,t){var o=t(19),r=Array.prototype.splice;n.exports=function(n){var e=this.__data__,t=o(e,n);return!(t<0)&&(t==e.length-1?e.pop():r.call(e,t,1),--this.size,!0)}},function(n,e,t){var o=t(19);n.exports=function(n){var e=this.__data__,t=o(e,n);return t<0?void 0:e[t][1]}},function(n,e,t){var o=t(19);n.exports=function(n){return o(this.__data__,n)>-1}},function(n,e,t){var o=t(19);n.exports=function(n,e){var t=this.__data__,r=o(t,n);return r<0?(++this.size,t.push([n,e])):t[r][1]=e,this}},function(n,e,t){var o=t(18);n.exports=function(){this.__data__=new o,this.size=0}},function(n,e){n.exports=function(n){var e=this.__data__,t=e.delete(n);return this.size=e.size,t}},function(n,e){n.exports=function(n){return this.__data__.get(n)}},function(n,e){n.exports=function(n){return this.__data__.has(n)}},function(n,e,t){var o=t(18),r=t(37),a=t(39);n.exports=function(n,e){var t=this.__data__;if(t instanceof o){var i=t.__data__;if(!r||i.length<199)return i.push([n,e]),this.size=++t.size,this;t=this.__data__=new a(i)}return t.set(n,e),this.size=t.size,this}},function(n,e,t){var o=t(70),r=t(160),a=t(38),i=t(71),s=/^\[object .+?Constructor\]$/,c=Function.prototype,l=Object.prototype,p=c.toString,u=l.hasOwnProperty,d=RegExp("^"+p.call(u).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");n.exports=function(n){return!(!a(n)||r(n))&&(o(n)?d:s).test(i(n))}},function(n,e,t){var o,r=t(161),a=(o=/[^.]+$/.exec(r&&r.keys&&r.keys.IE_PROTO||""))?"Symbol(src)_1."+o:"";n.exports=function(n){return!!a&&a in n}},function(n,e,t){var o=t(6)["__core-js_shared__"];n.exports=o},function(n,e){n.exports=function(n,e){return null==n?void 0:n[e]}},function(n,e,t){var o=t(164),r=t(18),a=t(37);n.exports=function(){this.size=0,this.__data__={hash:new o,map:new(a||r),string:new o}}},function(n,e,t){var o=t(165),r=t(166),a=t(167),i=t(168),s=t(169);function c(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var o=n[e];this.set(o[0],o[1])}}c.prototype.clear=o,c.prototype.delete=r,c.prototype.get=a,c.prototype.has=i,c.prototype.set=s,n.exports=c},function(n,e,t){var o=t(20);n.exports=function(){this.__data__=o?o(null):{},this.size=0}},function(n,e){n.exports=function(n){var e=this.has(n)&&delete this.__data__[n];return this.size-=e?1:0,e}},function(n,e,t){var o=t(20),r=Object.prototype.hasOwnProperty;n.exports=function(n){var e=this.__data__;if(o){var t=e[n];return"__lodash_hash_undefined__"===t?void 0:t}return r.call(e,n)?e[n]:void 0}},function(n,e,t){var o=t(20),r=Object.prototype.hasOwnProperty;n.exports=function(n){var e=this.__data__;return o?void 0!==e[n]:r.call(e,n)}},function(n,e,t){var o=t(20);n.exports=function(n,e){var t=this.__data__;return this.size+=this.has(n)?0:1,t[n]=o&&void 0===e?"__lodash_hash_undefined__":e,this}},function(n,e,t){var o=t(21);n.exports=function(n){var e=o(this,n).delete(n);return this.size-=e?1:0,e}},function(n,e){n.exports=function(n){var e=typeof n;return"string"==e||"number"==e||"symbol"==e||"boolean"==e?"__proto__"!==n:null===n}},function(n,e,t){var o=t(21);n.exports=function(n){return o(this,n).get(n)}},function(n,e,t){var o=t(21);n.exports=function(n){return o(this,n).has(n)}},function(n,e,t){var o=t(21);n.exports=function(n,e){var t=o(this,n),r=t.size;return t.set(n,e),this.size+=t.size==r?0:1,this}},function(n,e,t){var o=t(68),r=t(73),a=t(179),i=t(182),s=t(198),c=t(5),l=t(77),p=t(79),u="[object Object]",d=Object.prototype.hasOwnProperty;n.exports=function(n,e,t,m,f,h){var v=c(n),g=c(e),b=v?"[object Array]":s(n),y=g?"[object Array]":s(e),x=(b="[object Arguments]"==b?u:b)==u,S=(y="[object Arguments]"==y?u:y)==u,C=b==y;if(C&&l(n)){if(!l(e))return!1;v=!0,x=!1}if(C&&!x)return h||(h=new o),v||p(n)?r(n,e,t,m,f,h):a(n,e,b,t,m,f,h);if(!(1&t)){var w=x&&d.call(n,"__wrapped__"),k=S&&d.call(e,"__wrapped__");if(w||k){var A=w?n.value():n,P=k?e.value():e;return h||(h=new o),f(A,P,t,m,h)}}return!!C&&(h||(h=new o),i(n,e,t,m,f,h))}},function(n,e){n.exports=function(n){return this.__data__.set(n,"__lodash_hash_undefined__"),this}},function(n,e){n.exports=function(n){return this.__data__.has(n)}},function(n,e){n.exports=function(n,e){for(var t=-1,o=null==n?0:n.length;++t<o;)if(e(n[t],t,n))return!0;return!1}},function(n,e,t){var o=t(13),r=t(180),a=t(69),i=t(73),s=t(181),c=t(40),l=o?o.prototype:void 0,p=l?l.valueOf:void 0;n.exports=function(n,e,t,o,l,u,d){switch(t){case"[object DataView]":if(n.byteLength!=e.byteLength||n.byteOffset!=e.byteOffset)return!1;n=n.buffer,e=e.buffer;case"[object ArrayBuffer]":return!(n.byteLength!=e.byteLength||!u(new r(n),new r(e)));case"[object Boolean]":case"[object Date]":case"[object Number]":return a(+n,+e);case"[object Error]":return n.name==e.name&&n.message==e.message;case"[object RegExp]":case"[object String]":return n==e+"";case"[object Map]":var m=s;case"[object Set]":var f=1&o;if(m||(m=c),n.size!=e.size&&!f)return!1;var h=d.get(n);if(h)return h==e;o|=2,d.set(n,e);var v=i(m(n),m(e),o,l,u,d);return d.delete(n),v;case"[object Symbol]":if(p)return p.call(n)==p.call(e)}return!1}},function(n,e,t){var o=t(6).Uint8Array;n.exports=o},function(n,e){n.exports=function(n){var e=-1,t=Array(n.size);return n.forEach((function(n,o){t[++e]=[o,n]})),t}},function(n,e,t){var o=t(183),r=Object.prototype.hasOwnProperty;n.exports=function(n,e,t,a,i,s){var c=1&t,l=o(n),p=l.length;if(p!=o(e).length&&!c)return!1;for(var u=p;u--;){var d=l[u];if(!(c?d in e:r.call(e,d)))return!1}var m=s.get(n),f=s.get(e);if(m&&f)return m==e&&f==n;var h=!0;s.set(n,e),s.set(e,n);for(var v=c;++u<p;){var g=n[d=l[u]],b=e[d];if(a)var y=c?a(b,g,d,e,n,s):a(g,b,d,n,e,s);if(!(void 0===y?g===b||i(g,b,t,a,s):y)){h=!1;break}v||(v="constructor"==d)}if(h&&!v){var x=n.constructor,S=e.constructor;x==S||!("constructor"in n)||!("constructor"in e)||"function"==typeof x&&x instanceof x&&"function"==typeof S&&S instanceof S||(h=!1)}return s.delete(n),s.delete(e),h}},function(n,e,t){var o=t(184),r=t(185),a=t(76);n.exports=function(n){return o(n,a,r)}},function(n,e,t){var o=t(66),r=t(5);n.exports=function(n,e,t){var a=e(n);return r(n)?a:o(a,t(n))}},function(n,e,t){var o=t(186),r=t(187),a=Object.prototype.propertyIsEnumerable,i=Object.getOwnPropertySymbols,s=i?function(n){return null==n?[]:(n=Object(n),o(i(n),(function(e){return a.call(n,e)})))}:r;n.exports=s},function(n,e){n.exports=function(n,e){for(var t=-1,o=null==n?0:n.length,r=0,a=[];++t<o;){var i=n[t];e(i,t,n)&&(a[r++]=i)}return a}},function(n,e){n.exports=function(){return[]}},function(n,e,t){var o=t(189),r=t(36),a=t(5),i=t(77),s=t(78),c=t(79),l=Object.prototype.hasOwnProperty;n.exports=function(n,e){var t=a(n),p=!t&&r(n),u=!t&&!p&&i(n),d=!t&&!p&&!u&&c(n),m=t||p||u||d,f=m?o(n.length,String):[],h=f.length;for(var v in n)!e&&!l.call(n,v)||m&&("length"==v||u&&("offset"==v||"parent"==v)||d&&("buffer"==v||"byteLength"==v||"byteOffset"==v)||s(v,h))||f.push(v);return f}},function(n,e){n.exports=function(n,e){for(var t=-1,o=Array(n);++t<n;)o[t]=e(t);return o}},function(n,e){n.exports=function(){return!1}},function(n,e,t){var o=t(12),r=t(41),a=t(11),i={};i["[object Float32Array]"]=i["[object Float64Array]"]=i["[object Int8Array]"]=i["[object Int16Array]"]=i["[object Int32Array]"]=i["[object Uint8Array]"]=i["[object Uint8ClampedArray]"]=i["[object Uint16Array]"]=i["[object Uint32Array]"]=!0,i["[object Arguments]"]=i["[object Array]"]=i["[object ArrayBuffer]"]=i["[object Boolean]"]=i["[object DataView]"]=i["[object Date]"]=i["[object Error]"]=i["[object Function]"]=i["[object Map]"]=i["[object Number]"]=i["[object Object]"]=i["[object RegExp]"]=i["[object Set]"]=i["[object String]"]=i["[object WeakMap]"]=!1,n.exports=function(n){return a(n)&&r(n.length)&&!!i[o(n)]}},function(n,e){n.exports=function(n){return function(e){return n(e)}}},function(n,e,t){(function(n){var o=t(67),r=e&&!e.nodeType&&e,a=r&&"object"==typeof n&&n&&!n.nodeType&&n,i=a&&a.exports===r&&o.process,s=function(){try{var n=a&&a.require&&a.require("util").types;return n||i&&i.binding&&i.binding("util")}catch(n){}}();n.exports=s}).call(this,t(48)(n))},function(n,e,t){var o=t(195),r=t(196),a=Object.prototype.hasOwnProperty;n.exports=function(n){if(!o(n))return r(n);var e=[];for(var t in Object(n))a.call(n,t)&&"constructor"!=t&&e.push(t);return e}},function(n,e){var t=Object.prototype;n.exports=function(n){var e=n&&n.constructor;return n===("function"==typeof e&&e.prototype||t)}},function(n,e,t){var o=t(197)(Object.keys,Object);n.exports=o},function(n,e){n.exports=function(n,e){return function(t){return n(e(t))}}},function(n,e,t){var o=t(199),r=t(37),a=t(200),i=t(81),s=t(201),c=t(12),l=t(71),p=l(o),u=l(r),d=l(a),m=l(i),f=l(s),h=c;(o&&"[object DataView]"!=h(new o(new ArrayBuffer(1)))||r&&"[object Map]"!=h(new r)||a&&"[object Promise]"!=h(a.resolve())||i&&"[object Set]"!=h(new i)||s&&"[object WeakMap]"!=h(new s))&&(h=function(n){var e=c(n),t="[object Object]"==e?n.constructor:void 0,o=t?l(t):"";if(o)switch(o){case p:return"[object DataView]";case u:return"[object Map]";case d:return"[object Promise]";case m:return"[object Set]";case f:return"[object WeakMap]"}return e}),n.exports=h},function(n,e,t){var o=t(9)(t(6),"DataView");n.exports=o},function(n,e,t){var o=t(9)(t(6),"Promise");n.exports=o},function(n,e,t){var o=t(9)(t(6),"WeakMap");n.exports=o},function(n,e,t){var o=t(82),r=t(76);n.exports=function(n){for(var e=r(n),t=e.length;t--;){var a=e[t],i=n[a];e[t]=[a,i,o(i)]}return e}},function(n,e,t){var o=t(72),r=t(204),a=t(211),i=t(42),s=t(82),c=t(83),l=t(22);n.exports=function(n,e){return i(n)&&s(e)?c(l(n),e):function(t){var i=r(t,n);return void 0===i&&i===e?a(t,n):o(e,i,3)}}},function(n,e,t){var o=t(84);n.exports=function(n,e,t){var r=null==n?void 0:o(n,e);return void 0===r?t:r}},function(n,e,t){var o=t(206),r=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,a=/\\(\\)?/g,i=o((function(n){var e=[];return 46===n.charCodeAt(0)&&e.push(""),n.replace(r,(function(n,t,o,r){e.push(o?r.replace(a,"$1"):t||n)})),e}));n.exports=i},function(n,e,t){var o=t(207);n.exports=function(n){var e=o(n,(function(n){return 500===t.size&&t.clear(),n})),t=e.cache;return e}},function(n,e,t){var o=t(39);function r(n,e){if("function"!=typeof n||null!=e&&"function"!=typeof e)throw new TypeError("Expected a function");var t=function(){var o=arguments,r=e?e.apply(this,o):o[0],a=t.cache;if(a.has(r))return a.get(r);var i=n.apply(this,o);return t.cache=a.set(r,i)||a,i};return t.cache=new(r.Cache||o),t}r.Cache=o,n.exports=r},function(n,e,t){var o=t(209);n.exports=function(n){return null==n?"":o(n)}},function(n,e,t){var o=t(13),r=t(210),a=t(5),i=t(43),s=o?o.prototype:void 0,c=s?s.toString:void 0;n.exports=function n(e){if("string"==typeof e)return e;if(a(e))return r(e,n)+"";if(i(e))return c?c.call(e):"";var t=e+"";return"0"==t&&1/e==-1/0?"-0":t}},function(n,e){n.exports=function(n,e){for(var t=-1,o=null==n?0:n.length,r=Array(o);++t<o;)r[t]=e(n[t],t,n);return r}},function(n,e,t){var o=t(212),r=t(213);n.exports=function(n,e){return null!=n&&r(n,e,o)}},function(n,e){n.exports=function(n,e){return null!=n&&e in Object(n)}},function(n,e,t){var o=t(85),r=t(36),a=t(5),i=t(78),s=t(41),c=t(22);n.exports=function(n,e,t){for(var l=-1,p=(e=o(e,n)).length,u=!1;++l<p;){var d=c(e[l]);if(!(u=null!=n&&t(n,d)))break;n=n[d]}return u||++l!=p?u:!!(p=null==n?0:n.length)&&s(p)&&i(d,p)&&(a(n)||r(n))}},function(n,e,t){var o=t(215),r=t(216),a=t(42),i=t(22);n.exports=function(n){return a(n)?o(i(n)):r(n)}},function(n,e){n.exports=function(n){return function(e){return null==e?void 0:e[n]}}},function(n,e,t){var o=t(84);n.exports=function(n){return function(e){return o(e,n)}}},function(n,e,t){var o=t(44),r=t(218),a=t(220);n.exports=function(n,e){return a(r(n,e,o),n+"")}},function(n,e,t){var o=t(219),r=Math.max;n.exports=function(n,e,t){return e=r(void 0===e?n.length-1:e,0),function(){for(var a=arguments,i=-1,s=r(a.length-e,0),c=Array(s);++i<s;)c[i]=a[e+i];i=-1;for(var l=Array(e+1);++i<e;)l[i]=a[i];return l[e]=t(c),o(n,this,l)}}},function(n,e){n.exports=function(n,e,t){switch(t.length){case 0:return n.call(e);case 1:return n.call(e,t[0]);case 2:return n.call(e,t[0],t[1]);case 3:return n.call(e,t[0],t[1],t[2])}return n.apply(e,t)}},function(n,e,t){var o=t(221),r=t(224)(o);n.exports=r},function(n,e,t){var o=t(222),r=t(223),a=t(44),i=r?function(n,e){return r(n,"toString",{configurable:!0,enumerable:!1,value:o(e),writable:!0})}:a;n.exports=i},function(n,e){n.exports=function(n){return function(){return n}}},function(n,e,t){var o=t(9),r=function(){try{var n=o(Object,"defineProperty");return n({},"",{}),n}catch(n){}}();n.exports=r},function(n,e){var t=Date.now;n.exports=function(n){var e=0,o=0;return function(){var r=t(),a=16-(r-o);if(o=r,a>0){if(++e>=800)return arguments[0]}else e=0;return n.apply(void 0,arguments)}}},function(n,e,t){var o=t(74),r=t(226),a=t(231),i=t(75),s=t(232),c=t(40);n.exports=function(n,e,t){var l=-1,p=r,u=n.length,d=!0,m=[],f=m;if(t)d=!1,p=a;else if(u>=200){var h=e?null:s(n);if(h)return c(h);d=!1,p=i,f=new o}else f=e?[]:m;n:for(;++l<u;){var v=n[l],g=e?e(v):v;if(v=t||0!==v?v:0,d&&g==g){for(var b=f.length;b--;)if(f[b]===g)continue n;e&&f.push(g),m.push(v)}else p(f,g,t)||(f!==m&&f.push(g),m.push(v))}return m}},function(n,e,t){var o=t(227);n.exports=function(n,e){return!!(null==n?0:n.length)&&o(n,e,0)>-1}},function(n,e,t){var o=t(228),r=t(229),a=t(230);n.exports=function(n,e,t){return e==e?a(n,e,t):o(n,r,t)}},function(n,e){n.exports=function(n,e,t,o){for(var r=n.length,a=t+(o?1:-1);o?a--:++a<r;)if(e(n[a],a,n))return a;return-1}},function(n,e){n.exports=function(n){return n!=n}},function(n,e){n.exports=function(n,e,t){for(var o=t-1,r=n.length;++o<r;)if(n[o]===e)return o;return-1}},function(n,e){n.exports=function(n,e,t){for(var o=-1,r=null==n?0:n.length;++o<r;)if(t(e,n[o]))return!0;return!1}},function(n,e,t){var o=t(81),r=t(233),a=t(40),i=o&&1/a(new o([,-0]))[1]==1/0?function(n){return new o(n)}:r;n.exports=i},function(n,e){n.exports=function(){}},function(n,e,t){var o=t(80),r=t(11);n.exports=function(n){return r(n)&&o(n)}},function(n,e,t){},function(n,e,t){},function(n,e,t){"use strict";t(86)},function(n,e,t){},function(n,e,t){},function(n,e,t){"use strict";t(88)},function(n,e,t){"use strict";t(89)},function(n,e,t){"use strict";t.r(e);
/*!
 * Vue.js v2.7.14
 * (c) 2014-2022 Evan You
 * Released under the MIT License.
 */
var o=Object.freeze({}),r=Array.isArray;function a(n){return null==n}function i(n){return null!=n}function s(n){return!0===n}function c(n){return"string"==typeof n||"number"==typeof n||"symbol"==typeof n||"boolean"==typeof n}function l(n){return"function"==typeof n}function p(n){return null!==n&&"object"==typeof n}var u=Object.prototype.toString;function d(n){return"[object Object]"===u.call(n)}function m(n){return"[object RegExp]"===u.call(n)}function f(n){var e=parseFloat(String(n));return e>=0&&Math.floor(e)===e&&isFinite(n)}function h(n){return i(n)&&"function"==typeof n.then&&"function"==typeof n.catch}function v(n){return null==n?"":Array.isArray(n)||d(n)&&n.toString===u?JSON.stringify(n,null,2):String(n)}function g(n){var e=parseFloat(n);return isNaN(e)?n:e}function b(n,e){for(var t=Object.create(null),o=n.split(","),r=0;r<o.length;r++)t[o[r]]=!0;return e?function(n){return t[n.toLowerCase()]}:function(n){return t[n]}}b("slot,component",!0);var y=b("key,ref,slot,slot-scope,is");function x(n,e){var t=n.length;if(t){if(e===n[t-1])return void(n.length=t-1);var o=n.indexOf(e);if(o>-1)return n.splice(o,1)}}var S=Object.prototype.hasOwnProperty;function C(n,e){return S.call(n,e)}function w(n){var e=Object.create(null);return function(t){return e[t]||(e[t]=n(t))}}var k=/-(\w)/g,A=w((function(n){return n.replace(k,(function(n,e){return e?e.toUpperCase():""}))})),P=w((function(n){return n.charAt(0).toUpperCase()+n.slice(1)})),O=/\B([A-Z])/g,I=w((function(n){return n.replace(O,"-$1").toLowerCase()}));var _=Function.prototype.bind?function(n,e){return n.bind(e)}:function(n,e){function t(t){var o=arguments.length;return o?o>1?n.apply(e,arguments):n.call(e,t):n.call(e)}return t._length=n.length,t};function M(n,e){e=e||0;for(var t=n.length-e,o=new Array(t);t--;)o[t]=n[t+e];return o}function D(n,e){for(var t in e)n[t]=e[t];return n}function B(n){for(var e={},t=0;t<n.length;t++)n[t]&&D(e,n[t]);return e}function T(n,e,t){}var E=function(n,e,t){return!1},U=function(n){return n};function L(n,e){if(n===e)return!0;var t=p(n),o=p(e);if(!t||!o)return!t&&!o&&String(n)===String(e);try{var r=Array.isArray(n),a=Array.isArray(e);if(r&&a)return n.length===e.length&&n.every((function(n,t){return L(n,e[t])}));if(n instanceof Date&&e instanceof Date)return n.getTime()===e.getTime();if(r||a)return!1;var i=Object.keys(n),s=Object.keys(e);return i.length===s.length&&i.every((function(t){return L(n[t],e[t])}))}catch(n){return!1}}function R(n,e){for(var t=0;t<n.length;t++)if(L(n[t],e))return t;return-1}function F(n){var e=!1;return function(){e||(e=!0,n.apply(this,arguments))}}function N(n,e){return n===e?0===n&&1/n!=1/e:n==n||e==e}var z=["component","directive","filter"],j=["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured","serverPrefetch","renderTracked","renderTriggered"],G={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:E,isReservedAttr:E,isUnknownElement:E,getTagNamespace:T,parsePlatformTagName:U,mustUseProp:E,async:!0,_lifecycleHooks:j},V=/a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;function H(n){var e=(n+"").charCodeAt(0);return 36===e||95===e}function $(n,e,t,o){Object.defineProperty(n,e,{value:t,enumerable:!!o,writable:!0,configurable:!0})}var W=new RegExp("[^".concat(V.source,".$_\\d]"));var X="__proto__"in{},q="undefined"!=typeof window,K=q&&window.navigator.userAgent.toLowerCase(),Y=K&&/msie|trident/.test(K),Q=K&&K.indexOf("msie 9.0")>0,J=K&&K.indexOf("edge/")>0;K&&K.indexOf("android");var Z=K&&/iphone|ipad|ipod|ios/.test(K);K&&/chrome\/\d+/.test(K),K&&/phantomjs/.test(K);var nn,en=K&&K.match(/firefox\/(\d+)/),tn={}.watch,on=!1;if(q)try{var rn={};Object.defineProperty(rn,"passive",{get:function(){on=!0}}),window.addEventListener("test-passive",null,rn)}catch(n){}var an=function(){return void 0===nn&&(nn=!q&&"undefined"!=typeof global&&(global.process&&"server"===global.process.env.VUE_ENV)),nn},sn=q&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function cn(n){return"function"==typeof n&&/native code/.test(n.toString())}var ln,pn="undefined"!=typeof Symbol&&cn(Symbol)&&"undefined"!=typeof Reflect&&cn(Reflect.ownKeys);ln="undefined"!=typeof Set&&cn(Set)?Set:function(){function n(){this.set=Object.create(null)}return n.prototype.has=function(n){return!0===this.set[n]},n.prototype.add=function(n){this.set[n]=!0},n.prototype.clear=function(){this.set=Object.create(null)},n}();var un=null;function dn(n){void 0===n&&(n=null),n||un&&un._scope.off(),un=n,n&&n._scope.on()}var mn=function(){function n(n,e,t,o,r,a,i,s){this.tag=n,this.data=e,this.children=t,this.text=o,this.elm=r,this.ns=void 0,this.context=a,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=e&&e.key,this.componentOptions=i,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=s,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1}return Object.defineProperty(n.prototype,"child",{get:function(){return this.componentInstance},enumerable:!1,configurable:!0}),n}(),fn=function(n){void 0===n&&(n="");var e=new mn;return e.text=n,e.isComment=!0,e};function hn(n){return new mn(void 0,void 0,void 0,String(n))}function vn(n){var e=new mn(n.tag,n.data,n.children&&n.children.slice(),n.text,n.elm,n.context,n.componentOptions,n.asyncFactory);return e.ns=n.ns,e.isStatic=n.isStatic,e.key=n.key,e.isComment=n.isComment,e.fnContext=n.fnContext,e.fnOptions=n.fnOptions,e.fnScopeId=n.fnScopeId,e.asyncMeta=n.asyncMeta,e.isCloned=!0,e}var gn=0,bn=[],yn=function(){function n(){this._pending=!1,this.id=gn++,this.subs=[]}return n.prototype.addSub=function(n){this.subs.push(n)},n.prototype.removeSub=function(n){this.subs[this.subs.indexOf(n)]=null,this._pending||(this._pending=!0,bn.push(this))},n.prototype.depend=function(e){n.target&&n.target.addDep(this)},n.prototype.notify=function(n){var e=this.subs.filter((function(n){return n}));for(var t=0,o=e.length;t<o;t++){0,e[t].update()}},n}();yn.target=null;var xn=[];function Sn(n){xn.push(n),yn.target=n}function Cn(){xn.pop(),yn.target=xn[xn.length-1]}var wn=Array.prototype,kn=Object.create(wn);["push","pop","shift","unshift","splice","sort","reverse"].forEach((function(n){var e=wn[n];$(kn,n,(function(){for(var t=[],o=0;o<arguments.length;o++)t[o]=arguments[o];var r,a=e.apply(this,t),i=this.__ob__;switch(n){case"push":case"unshift":r=t;break;case"splice":r=t.slice(2)}return r&&i.observeArray(r),i.dep.notify(),a}))}));var An=Object.getOwnPropertyNames(kn),Pn={},On=!0;function In(n){On=n}var _n={notify:T,depend:T,addSub:T,removeSub:T},Mn=function(){function n(n,e,t){if(void 0===e&&(e=!1),void 0===t&&(t=!1),this.value=n,this.shallow=e,this.mock=t,this.dep=t?_n:new yn,this.vmCount=0,$(n,"__ob__",this),r(n)){if(!t)if(X)n.__proto__=kn;else for(var o=0,a=An.length;o<a;o++){$(n,s=An[o],kn[s])}e||this.observeArray(n)}else{var i=Object.keys(n);for(o=0;o<i.length;o++){var s;Bn(n,s=i[o],Pn,void 0,e,t)}}}return n.prototype.observeArray=function(n){for(var e=0,t=n.length;e<t;e++)Dn(n[e],!1,this.mock)},n}();function Dn(n,e,t){return n&&C(n,"__ob__")&&n.__ob__ instanceof Mn?n.__ob__:!On||!t&&an()||!r(n)&&!d(n)||!Object.isExtensible(n)||n.__v_skip||Nn(n)||n instanceof mn?void 0:new Mn(n,e,t)}function Bn(n,e,t,o,a,i){var s=new yn,c=Object.getOwnPropertyDescriptor(n,e);if(!c||!1!==c.configurable){var l=c&&c.get,p=c&&c.set;l&&!p||t!==Pn&&2!==arguments.length||(t=n[e]);var u=!a&&Dn(t,!1,i);return Object.defineProperty(n,e,{enumerable:!0,configurable:!0,get:function(){var e=l?l.call(n):t;return yn.target&&(s.depend(),u&&(u.dep.depend(),r(e)&&Un(e))),Nn(e)&&!a?e.value:e},set:function(e){var o=l?l.call(n):t;if(N(o,e)){if(p)p.call(n,e);else{if(l)return;if(!a&&Nn(o)&&!Nn(e))return void(o.value=e);t=e}u=!a&&Dn(e,!1,i),s.notify()}}}),s}}function Tn(n,e,t){if(!Fn(n)){var o=n.__ob__;return r(n)&&f(e)?(n.length=Math.max(n.length,e),n.splice(e,1,t),o&&!o.shallow&&o.mock&&Dn(t,!1,!0),t):e in n&&!(e in Object.prototype)?(n[e]=t,t):n._isVue||o&&o.vmCount?t:o?(Bn(o.value,e,t,void 0,o.shallow,o.mock),o.dep.notify(),t):(n[e]=t,t)}}function En(n,e){if(r(n)&&f(e))n.splice(e,1);else{var t=n.__ob__;n._isVue||t&&t.vmCount||Fn(n)||C(n,e)&&(delete n[e],t&&t.dep.notify())}}function Un(n){for(var e=void 0,t=0,o=n.length;t<o;t++)(e=n[t])&&e.__ob__&&e.__ob__.dep.depend(),r(e)&&Un(e)}function Ln(n){return Rn(n,!0),$(n,"__v_isShallow",!0),n}function Rn(n,e){if(!Fn(n)){Dn(n,e,an());0}}function Fn(n){return!(!n||!n.__v_isReadonly)}function Nn(n){return!(!n||!0!==n.__v_isRef)}function zn(n,e,t){Object.defineProperty(n,t,{enumerable:!0,configurable:!0,get:function(){var n=e[t];if(Nn(n))return n.value;var o=n&&n.__ob__;return o&&o.dep.depend(),n},set:function(n){var o=e[t];Nn(o)&&!Nn(n)?o.value=n:e[t]=n}})}"".concat("watcher"," callback"),"".concat("watcher"," getter"),"".concat("watcher"," cleanup");var jn;var Gn=function(){function n(n){void 0===n&&(n=!1),this.detached=n,this.active=!0,this.effects=[],this.cleanups=[],this.parent=jn,!n&&jn&&(this.index=(jn.scopes||(jn.scopes=[])).push(this)-1)}return n.prototype.run=function(n){if(this.active){var e=jn;try{return jn=this,n()}finally{jn=e}}else 0},n.prototype.on=function(){jn=this},n.prototype.off=function(){jn=this.parent},n.prototype.stop=function(n){if(this.active){var e=void 0,t=void 0;for(e=0,t=this.effects.length;e<t;e++)this.effects[e].teardown();for(e=0,t=this.cleanups.length;e<t;e++)this.cleanups[e]();if(this.scopes)for(e=0,t=this.scopes.length;e<t;e++)this.scopes[e].stop(!0);if(!this.detached&&this.parent&&!n){var o=this.parent.scopes.pop();o&&o!==this&&(this.parent.scopes[this.index]=o,o.index=this.index)}this.parent=void 0,this.active=!1}},n}();function Vn(n){var e=n._provided,t=n.$parent&&n.$parent._provided;return t===e?n._provided=Object.create(t):e}var Hn=w((function(n){var e="&"===n.charAt(0),t="~"===(n=e?n.slice(1):n).charAt(0),o="!"===(n=t?n.slice(1):n).charAt(0);return{name:n=o?n.slice(1):n,once:t,capture:o,passive:e}}));function $n(n,e){function t(){var n=t.fns;if(!r(n))return Oe(n,null,arguments,e,"v-on handler");for(var o=n.slice(),a=0;a<o.length;a++)Oe(o[a],null,arguments,e,"v-on handler")}return t.fns=n,t}function Wn(n,e,t,o,r,i){var c,l,p,u;for(c in n)l=n[c],p=e[c],u=Hn(c),a(l)||(a(p)?(a(l.fns)&&(l=n[c]=$n(l,i)),s(u.once)&&(l=n[c]=r(u.name,l,u.capture)),t(u.name,l,u.capture,u.passive,u.params)):l!==p&&(p.fns=l,n[c]=p));for(c in e)a(n[c])&&o((u=Hn(c)).name,e[c],u.capture)}function Xn(n,e,t){var o;n instanceof mn&&(n=n.data.hook||(n.data.hook={}));var r=n[e];function c(){t.apply(this,arguments),x(o.fns,c)}a(r)?o=$n([c]):i(r.fns)&&s(r.merged)?(o=r).fns.push(c):o=$n([r,c]),o.merged=!0,n[e]=o}function qn(n,e,t,o,r){if(i(e)){if(C(e,t))return n[t]=e[t],r||delete e[t],!0;if(C(e,o))return n[t]=e[o],r||delete e[o],!0}return!1}function Kn(n){return c(n)?[hn(n)]:r(n)?function n(e,t){var o,l,p,u,d=[];for(o=0;o<e.length;o++)a(l=e[o])||"boolean"==typeof l||(p=d.length-1,u=d[p],r(l)?l.length>0&&(Yn((l=n(l,"".concat(t||"","_").concat(o)))[0])&&Yn(u)&&(d[p]=hn(u.text+l[0].text),l.shift()),d.push.apply(d,l)):c(l)?Yn(u)?d[p]=hn(u.text+l):""!==l&&d.push(hn(l)):Yn(l)&&Yn(u)?d[p]=hn(u.text+l.text):(s(e._isVList)&&i(l.tag)&&a(l.key)&&i(t)&&(l.key="__vlist".concat(t,"_").concat(o,"__")),d.push(l)));return d}(n):void 0}function Yn(n){return i(n)&&i(n.text)&&!1===n.isComment}function Qn(n,e){var t,o,a,s,c=null;if(r(n)||"string"==typeof n)for(c=new Array(n.length),t=0,o=n.length;t<o;t++)c[t]=e(n[t],t);else if("number"==typeof n)for(c=new Array(n),t=0;t<n;t++)c[t]=e(t+1,t);else if(p(n))if(pn&&n[Symbol.iterator]){c=[];for(var l=n[Symbol.iterator](),u=l.next();!u.done;)c.push(e(u.value,c.length)),u=l.next()}else for(a=Object.keys(n),c=new Array(a.length),t=0,o=a.length;t<o;t++)s=a[t],c[t]=e(n[s],s,t);return i(c)||(c=[]),c._isVList=!0,c}function Jn(n,e,t,o){var r,a=this.$scopedSlots[n];a?(t=t||{},o&&(t=D(D({},o),t)),r=a(t)||(l(e)?e():e)):r=this.$slots[n]||(l(e)?e():e);var i=t&&t.slot;return i?this.$createElement("template",{slot:i},r):r}function Zn(n){return Mt(this.$options,"filters",n,!0)||U}function ne(n,e){return r(n)?-1===n.indexOf(e):n!==e}function ee(n,e,t,o,r){var a=G.keyCodes[e]||t;return r&&o&&!G.keyCodes[e]?ne(r,o):a?ne(a,n):o?I(o)!==e:void 0===n}function te(n,e,t,o,a){if(t)if(p(t)){r(t)&&(t=B(t));var i=void 0,s=function(r){if("class"===r||"style"===r||y(r))i=n;else{var s=n.attrs&&n.attrs.type;i=o||G.mustUseProp(e,s,r)?n.domProps||(n.domProps={}):n.attrs||(n.attrs={})}var c=A(r),l=I(r);c in i||l in i||(i[r]=t[r],a&&((n.on||(n.on={}))["update:".concat(r)]=function(n){t[r]=n}))};for(var c in t)s(c)}else;return n}function oe(n,e){var t=this._staticTrees||(this._staticTrees=[]),o=t[n];return o&&!e||ae(o=t[n]=this.$options.staticRenderFns[n].call(this._renderProxy,this._c,this),"__static__".concat(n),!1),o}function re(n,e,t){return ae(n,"__once__".concat(e).concat(t?"_".concat(t):""),!0),n}function ae(n,e,t){if(r(n))for(var o=0;o<n.length;o++)n[o]&&"string"!=typeof n[o]&&ie(n[o],"".concat(e,"_").concat(o),t);else ie(n,e,t)}function ie(n,e,t){n.isStatic=!0,n.key=e,n.isOnce=t}function se(n,e){if(e)if(d(e)){var t=n.on=n.on?D({},n.on):{};for(var o in e){var r=t[o],a=e[o];t[o]=r?[].concat(r,a):a}}else;return n}function ce(n,e,t,o){e=e||{$stable:!t};for(var a=0;a<n.length;a++){var i=n[a];r(i)?ce(i,e,t):i&&(i.proxy&&(i.fn.proxy=!0),e[i.key]=i.fn)}return o&&(e.$key=o),e}function le(n,e){for(var t=0;t<e.length;t+=2){var o=e[t];"string"==typeof o&&o&&(n[e[t]]=e[t+1])}return n}function pe(n,e){return"string"==typeof n?e+n:n}function ue(n){n._o=re,n._n=g,n._s=v,n._l=Qn,n._t=Jn,n._q=L,n._i=R,n._m=oe,n._f=Zn,n._k=ee,n._b=te,n._v=hn,n._e=fn,n._u=ce,n._g=se,n._d=le,n._p=pe}function de(n,e){if(!n||!n.length)return{};for(var t={},o=0,r=n.length;o<r;o++){var a=n[o],i=a.data;if(i&&i.attrs&&i.attrs.slot&&delete i.attrs.slot,a.context!==e&&a.fnContext!==e||!i||null==i.slot)(t.default||(t.default=[])).push(a);else{var s=i.slot,c=t[s]||(t[s]=[]);"template"===a.tag?c.push.apply(c,a.children||[]):c.push(a)}}for(var l in t)t[l].every(me)&&delete t[l];return t}function me(n){return n.isComment&&!n.asyncFactory||" "===n.text}function fe(n){return n.isComment&&n.asyncFactory}function he(n,e,t,r){var a,i=Object.keys(t).length>0,s=e?!!e.$stable:!i,c=e&&e.$key;if(e){if(e._normalized)return e._normalized;if(s&&r&&r!==o&&c===r.$key&&!i&&!r.$hasNormal)return r;for(var l in a={},e)e[l]&&"$"!==l[0]&&(a[l]=ve(n,t,l,e[l]))}else a={};for(var p in t)p in a||(a[p]=ge(t,p));return e&&Object.isExtensible(e)&&(e._normalized=a),$(a,"$stable",s),$(a,"$key",c),$(a,"$hasNormal",i),a}function ve(n,e,t,o){var a=function(){var e=un;dn(n);var t=arguments.length?o.apply(null,arguments):o({}),a=(t=t&&"object"==typeof t&&!r(t)?[t]:Kn(t))&&t[0];return dn(e),t&&(!a||1===t.length&&a.isComment&&!fe(a))?void 0:t};return o.proxy&&Object.defineProperty(e,t,{get:a,enumerable:!0,configurable:!0}),a}function ge(n,e){return function(){return n[e]}}function be(n){return{get attrs(){if(!n._attrsProxy){var e=n._attrsProxy={};$(e,"_v_attr_proxy",!0),ye(e,n.$attrs,o,n,"$attrs")}return n._attrsProxy},get listeners(){n._listenersProxy||ye(n._listenersProxy={},n.$listeners,o,n,"$listeners");return n._listenersProxy},get slots(){return function(n){n._slotsProxy||Se(n._slotsProxy={},n.$scopedSlots);return n._slotsProxy}(n)},emit:_(n.$emit,n),expose:function(e){e&&Object.keys(e).forEach((function(t){return zn(n,e,t)}))}}}function ye(n,e,t,o,r){var a=!1;for(var i in e)i in n?e[i]!==t[i]&&(a=!0):(a=!0,xe(n,i,o,r));for(var i in n)i in e||(a=!0,delete n[i]);return a}function xe(n,e,t,o){Object.defineProperty(n,e,{enumerable:!0,configurable:!0,get:function(){return t[o][e]}})}function Se(n,e){for(var t in e)n[t]=e[t];for(var t in n)t in e||delete n[t]}var Ce=null;function we(n,e){return(n.__esModule||pn&&"Module"===n[Symbol.toStringTag])&&(n=n.default),p(n)?e.extend(n):n}function ke(n){if(r(n))for(var e=0;e<n.length;e++){var t=n[e];if(i(t)&&(i(t.componentOptions)||fe(t)))return t}}function Ae(n,e,t,o,u,d){return(r(t)||c(t))&&(u=o,o=t,t=void 0),s(d)&&(u=2),function(n,e,t,o,c){if(i(t)&&i(t.__ob__))return fn();i(t)&&i(t.is)&&(e=t.is);if(!e)return fn();0;r(o)&&l(o[0])&&((t=t||{}).scopedSlots={default:o[0]},o.length=0);2===c?o=Kn(o):1===c&&(o=function(n){for(var e=0;e<n.length;e++)if(r(n[e]))return Array.prototype.concat.apply([],n);return n}(o));var u,d;if("string"==typeof e){var m=void 0;d=n.$vnode&&n.$vnode.ns||G.getTagNamespace(e),u=G.isReservedTag(e)?new mn(G.parsePlatformTagName(e),t,o,void 0,void 0,n):t&&t.pre||!i(m=Mt(n.$options,"components",e))?new mn(e,t,o,void 0,void 0,n):xt(m,t,n,o,e)}else u=xt(e,t,n,o);return r(u)?u:i(u)?(i(d)&&function n(e,t,o){e.ns=t,"foreignObject"===e.tag&&(t=void 0,o=!0);if(i(e.children))for(var r=0,c=e.children.length;r<c;r++){var l=e.children[r];i(l.tag)&&(a(l.ns)||s(o)&&"svg"!==l.tag)&&n(l,t,o)}}(u,d),i(t)&&function(n){p(n.style)&&Ge(n.style);p(n.class)&&Ge(n.class)}(t),u):fn()}(n,e,t,o,u)}function Pe(n,e,t){Sn();try{if(e)for(var o=e;o=o.$parent;){var r=o.$options.errorCaptured;if(r)for(var a=0;a<r.length;a++)try{if(!1===r[a].call(o,n,e,t))return}catch(n){Ie(n,o,"errorCaptured hook")}}Ie(n,e,t)}finally{Cn()}}function Oe(n,e,t,o,r){var a;try{(a=t?n.apply(e,t):n.call(e))&&!a._isVue&&h(a)&&!a._handled&&(a.catch((function(n){return Pe(n,o,r+" (Promise/async)")})),a._handled=!0)}catch(n){Pe(n,o,r)}return a}function Ie(n,e,t){if(G.errorHandler)try{return G.errorHandler.call(null,n,e,t)}catch(e){e!==n&&_e(e,null,"config.errorHandler")}_e(n,e,t)}function _e(n,e,t){if(!q||"undefined"==typeof console)throw n;console.error(n)}var Me,De=!1,Be=[],Te=!1;function Ee(){Te=!1;var n=Be.slice(0);Be.length=0;for(var e=0;e<n.length;e++)n[e]()}if("undefined"!=typeof Promise&&cn(Promise)){var Ue=Promise.resolve();Me=function(){Ue.then(Ee),Z&&setTimeout(T)},De=!0}else if(Y||"undefined"==typeof MutationObserver||!cn(MutationObserver)&&"[object MutationObserverConstructor]"!==MutationObserver.toString())Me="undefined"!=typeof setImmediate&&cn(setImmediate)?function(){setImmediate(Ee)}:function(){setTimeout(Ee,0)};else{var Le=1,Re=new MutationObserver(Ee),Fe=document.createTextNode(String(Le));Re.observe(Fe,{characterData:!0}),Me=function(){Le=(Le+1)%2,Fe.data=String(Le)},De=!0}function Ne(n,e){var t;if(Be.push((function(){if(n)try{n.call(e)}catch(n){Pe(n,e,"nextTick")}else t&&t(e)})),Te||(Te=!0,Me()),!n&&"undefined"!=typeof Promise)return new Promise((function(n){t=n}))}function ze(n){return function(e,t){if(void 0===t&&(t=un),t)return function(n,e,t){var o=n.$options;o[e]=Pt(o[e],t)}(t,n,e)}}ze("beforeMount"),ze("mounted"),ze("beforeUpdate"),ze("updated"),ze("beforeDestroy"),ze("destroyed"),ze("activated"),ze("deactivated"),ze("serverPrefetch"),ze("renderTracked"),ze("renderTriggered"),ze("errorCaptured");var je=new ln;function Ge(n){return function n(e,t){var o,a,i=r(e);if(!i&&!p(e)||e.__v_skip||Object.isFrozen(e)||e instanceof mn)return;if(e.__ob__){var s=e.__ob__.dep.id;if(t.has(s))return;t.add(s)}if(i)for(o=e.length;o--;)n(e[o],t);else if(Nn(e))n(e.value,t);else for(a=Object.keys(e),o=a.length;o--;)n(e[a[o]],t)}(n,je),je.clear(),n}var Ve,He=0,$e=function(){function n(n,e,t,o,r){var a,i;a=this,void 0===(i=jn&&!jn._vm?jn:n?n._scope:void 0)&&(i=jn),i&&i.active&&i.effects.push(a),(this.vm=n)&&r&&(n._watcher=this),o?(this.deep=!!o.deep,this.user=!!o.user,this.lazy=!!o.lazy,this.sync=!!o.sync,this.before=o.before):this.deep=this.user=this.lazy=this.sync=!1,this.cb=t,this.id=++He,this.active=!0,this.post=!1,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new ln,this.newDepIds=new ln,this.expression="",l(e)?this.getter=e:(this.getter=function(n){if(!W.test(n)){var e=n.split(".");return function(n){for(var t=0;t<e.length;t++){if(!n)return;n=n[e[t]]}return n}}}(e),this.getter||(this.getter=T)),this.value=this.lazy?void 0:this.get()}return n.prototype.get=function(){var n;Sn(this);var e=this.vm;try{n=this.getter.call(e,e)}catch(n){if(!this.user)throw n;Pe(n,e,'getter for watcher "'.concat(this.expression,'"'))}finally{this.deep&&Ge(n),Cn(),this.cleanupDeps()}return n},n.prototype.addDep=function(n){var e=n.id;this.newDepIds.has(e)||(this.newDepIds.add(e),this.newDeps.push(n),this.depIds.has(e)||n.addSub(this))},n.prototype.cleanupDeps=function(){for(var n=this.deps.length;n--;){var e=this.deps[n];this.newDepIds.has(e.id)||e.removeSub(this)}var t=this.depIds;this.depIds=this.newDepIds,this.newDepIds=t,this.newDepIds.clear(),t=this.deps,this.deps=this.newDeps,this.newDeps=t,this.newDeps.length=0},n.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():dt(this)},n.prototype.run=function(){if(this.active){var n=this.get();if(n!==this.value||p(n)||this.deep){var e=this.value;if(this.value=n,this.user){var t='callback for watcher "'.concat(this.expression,'"');Oe(this.cb,this.vm,[n,e],this.vm,t)}else this.cb.call(this.vm,n,e)}}},n.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},n.prototype.depend=function(){for(var n=this.deps.length;n--;)this.deps[n].depend()},n.prototype.teardown=function(){if(this.vm&&!this.vm._isBeingDestroyed&&x(this.vm._scope.effects,this),this.active){for(var n=this.deps.length;n--;)this.deps[n].removeSub(this);this.active=!1,this.onStop&&this.onStop()}},n}();function We(n,e){Ve.$on(n,e)}function Xe(n,e){Ve.$off(n,e)}function qe(n,e){var t=Ve;return function o(){var r=e.apply(null,arguments);null!==r&&t.$off(n,o)}}function Ke(n,e,t){Ve=n,Wn(e,t||{},We,Xe,qe,n),Ve=void 0}var Ye=null;function Qe(n){var e=Ye;return Ye=n,function(){Ye=e}}function Je(n){for(;n&&(n=n.$parent);)if(n._inactive)return!0;return!1}function Ze(n,e){if(e){if(n._directInactive=!1,Je(n))return}else if(n._directInactive)return;if(n._inactive||null===n._inactive){n._inactive=!1;for(var t=0;t<n.$children.length;t++)Ze(n.$children[t]);nt(n,"activated")}}function nt(n,e,t,o){void 0===o&&(o=!0),Sn();var r=un;o&&dn(n);var a=n.$options[e],i="".concat(e," hook");if(a)for(var s=0,c=a.length;s<c;s++)Oe(a[s],n,t||null,n,i);n._hasHookEvent&&n.$emit("hook:"+e),o&&dn(r),Cn()}var et=[],tt=[],ot={},rt=!1,at=!1,it=0;var st=0,ct=Date.now;if(q&&!Y){var lt=window.performance;lt&&"function"==typeof lt.now&&ct()>document.createEvent("Event").timeStamp&&(ct=function(){return lt.now()})}var pt=function(n,e){if(n.post){if(!e.post)return 1}else if(e.post)return-1;return n.id-e.id};function ut(){var n,e;for(st=ct(),at=!0,et.sort(pt),it=0;it<et.length;it++)(n=et[it]).before&&n.before(),e=n.id,ot[e]=null,n.run();var t=tt.slice(),o=et.slice();it=et.length=tt.length=0,ot={},rt=at=!1,function(n){for(var e=0;e<n.length;e++)n[e]._inactive=!0,Ze(n[e],!0)}(t),function(n){var e=n.length;for(;e--;){var t=n[e],o=t.vm;o&&o._watcher===t&&o._isMounted&&!o._isDestroyed&&nt(o,"updated")}}(o),function(){for(var n=0;n<bn.length;n++){var e=bn[n];e.subs=e.subs.filter((function(n){return n})),e._pending=!1}bn.length=0}(),sn&&G.devtools&&sn.emit("flush")}function dt(n){var e=n.id;if(null==ot[e]&&(n!==yn.target||!n.noRecurse)){if(ot[e]=!0,at){for(var t=et.length-1;t>it&&et[t].id>n.id;)t--;et.splice(t+1,0,n)}else et.push(n);rt||(rt=!0,Ne(ut))}}function mt(n,e){if(n){for(var t=Object.create(null),o=pn?Reflect.ownKeys(n):Object.keys(n),r=0;r<o.length;r++){var a=o[r];if("__ob__"!==a){var i=n[a].from;if(i in e._provided)t[a]=e._provided[i];else if("default"in n[a]){var s=n[a].default;t[a]=l(s)?s.call(e):s}else 0}}return t}}function ft(n,e,t,a,i){var c,l=this,p=i.options;C(a,"_uid")?(c=Object.create(a))._original=a:(c=a,a=a._original);var u=s(p._compiled),d=!u;this.data=n,this.props=e,this.children=t,this.parent=a,this.listeners=n.on||o,this.injections=mt(p.inject,a),this.slots=function(){return l.$slots||he(a,n.scopedSlots,l.$slots=de(t,a)),l.$slots},Object.defineProperty(this,"scopedSlots",{enumerable:!0,get:function(){return he(a,n.scopedSlots,this.slots())}}),u&&(this.$options=p,this.$slots=this.slots(),this.$scopedSlots=he(a,n.scopedSlots,this.$slots)),p._scopeId?this._c=function(n,e,t,o){var i=Ae(c,n,e,t,o,d);return i&&!r(i)&&(i.fnScopeId=p._scopeId,i.fnContext=a),i}:this._c=function(n,e,t,o){return Ae(c,n,e,t,o,d)}}function ht(n,e,t,o,r){var a=vn(n);return a.fnContext=t,a.fnOptions=o,e.slot&&((a.data||(a.data={})).slot=e.slot),a}function vt(n,e){for(var t in e)n[A(t)]=e[t]}function gt(n){return n.name||n.__name||n._componentTag}ue(ft.prototype);var bt={init:function(n,e){if(n.componentInstance&&!n.componentInstance._isDestroyed&&n.data.keepAlive){var t=n;bt.prepatch(t,t)}else{(n.componentInstance=function(n,e){var t={_isComponent:!0,_parentVnode:n,parent:e},o=n.data.inlineTemplate;i(o)&&(t.render=o.render,t.staticRenderFns=o.staticRenderFns);return new n.componentOptions.Ctor(t)}(n,Ye)).$mount(e?n.elm:void 0,e)}},prepatch:function(n,e){var t=e.componentOptions;!function(n,e,t,r,a){var i=r.data.scopedSlots,s=n.$scopedSlots,c=!!(i&&!i.$stable||s!==o&&!s.$stable||i&&n.$scopedSlots.$key!==i.$key||!i&&n.$scopedSlots.$key),l=!!(a||n.$options._renderChildren||c),p=n.$vnode;n.$options._parentVnode=r,n.$vnode=r,n._vnode&&(n._vnode.parent=r),n.$options._renderChildren=a;var u=r.data.attrs||o;n._attrsProxy&&ye(n._attrsProxy,u,p.data&&p.data.attrs||o,n,"$attrs")&&(l=!0),n.$attrs=u,t=t||o;var d=n.$options._parentListeners;if(n._listenersProxy&&ye(n._listenersProxy,t,d||o,n,"$listeners"),n.$listeners=n.$options._parentListeners=t,Ke(n,t,d),e&&n.$options.props){In(!1);for(var m=n._props,f=n.$options._propKeys||[],h=0;h<f.length;h++){var v=f[h],g=n.$options.props;m[v]=Dt(v,g,e,n)}In(!0),n.$options.propsData=e}l&&(n.$slots=de(a,r.context),n.$forceUpdate())}(e.componentInstance=n.componentInstance,t.propsData,t.listeners,e,t.children)},insert:function(n){var e,t=n.context,o=n.componentInstance;o._isMounted||(o._isMounted=!0,nt(o,"mounted")),n.data.keepAlive&&(t._isMounted?((e=o)._inactive=!1,tt.push(e)):Ze(o,!0))},destroy:function(n){var e=n.componentInstance;e._isDestroyed||(n.data.keepAlive?function n(e,t){if(!(t&&(e._directInactive=!0,Je(e))||e._inactive)){e._inactive=!0;for(var o=0;o<e.$children.length;o++)n(e.$children[o]);nt(e,"deactivated")}}(e,!0):e.$destroy())}},yt=Object.keys(bt);function xt(n,e,t,c,l){if(!a(n)){var u=t.$options._base;if(p(n)&&(n=u.extend(n)),"function"==typeof n){var d;if(a(n.cid)&&void 0===(n=function(n,e){if(s(n.error)&&i(n.errorComp))return n.errorComp;if(i(n.resolved))return n.resolved;var t=Ce;if(t&&i(n.owners)&&-1===n.owners.indexOf(t)&&n.owners.push(t),s(n.loading)&&i(n.loadingComp))return n.loadingComp;if(t&&!i(n.owners)){var o=n.owners=[t],r=!0,c=null,l=null;t.$on("hook:destroyed",(function(){return x(o,t)}));var u=function(n){for(var e=0,t=o.length;e<t;e++)o[e].$forceUpdate();n&&(o.length=0,null!==c&&(clearTimeout(c),c=null),null!==l&&(clearTimeout(l),l=null))},d=F((function(t){n.resolved=we(t,e),r?o.length=0:u(!0)})),m=F((function(e){i(n.errorComp)&&(n.error=!0,u(!0))})),f=n(d,m);return p(f)&&(h(f)?a(n.resolved)&&f.then(d,m):h(f.component)&&(f.component.then(d,m),i(f.error)&&(n.errorComp=we(f.error,e)),i(f.loading)&&(n.loadingComp=we(f.loading,e),0===f.delay?n.loading=!0:c=setTimeout((function(){c=null,a(n.resolved)&&a(n.error)&&(n.loading=!0,u(!1))}),f.delay||200)),i(f.timeout)&&(l=setTimeout((function(){l=null,a(n.resolved)&&m(null)}),f.timeout)))),r=!1,n.loading?n.loadingComp:n.resolved}}(d=n,u)))return function(n,e,t,o,r){var a=fn();return a.asyncFactory=n,a.asyncMeta={data:e,context:t,children:o,tag:r},a}(d,e,t,c,l);e=e||{},$t(n),i(e.model)&&function(n,e){var t=n.model&&n.model.prop||"value",o=n.model&&n.model.event||"input";(e.attrs||(e.attrs={}))[t]=e.model.value;var a=e.on||(e.on={}),s=a[o],c=e.model.callback;i(s)?(r(s)?-1===s.indexOf(c):s!==c)&&(a[o]=[c].concat(s)):a[o]=c}(n.options,e);var m=function(n,e,t){var o=e.options.props;if(!a(o)){var r={},s=n.attrs,c=n.props;if(i(s)||i(c))for(var l in o){var p=I(l);qn(r,c,l,p,!0)||qn(r,s,l,p,!1)}return r}}(e,n);if(s(n.options.functional))return function(n,e,t,a,s){var c=n.options,l={},p=c.props;if(i(p))for(var u in p)l[u]=Dt(u,p,e||o);else i(t.attrs)&&vt(l,t.attrs),i(t.props)&&vt(l,t.props);var d=new ft(t,l,s,a,n),m=c.render.call(null,d._c,d);if(m instanceof mn)return ht(m,t,d.parent,c,d);if(r(m)){for(var f=Kn(m)||[],h=new Array(f.length),v=0;v<f.length;v++)h[v]=ht(f[v],t,d.parent,c,d);return h}}(n,m,e,t,c);var f=e.on;if(e.on=e.nativeOn,s(n.options.abstract)){var v=e.slot;e={},v&&(e.slot=v)}!function(n){for(var e=n.hook||(n.hook={}),t=0;t<yt.length;t++){var o=yt[t],r=e[o],a=bt[o];r===a||r&&r._merged||(e[o]=r?St(a,r):a)}}(e);var g=gt(n.options)||l;return new mn("vue-component-".concat(n.cid).concat(g?"-".concat(g):""),e,void 0,void 0,void 0,t,{Ctor:n,propsData:m,listeners:f,tag:l,children:c},d)}}}function St(n,e){var t=function(t,o){n(t,o),e(t,o)};return t._merged=!0,t}var Ct=T,wt=G.optionMergeStrategies;function kt(n,e,t){if(void 0===t&&(t=!0),!e)return n;for(var o,r,a,i=pn?Reflect.ownKeys(e):Object.keys(e),s=0;s<i.length;s++)"__ob__"!==(o=i[s])&&(r=n[o],a=e[o],t&&C(n,o)?r!==a&&d(r)&&d(a)&&kt(r,a):Tn(n,o,a));return n}function At(n,e,t){return t?function(){var o=l(e)?e.call(t,t):e,r=l(n)?n.call(t,t):n;return o?kt(o,r):r}:e?n?function(){return kt(l(e)?e.call(this,this):e,l(n)?n.call(this,this):n)}:e:n}function Pt(n,e){var t=e?n?n.concat(e):r(e)?e:[e]:n;return t?function(n){for(var e=[],t=0;t<n.length;t++)-1===e.indexOf(n[t])&&e.push(n[t]);return e}(t):t}function Ot(n,e,t,o){var r=Object.create(n||null);return e?D(r,e):r}wt.data=function(n,e,t){return t?At(n,e,t):e&&"function"!=typeof e?n:At(n,e)},j.forEach((function(n){wt[n]=Pt})),z.forEach((function(n){wt[n+"s"]=Ot})),wt.watch=function(n,e,t,o){if(n===tn&&(n=void 0),e===tn&&(e=void 0),!e)return Object.create(n||null);if(!n)return e;var a={};for(var i in D(a,n),e){var s=a[i],c=e[i];s&&!r(s)&&(s=[s]),a[i]=s?s.concat(c):r(c)?c:[c]}return a},wt.props=wt.methods=wt.inject=wt.computed=function(n,e,t,o){if(!n)return e;var r=Object.create(null);return D(r,n),e&&D(r,e),r},wt.provide=function(n,e){return n?function(){var t=Object.create(null);return kt(t,l(n)?n.call(this):n),e&&kt(t,l(e)?e.call(this):e,!1),t}:e};var It=function(n,e){return void 0===e?n:e};function _t(n,e,t){if(l(e)&&(e=e.options),function(n,e){var t=n.props;if(t){var o,a,i={};if(r(t))for(o=t.length;o--;)"string"==typeof(a=t[o])&&(i[A(a)]={type:null});else if(d(t))for(var s in t)a=t[s],i[A(s)]=d(a)?a:{type:a};else 0;n.props=i}}(e),function(n,e){var t=n.inject;if(t){var o=n.inject={};if(r(t))for(var a=0;a<t.length;a++)o[t[a]]={from:t[a]};else if(d(t))for(var i in t){var s=t[i];o[i]=d(s)?D({from:i},s):{from:s}}else 0}}(e),function(n){var e=n.directives;if(e)for(var t in e){var o=e[t];l(o)&&(e[t]={bind:o,update:o})}}(e),!e._base&&(e.extends&&(n=_t(n,e.extends,t)),e.mixins))for(var o=0,a=e.mixins.length;o<a;o++)n=_t(n,e.mixins[o],t);var i,s={};for(i in n)c(i);for(i in e)C(n,i)||c(i);function c(o){var r=wt[o]||It;s[o]=r(n[o],e[o],t,o)}return s}function Mt(n,e,t,o){if("string"==typeof t){var r=n[e];if(C(r,t))return r[t];var a=A(t);if(C(r,a))return r[a];var i=P(a);return C(r,i)?r[i]:r[t]||r[a]||r[i]}}function Dt(n,e,t,o){var r=e[n],a=!C(t,n),i=t[n],s=Ut(Boolean,r.type);if(s>-1)if(a&&!C(r,"default"))i=!1;else if(""===i||i===I(n)){var c=Ut(String,r.type);(c<0||s<c)&&(i=!0)}if(void 0===i){i=function(n,e,t){if(!C(e,"default"))return;var o=e.default;0;if(n&&n.$options.propsData&&void 0===n.$options.propsData[t]&&void 0!==n._props[t])return n._props[t];return l(o)&&"Function"!==Tt(e.type)?o.call(n):o}(o,r,n);var p=On;In(!0),Dn(i),In(p)}return i}var Bt=/^\s*function (\w+)/;function Tt(n){var e=n&&n.toString().match(Bt);return e?e[1]:""}function Et(n,e){return Tt(n)===Tt(e)}function Ut(n,e){if(!r(e))return Et(e,n)?0:-1;for(var t=0,o=e.length;t<o;t++)if(Et(e[t],n))return t;return-1}var Lt={enumerable:!0,configurable:!0,get:T,set:T};function Rt(n,e,t){Lt.get=function(){return this[e][t]},Lt.set=function(n){this[e][t]=n},Object.defineProperty(n,t,Lt)}function Ft(n){var e=n.$options;if(e.props&&function(n,e){var t=n.$options.propsData||{},o=n._props=Ln({}),r=n.$options._propKeys=[];n.$parent&&In(!1);var a=function(a){r.push(a);var i=Dt(a,e,t,n);Bn(o,a,i),a in n||Rt(n,"_props",a)};for(var i in e)a(i);In(!0)}(n,e.props),function(n){var e=n.$options,t=e.setup;if(t){var o=n._setupContext=be(n);dn(n),Sn();var r=Oe(t,null,[n._props||Ln({}),o],n,"setup");if(Cn(),dn(),l(r))e.render=r;else if(p(r))if(n._setupState=r,r.__sfc){var a=n._setupProxy={};for(var i in r)"__sfc"!==i&&zn(a,r,i)}else for(var i in r)H(i)||zn(n,r,i);else 0}}(n),e.methods&&function(n,e){n.$options.props;for(var t in e)n[t]="function"!=typeof e[t]?T:_(e[t],n)}(n,e.methods),e.data)!function(n){var e=n.$options.data;d(e=n._data=l(e)?function(n,e){Sn();try{return n.call(e,e)}catch(n){return Pe(n,e,"data()"),{}}finally{Cn()}}(e,n):e||{})||(e={});var t=Object.keys(e),o=n.$options.props,r=(n.$options.methods,t.length);for(;r--;){var a=t[r];0,o&&C(o,a)||H(a)||Rt(n,"_data",a)}var i=Dn(e);i&&i.vmCount++}(n);else{var t=Dn(n._data={});t&&t.vmCount++}e.computed&&function(n,e){var t=n._computedWatchers=Object.create(null),o=an();for(var r in e){var a=e[r],i=l(a)?a:a.get;0,o||(t[r]=new $e(n,i||T,T,Nt)),r in n||zt(n,r,a)}}(n,e.computed),e.watch&&e.watch!==tn&&function(n,e){for(var t in e){var o=e[t];if(r(o))for(var a=0;a<o.length;a++)Vt(n,t,o[a]);else Vt(n,t,o)}}(n,e.watch)}var Nt={lazy:!0};function zt(n,e,t){var o=!an();l(t)?(Lt.get=o?jt(e):Gt(t),Lt.set=T):(Lt.get=t.get?o&&!1!==t.cache?jt(e):Gt(t.get):T,Lt.set=t.set||T),Object.defineProperty(n,e,Lt)}function jt(n){return function(){var e=this._computedWatchers&&this._computedWatchers[n];if(e)return e.dirty&&e.evaluate(),yn.target&&e.depend(),e.value}}function Gt(n){return function(){return n.call(this,this)}}function Vt(n,e,t,o){return d(t)&&(o=t,t=t.handler),"string"==typeof t&&(t=n[t]),n.$watch(e,t,o)}var Ht=0;function $t(n){var e=n.options;if(n.super){var t=$t(n.super);if(t!==n.superOptions){n.superOptions=t;var o=function(n){var e,t=n.options,o=n.sealedOptions;for(var r in t)t[r]!==o[r]&&(e||(e={}),e[r]=t[r]);return e}(n);o&&D(n.extendOptions,o),(e=n.options=_t(t,n.extendOptions)).name&&(e.components[e.name]=n)}}return e}function Wt(n){this._init(n)}function Xt(n){n.cid=0;var e=1;n.extend=function(n){n=n||{};var t=this,o=t.cid,r=n._Ctor||(n._Ctor={});if(r[o])return r[o];var a=gt(n)||gt(t.options);var i=function(n){this._init(n)};return(i.prototype=Object.create(t.prototype)).constructor=i,i.cid=e++,i.options=_t(t.options,n),i.super=t,i.options.props&&function(n){var e=n.options.props;for(var t in e)Rt(n.prototype,"_props",t)}(i),i.options.computed&&function(n){var e=n.options.computed;for(var t in e)zt(n.prototype,t,e[t])}(i),i.extend=t.extend,i.mixin=t.mixin,i.use=t.use,z.forEach((function(n){i[n]=t[n]})),a&&(i.options.components[a]=i),i.superOptions=t.options,i.extendOptions=n,i.sealedOptions=D({},i.options),r[o]=i,i}}function qt(n){return n&&(gt(n.Ctor.options)||n.tag)}function Kt(n,e){return r(n)?n.indexOf(e)>-1:"string"==typeof n?n.split(",").indexOf(e)>-1:!!m(n)&&n.test(e)}function Yt(n,e){var t=n.cache,o=n.keys,r=n._vnode;for(var a in t){var i=t[a];if(i){var s=i.name;s&&!e(s)&&Qt(t,a,o,r)}}}function Qt(n,e,t,o){var r=n[e];!r||o&&r.tag===o.tag||r.componentInstance.$destroy(),n[e]=null,x(t,e)}Wt.prototype._init=function(n){var e=this;e._uid=Ht++,e._isVue=!0,e.__v_skip=!0,e._scope=new Gn(!0),e._scope._vm=!0,n&&n._isComponent?function(n,e){var t=n.$options=Object.create(n.constructor.options),o=e._parentVnode;t.parent=e.parent,t._parentVnode=o;var r=o.componentOptions;t.propsData=r.propsData,t._parentListeners=r.listeners,t._renderChildren=r.children,t._componentTag=r.tag,e.render&&(t.render=e.render,t.staticRenderFns=e.staticRenderFns)}(e,n):e.$options=_t($t(e.constructor),n||{},e),e._renderProxy=e,e._self=e,function(n){var e=n.$options,t=e.parent;if(t&&!e.abstract){for(;t.$options.abstract&&t.$parent;)t=t.$parent;t.$children.push(n)}n.$parent=t,n.$root=t?t.$root:n,n.$children=[],n.$refs={},n._provided=t?t._provided:Object.create(null),n._watcher=null,n._inactive=null,n._directInactive=!1,n._isMounted=!1,n._isDestroyed=!1,n._isBeingDestroyed=!1}(e),function(n){n._events=Object.create(null),n._hasHookEvent=!1;var e=n.$options._parentListeners;e&&Ke(n,e)}(e),function(n){n._vnode=null,n._staticTrees=null;var e=n.$options,t=n.$vnode=e._parentVnode,r=t&&t.context;n.$slots=de(e._renderChildren,r),n.$scopedSlots=t?he(n.$parent,t.data.scopedSlots,n.$slots):o,n._c=function(e,t,o,r){return Ae(n,e,t,o,r,!1)},n.$createElement=function(e,t,o,r){return Ae(n,e,t,o,r,!0)};var a=t&&t.data;Bn(n,"$attrs",a&&a.attrs||o,null,!0),Bn(n,"$listeners",e._parentListeners||o,null,!0)}(e),nt(e,"beforeCreate",void 0,!1),function(n){var e=mt(n.$options.inject,n);e&&(In(!1),Object.keys(e).forEach((function(t){Bn(n,t,e[t])})),In(!0))}(e),Ft(e),function(n){var e=n.$options.provide;if(e){var t=l(e)?e.call(n):e;if(!p(t))return;for(var o=Vn(n),r=pn?Reflect.ownKeys(t):Object.keys(t),a=0;a<r.length;a++){var i=r[a];Object.defineProperty(o,i,Object.getOwnPropertyDescriptor(t,i))}}}(e),nt(e,"created"),e.$options.el&&e.$mount(e.$options.el)},function(n){var e={get:function(){return this._data}},t={get:function(){return this._props}};Object.defineProperty(n.prototype,"$data",e),Object.defineProperty(n.prototype,"$props",t),n.prototype.$set=Tn,n.prototype.$delete=En,n.prototype.$watch=function(n,e,t){if(d(e))return Vt(this,n,e,t);(t=t||{}).user=!0;var o=new $e(this,n,e,t);if(t.immediate){var r='callback for immediate watcher "'.concat(o.expression,'"');Sn(),Oe(e,this,[o.value],this,r),Cn()}return function(){o.teardown()}}}(Wt),function(n){var e=/^hook:/;n.prototype.$on=function(n,t){var o=this;if(r(n))for(var a=0,i=n.length;a<i;a++)o.$on(n[a],t);else(o._events[n]||(o._events[n]=[])).push(t),e.test(n)&&(o._hasHookEvent=!0);return o},n.prototype.$once=function(n,e){var t=this;function o(){t.$off(n,o),e.apply(t,arguments)}return o.fn=e,t.$on(n,o),t},n.prototype.$off=function(n,e){var t=this;if(!arguments.length)return t._events=Object.create(null),t;if(r(n)){for(var o=0,a=n.length;o<a;o++)t.$off(n[o],e);return t}var i,s=t._events[n];if(!s)return t;if(!e)return t._events[n]=null,t;for(var c=s.length;c--;)if((i=s[c])===e||i.fn===e){s.splice(c,1);break}return t},n.prototype.$emit=function(n){var e=this,t=e._events[n];if(t){t=t.length>1?M(t):t;for(var o=M(arguments,1),r='event handler for "'.concat(n,'"'),a=0,i=t.length;a<i;a++)Oe(t[a],e,o,e,r)}return e}}(Wt),function(n){n.prototype._update=function(n,e){var t=this,o=t.$el,r=t._vnode,a=Qe(t);t._vnode=n,t.$el=r?t.__patch__(r,n):t.__patch__(t.$el,n,e,!1),a(),o&&(o.__vue__=null),t.$el&&(t.$el.__vue__=t);for(var i=t;i&&i.$vnode&&i.$parent&&i.$vnode===i.$parent._vnode;)i.$parent.$el=i.$el,i=i.$parent},n.prototype.$forceUpdate=function(){this._watcher&&this._watcher.update()},n.prototype.$destroy=function(){var n=this;if(!n._isBeingDestroyed){nt(n,"beforeDestroy"),n._isBeingDestroyed=!0;var e=n.$parent;!e||e._isBeingDestroyed||n.$options.abstract||x(e.$children,n),n._scope.stop(),n._data.__ob__&&n._data.__ob__.vmCount--,n._isDestroyed=!0,n.__patch__(n._vnode,null),nt(n,"destroyed"),n.$off(),n.$el&&(n.$el.__vue__=null),n.$vnode&&(n.$vnode.parent=null)}}}(Wt),function(n){ue(n.prototype),n.prototype.$nextTick=function(n){return Ne(n,this)},n.prototype._render=function(){var n,e=this,t=e.$options,o=t.render,a=t._parentVnode;a&&e._isMounted&&(e.$scopedSlots=he(e.$parent,a.data.scopedSlots,e.$slots,e.$scopedSlots),e._slotsProxy&&Se(e._slotsProxy,e.$scopedSlots)),e.$vnode=a;try{dn(e),Ce=e,n=o.call(e._renderProxy,e.$createElement)}catch(t){Pe(t,e,"render"),n=e._vnode}finally{Ce=null,dn()}return r(n)&&1===n.length&&(n=n[0]),n instanceof mn||(n=fn()),n.parent=a,n}}(Wt);var Jt=[String,RegExp,Array],Zt={KeepAlive:{name:"keep-alive",abstract:!0,props:{include:Jt,exclude:Jt,max:[String,Number]},methods:{cacheVNode:function(){var n=this.cache,e=this.keys,t=this.vnodeToCache,o=this.keyToCache;if(t){var r=t.tag,a=t.componentInstance,i=t.componentOptions;n[o]={name:qt(i),tag:r,componentInstance:a},e.push(o),this.max&&e.length>parseInt(this.max)&&Qt(n,e[0],e,this._vnode),this.vnodeToCache=null}}},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var n in this.cache)Qt(this.cache,n,this.keys)},mounted:function(){var n=this;this.cacheVNode(),this.$watch("include",(function(e){Yt(n,(function(n){return Kt(e,n)}))})),this.$watch("exclude",(function(e){Yt(n,(function(n){return!Kt(e,n)}))}))},updated:function(){this.cacheVNode()},render:function(){var n=this.$slots.default,e=ke(n),t=e&&e.componentOptions;if(t){var o=qt(t),r=this.include,a=this.exclude;if(r&&(!o||!Kt(r,o))||a&&o&&Kt(a,o))return e;var i=this.cache,s=this.keys,c=null==e.key?t.Ctor.cid+(t.tag?"::".concat(t.tag):""):e.key;i[c]?(e.componentInstance=i[c].componentInstance,x(s,c),s.push(c)):(this.vnodeToCache=e,this.keyToCache=c),e.data.keepAlive=!0}return e||n&&n[0]}}};!function(n){var e={get:function(){return G}};Object.defineProperty(n,"config",e),n.util={warn:Ct,extend:D,mergeOptions:_t,defineReactive:Bn},n.set=Tn,n.delete=En,n.nextTick=Ne,n.observable=function(n){return Dn(n),n},n.options=Object.create(null),z.forEach((function(e){n.options[e+"s"]=Object.create(null)})),n.options._base=n,D(n.options.components,Zt),function(n){n.use=function(n){var e=this._installedPlugins||(this._installedPlugins=[]);if(e.indexOf(n)>-1)return this;var t=M(arguments,1);return t.unshift(this),l(n.install)?n.install.apply(n,t):l(n)&&n.apply(null,t),e.push(n),this}}(n),function(n){n.mixin=function(n){return this.options=_t(this.options,n),this}}(n),Xt(n),function(n){z.forEach((function(e){n[e]=function(n,t){return t?("component"===e&&d(t)&&(t.name=t.name||n,t=this.options._base.extend(t)),"directive"===e&&l(t)&&(t={bind:t,update:t}),this.options[e+"s"][n]=t,t):this.options[e+"s"][n]}}))}(n)}(Wt),Object.defineProperty(Wt.prototype,"$isServer",{get:an}),Object.defineProperty(Wt.prototype,"$ssrContext",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Object.defineProperty(Wt,"FunctionalRenderContext",{value:ft}),Wt.version="2.7.14";var no=b("style,class"),eo=b("input,textarea,option,select,progress"),to=b("contenteditable,draggable,spellcheck"),oo=b("events,caret,typing,plaintext-only"),ro=b("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,truespeed,typemustmatch,visible"),ao="http://www.w3.org/1999/xlink",io=function(n){return":"===n.charAt(5)&&"xlink"===n.slice(0,5)},so=function(n){return io(n)?n.slice(6,n.length):""},co=function(n){return null==n||!1===n};function lo(n){for(var e=n.data,t=n,o=n;i(o.componentInstance);)(o=o.componentInstance._vnode)&&o.data&&(e=po(o.data,e));for(;i(t=t.parent);)t&&t.data&&(e=po(e,t.data));return function(n,e){if(i(n)||i(e))return uo(n,mo(e));return""}(e.staticClass,e.class)}function po(n,e){return{staticClass:uo(n.staticClass,e.staticClass),class:i(n.class)?[n.class,e.class]:e.class}}function uo(n,e){return n?e?n+" "+e:n:e||""}function mo(n){return Array.isArray(n)?function(n){for(var e,t="",o=0,r=n.length;o<r;o++)i(e=mo(n[o]))&&""!==e&&(t&&(t+=" "),t+=e);return t}(n):p(n)?function(n){var e="";for(var t in n)n[t]&&(e&&(e+=" "),e+=t);return e}(n):"string"==typeof n?n:""}var fo={svg:"http://www.w3.org/2000/svg",math:"http://www.w3.org/1998/Math/MathML"},ho=b("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),vo=b("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignobject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0),go=function(n){return ho(n)||vo(n)};var bo=Object.create(null);var yo=b("text,number,password,search,email,tel,url");var xo=Object.freeze({__proto__:null,createElement:function(n,e){var t=document.createElement(n);return"select"!==n||e.data&&e.data.attrs&&void 0!==e.data.attrs.multiple&&t.setAttribute("multiple","multiple"),t},createElementNS:function(n,e){return document.createElementNS(fo[n],e)},createTextNode:function(n){return document.createTextNode(n)},createComment:function(n){return document.createComment(n)},insertBefore:function(n,e,t){n.insertBefore(e,t)},removeChild:function(n,e){n.removeChild(e)},appendChild:function(n,e){n.appendChild(e)},parentNode:function(n){return n.parentNode},nextSibling:function(n){return n.nextSibling},tagName:function(n){return n.tagName},setTextContent:function(n,e){n.textContent=e},setStyleScope:function(n,e){n.setAttribute(e,"")}}),So={create:function(n,e){Co(e)},update:function(n,e){n.data.ref!==e.data.ref&&(Co(n,!0),Co(e))},destroy:function(n){Co(n,!0)}};function Co(n,e){var t=n.data.ref;if(i(t)){var o=n.context,a=n.componentInstance||n.elm,s=e?null:a,c=e?void 0:a;if(l(t))Oe(t,o,[s],o,"template ref function");else{var p=n.data.refInFor,u="string"==typeof t||"number"==typeof t,d=Nn(t),m=o.$refs;if(u||d)if(p){var f=u?m[t]:t.value;e?r(f)&&x(f,a):r(f)?f.includes(a)||f.push(a):u?(m[t]=[a],wo(o,t,m[t])):t.value=[a]}else if(u){if(e&&m[t]!==a)return;m[t]=c,wo(o,t,s)}else if(d){if(e&&t.value!==a)return;t.value=s}else 0}}}function wo(n,e,t){var o=n._setupState;o&&C(o,e)&&(Nn(o[e])?o[e].value=t:o[e]=t)}var ko=new mn("",{},[]),Ao=["create","activate","update","remove","destroy"];function Po(n,e){return n.key===e.key&&n.asyncFactory===e.asyncFactory&&(n.tag===e.tag&&n.isComment===e.isComment&&i(n.data)===i(e.data)&&function(n,e){if("input"!==n.tag)return!0;var t,o=i(t=n.data)&&i(t=t.attrs)&&t.type,r=i(t=e.data)&&i(t=t.attrs)&&t.type;return o===r||yo(o)&&yo(r)}(n,e)||s(n.isAsyncPlaceholder)&&a(e.asyncFactory.error))}function Oo(n,e,t){var o,r,a={};for(o=e;o<=t;++o)i(r=n[o].key)&&(a[r]=o);return a}var Io={create:_o,update:_o,destroy:function(n){_o(n,ko)}};function _o(n,e){(n.data.directives||e.data.directives)&&function(n,e){var t,o,r,a=n===ko,i=e===ko,s=Do(n.data.directives,n.context),c=Do(e.data.directives,e.context),l=[],p=[];for(t in c)o=s[t],r=c[t],o?(r.oldValue=o.value,r.oldArg=o.arg,To(r,"update",e,n),r.def&&r.def.componentUpdated&&p.push(r)):(To(r,"bind",e,n),r.def&&r.def.inserted&&l.push(r));if(l.length){var u=function(){for(var t=0;t<l.length;t++)To(l[t],"inserted",e,n)};a?Xn(e,"insert",u):u()}p.length&&Xn(e,"postpatch",(function(){for(var t=0;t<p.length;t++)To(p[t],"componentUpdated",e,n)}));if(!a)for(t in s)c[t]||To(s[t],"unbind",n,n,i)}(n,e)}var Mo=Object.create(null);function Do(n,e){var t,o,r=Object.create(null);if(!n)return r;for(t=0;t<n.length;t++){if((o=n[t]).modifiers||(o.modifiers=Mo),r[Bo(o)]=o,e._setupState&&e._setupState.__sfc){var a=o.def||Mt(e,"_setupState","v-"+o.name);o.def="function"==typeof a?{bind:a,update:a}:a}o.def=o.def||Mt(e.$options,"directives",o.name)}return r}function Bo(n){return n.rawName||"".concat(n.name,".").concat(Object.keys(n.modifiers||{}).join("."))}function To(n,e,t,o,r){var a=n.def&&n.def[e];if(a)try{a(t.elm,n,t,o,r)}catch(o){Pe(o,t.context,"directive ".concat(n.name," ").concat(e," hook"))}}var Eo=[So,Io];function Uo(n,e){var t=e.componentOptions;if(!(i(t)&&!1===t.Ctor.options.inheritAttrs||a(n.data.attrs)&&a(e.data.attrs))){var o,r,c=e.elm,l=n.data.attrs||{},p=e.data.attrs||{};for(o in(i(p.__ob__)||s(p._v_attr_proxy))&&(p=e.data.attrs=D({},p)),p)r=p[o],l[o]!==r&&Lo(c,o,r,e.data.pre);for(o in(Y||J)&&p.value!==l.value&&Lo(c,"value",p.value),l)a(p[o])&&(io(o)?c.removeAttributeNS(ao,so(o)):to(o)||c.removeAttribute(o))}}function Lo(n,e,t,o){o||n.tagName.indexOf("-")>-1?Ro(n,e,t):ro(e)?co(t)?n.removeAttribute(e):(t="allowfullscreen"===e&&"EMBED"===n.tagName?"true":e,n.setAttribute(e,t)):to(e)?n.setAttribute(e,function(n,e){return co(e)||"false"===e?"false":"contenteditable"===n&&oo(e)?e:"true"}(e,t)):io(e)?co(t)?n.removeAttributeNS(ao,so(e)):n.setAttributeNS(ao,e,t):Ro(n,e,t)}function Ro(n,e,t){if(co(t))n.removeAttribute(e);else{if(Y&&!Q&&"TEXTAREA"===n.tagName&&"placeholder"===e&&""!==t&&!n.__ieph){var o=function(e){e.stopImmediatePropagation(),n.removeEventListener("input",o)};n.addEventListener("input",o),n.__ieph=!0}n.setAttribute(e,t)}}var Fo={create:Uo,update:Uo};function No(n,e){var t=e.elm,o=e.data,r=n.data;if(!(a(o.staticClass)&&a(o.class)&&(a(r)||a(r.staticClass)&&a(r.class)))){var s=lo(e),c=t._transitionClasses;i(c)&&(s=uo(s,mo(c))),s!==t._prevClass&&(t.setAttribute("class",s),t._prevClass=s)}}var zo,jo={create:No,update:No};function Go(n,e,t){var o=zo;return function r(){var a=e.apply(null,arguments);null!==a&&$o(n,r,t,o)}}var Vo=De&&!(en&&Number(en[1])<=53);function Ho(n,e,t,o){if(Vo){var r=st,a=e;e=a._wrapper=function(n){if(n.target===n.currentTarget||n.timeStamp>=r||n.timeStamp<=0||n.target.ownerDocument!==document)return a.apply(this,arguments)}}zo.addEventListener(n,e,on?{capture:t,passive:o}:t)}function $o(n,e,t,o){(o||zo).removeEventListener(n,e._wrapper||e,t)}function Wo(n,e){if(!a(n.data.on)||!a(e.data.on)){var t=e.data.on||{},o=n.data.on||{};zo=e.elm||n.elm,function(n){if(i(n.__r)){var e=Y?"change":"input";n[e]=[].concat(n.__r,n[e]||[]),delete n.__r}i(n.__c)&&(n.change=[].concat(n.__c,n.change||[]),delete n.__c)}(t),Wn(t,o,Ho,$o,Go,e.context),zo=void 0}}var Xo,qo={create:Wo,update:Wo,destroy:function(n){return Wo(n,ko)}};function Ko(n,e){if(!a(n.data.domProps)||!a(e.data.domProps)){var t,o,r=e.elm,c=n.data.domProps||{},l=e.data.domProps||{};for(t in(i(l.__ob__)||s(l._v_attr_proxy))&&(l=e.data.domProps=D({},l)),c)t in l||(r[t]="");for(t in l){if(o=l[t],"textContent"===t||"innerHTML"===t){if(e.children&&(e.children.length=0),o===c[t])continue;1===r.childNodes.length&&r.removeChild(r.childNodes[0])}if("value"===t&&"PROGRESS"!==r.tagName){r._value=o;var p=a(o)?"":String(o);Yo(r,p)&&(r.value=p)}else if("innerHTML"===t&&vo(r.tagName)&&a(r.innerHTML)){(Xo=Xo||document.createElement("div")).innerHTML="<svg>".concat(o,"</svg>");for(var u=Xo.firstChild;r.firstChild;)r.removeChild(r.firstChild);for(;u.firstChild;)r.appendChild(u.firstChild)}else if(o!==c[t])try{r[t]=o}catch(n){}}}}function Yo(n,e){return!n.composing&&("OPTION"===n.tagName||function(n,e){var t=!0;try{t=document.activeElement!==n}catch(n){}return t&&n.value!==e}(n,e)||function(n,e){var t=n.value,o=n._vModifiers;if(i(o)){if(o.number)return g(t)!==g(e);if(o.trim)return t.trim()!==e.trim()}return t!==e}(n,e))}var Qo={create:Ko,update:Ko},Jo=w((function(n){var e={},t=/:(.+)/;return n.split(/;(?![^(]*\))/g).forEach((function(n){if(n){var o=n.split(t);o.length>1&&(e[o[0].trim()]=o[1].trim())}})),e}));function Zo(n){var e=nr(n.style);return n.staticStyle?D(n.staticStyle,e):e}function nr(n){return Array.isArray(n)?B(n):"string"==typeof n?Jo(n):n}var er,tr=/^--/,or=/\s*!important$/,rr=function(n,e,t){if(tr.test(e))n.style.setProperty(e,t);else if(or.test(t))n.style.setProperty(I(e),t.replace(or,""),"important");else{var o=ir(e);if(Array.isArray(t))for(var r=0,a=t.length;r<a;r++)n.style[o]=t[r];else n.style[o]=t}},ar=["Webkit","Moz","ms"],ir=w((function(n){if(er=er||document.createElement("div").style,"filter"!==(n=A(n))&&n in er)return n;for(var e=n.charAt(0).toUpperCase()+n.slice(1),t=0;t<ar.length;t++){var o=ar[t]+e;if(o in er)return o}}));function sr(n,e){var t=e.data,o=n.data;if(!(a(t.staticStyle)&&a(t.style)&&a(o.staticStyle)&&a(o.style))){var r,s,c=e.elm,l=o.staticStyle,p=o.normalizedStyle||o.style||{},u=l||p,d=nr(e.data.style)||{};e.data.normalizedStyle=i(d.__ob__)?D({},d):d;var m=function(n,e){var t,o={};if(e)for(var r=n;r.componentInstance;)(r=r.componentInstance._vnode)&&r.data&&(t=Zo(r.data))&&D(o,t);(t=Zo(n.data))&&D(o,t);for(var a=n;a=a.parent;)a.data&&(t=Zo(a.data))&&D(o,t);return o}(e,!0);for(s in u)a(m[s])&&rr(c,s,"");for(s in m)(r=m[s])!==u[s]&&rr(c,s,null==r?"":r)}}var cr={create:sr,update:sr},lr=/\s+/;function pr(n,e){if(e&&(e=e.trim()))if(n.classList)e.indexOf(" ")>-1?e.split(lr).forEach((function(e){return n.classList.add(e)})):n.classList.add(e);else{var t=" ".concat(n.getAttribute("class")||""," ");t.indexOf(" "+e+" ")<0&&n.setAttribute("class",(t+e).trim())}}function ur(n,e){if(e&&(e=e.trim()))if(n.classList)e.indexOf(" ")>-1?e.split(lr).forEach((function(e){return n.classList.remove(e)})):n.classList.remove(e),n.classList.length||n.removeAttribute("class");else{for(var t=" ".concat(n.getAttribute("class")||""," "),o=" "+e+" ";t.indexOf(o)>=0;)t=t.replace(o," ");(t=t.trim())?n.setAttribute("class",t):n.removeAttribute("class")}}function dr(n){if(n){if("object"==typeof n){var e={};return!1!==n.css&&D(e,mr(n.name||"v")),D(e,n),e}return"string"==typeof n?mr(n):void 0}}var mr=w((function(n){return{enterClass:"".concat(n,"-enter"),enterToClass:"".concat(n,"-enter-to"),enterActiveClass:"".concat(n,"-enter-active"),leaveClass:"".concat(n,"-leave"),leaveToClass:"".concat(n,"-leave-to"),leaveActiveClass:"".concat(n,"-leave-active")}})),fr=q&&!Q,hr="transition",vr="transitionend",gr="animation",br="animationend";fr&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(hr="WebkitTransition",vr="webkitTransitionEnd"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(gr="WebkitAnimation",br="webkitAnimationEnd"));var yr=q?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(n){return n()};function xr(n){yr((function(){yr(n)}))}function Sr(n,e){var t=n._transitionClasses||(n._transitionClasses=[]);t.indexOf(e)<0&&(t.push(e),pr(n,e))}function Cr(n,e){n._transitionClasses&&x(n._transitionClasses,e),ur(n,e)}function wr(n,e,t){var o=Ar(n,e),r=o.type,a=o.timeout,i=o.propCount;if(!r)return t();var s="transition"===r?vr:br,c=0,l=function(){n.removeEventListener(s,p),t()},p=function(e){e.target===n&&++c>=i&&l()};setTimeout((function(){c<i&&l()}),a+1),n.addEventListener(s,p)}var kr=/\b(transform|all)(,|$)/;function Ar(n,e){var t,o=window.getComputedStyle(n),r=(o[hr+"Delay"]||"").split(", "),a=(o[hr+"Duration"]||"").split(", "),i=Pr(r,a),s=(o[gr+"Delay"]||"").split(", "),c=(o[gr+"Duration"]||"").split(", "),l=Pr(s,c),p=0,u=0;return"transition"===e?i>0&&(t="transition",p=i,u=a.length):"animation"===e?l>0&&(t="animation",p=l,u=c.length):u=(t=(p=Math.max(i,l))>0?i>l?"transition":"animation":null)?"transition"===t?a.length:c.length:0,{type:t,timeout:p,propCount:u,hasTransform:"transition"===t&&kr.test(o[hr+"Property"])}}function Pr(n,e){for(;n.length<e.length;)n=n.concat(n);return Math.max.apply(null,e.map((function(e,t){return Or(e)+Or(n[t])})))}function Or(n){return 1e3*Number(n.slice(0,-1).replace(",","."))}function Ir(n,e){var t=n.elm;i(t._leaveCb)&&(t._leaveCb.cancelled=!0,t._leaveCb());var o=dr(n.data.transition);if(!a(o)&&!i(t._enterCb)&&1===t.nodeType){for(var r=o.css,s=o.type,c=o.enterClass,u=o.enterToClass,d=o.enterActiveClass,m=o.appearClass,f=o.appearToClass,h=o.appearActiveClass,v=o.beforeEnter,b=o.enter,y=o.afterEnter,x=o.enterCancelled,S=o.beforeAppear,C=o.appear,w=o.afterAppear,k=o.appearCancelled,A=o.duration,P=Ye,O=Ye.$vnode;O&&O.parent;)P=O.context,O=O.parent;var I=!P._isMounted||!n.isRootInsert;if(!I||C||""===C){var _=I&&m?m:c,M=I&&h?h:d,D=I&&f?f:u,B=I&&S||v,T=I&&l(C)?C:b,E=I&&w||y,U=I&&k||x,L=g(p(A)?A.enter:A);0;var R=!1!==r&&!Q,N=Dr(T),z=t._enterCb=F((function(){R&&(Cr(t,D),Cr(t,M)),z.cancelled?(R&&Cr(t,_),U&&U(t)):E&&E(t),t._enterCb=null}));n.data.show||Xn(n,"insert",(function(){var e=t.parentNode,o=e&&e._pending&&e._pending[n.key];o&&o.tag===n.tag&&o.elm._leaveCb&&o.elm._leaveCb(),T&&T(t,z)})),B&&B(t),R&&(Sr(t,_),Sr(t,M),xr((function(){Cr(t,_),z.cancelled||(Sr(t,D),N||(Mr(L)?setTimeout(z,L):wr(t,s,z)))}))),n.data.show&&(e&&e(),T&&T(t,z)),R||N||z()}}}function _r(n,e){var t=n.elm;i(t._enterCb)&&(t._enterCb.cancelled=!0,t._enterCb());var o=dr(n.data.transition);if(a(o)||1!==t.nodeType)return e();if(!i(t._leaveCb)){var r=o.css,s=o.type,c=o.leaveClass,l=o.leaveToClass,u=o.leaveActiveClass,d=o.beforeLeave,m=o.leave,f=o.afterLeave,h=o.leaveCancelled,v=o.delayLeave,b=o.duration,y=!1!==r&&!Q,x=Dr(m),S=g(p(b)?b.leave:b);0;var C=t._leaveCb=F((function(){t.parentNode&&t.parentNode._pending&&(t.parentNode._pending[n.key]=null),y&&(Cr(t,l),Cr(t,u)),C.cancelled?(y&&Cr(t,c),h&&h(t)):(e(),f&&f(t)),t._leaveCb=null}));v?v(w):w()}function w(){C.cancelled||(!n.data.show&&t.parentNode&&((t.parentNode._pending||(t.parentNode._pending={}))[n.key]=n),d&&d(t),y&&(Sr(t,c),Sr(t,u),xr((function(){Cr(t,c),C.cancelled||(Sr(t,l),x||(Mr(S)?setTimeout(C,S):wr(t,s,C)))}))),m&&m(t,C),y||x||C())}}function Mr(n){return"number"==typeof n&&!isNaN(n)}function Dr(n){if(a(n))return!1;var e=n.fns;return i(e)?Dr(Array.isArray(e)?e[0]:e):(n._length||n.length)>1}function Br(n,e){!0!==e.data.show&&Ir(e)}var Tr=function(n){var e,t,o={},l=n.modules,p=n.nodeOps;for(e=0;e<Ao.length;++e)for(o[Ao[e]]=[],t=0;t<l.length;++t)i(l[t][Ao[e]])&&o[Ao[e]].push(l[t][Ao[e]]);function u(n){var e=p.parentNode(n);i(e)&&p.removeChild(e,n)}function d(n,e,t,r,a,c,l){if(i(n.elm)&&i(c)&&(n=c[l]=vn(n)),n.isRootInsert=!a,!function(n,e,t,r){var a=n.data;if(i(a)){var c=i(n.componentInstance)&&a.keepAlive;if(i(a=a.hook)&&i(a=a.init)&&a(n,!1),i(n.componentInstance))return m(n,e),f(t,n.elm,r),s(c)&&function(n,e,t,r){var a,s=n;for(;s.componentInstance;)if(s=s.componentInstance._vnode,i(a=s.data)&&i(a=a.transition)){for(a=0;a<o.activate.length;++a)o.activate[a](ko,s);e.push(s);break}f(t,n.elm,r)}(n,e,t,r),!0}}(n,e,t,r)){var u=n.data,d=n.children,v=n.tag;i(v)?(n.elm=n.ns?p.createElementNS(n.ns,v):p.createElement(v,n),y(n),h(n,d,e),i(u)&&g(n,e),f(t,n.elm,r)):s(n.isComment)?(n.elm=p.createComment(n.text),f(t,n.elm,r)):(n.elm=p.createTextNode(n.text),f(t,n.elm,r))}}function m(n,e){i(n.data.pendingInsert)&&(e.push.apply(e,n.data.pendingInsert),n.data.pendingInsert=null),n.elm=n.componentInstance.$el,v(n)?(g(n,e),y(n)):(Co(n),e.push(n))}function f(n,e,t){i(n)&&(i(t)?p.parentNode(t)===n&&p.insertBefore(n,e,t):p.appendChild(n,e))}function h(n,e,t){if(r(e)){0;for(var o=0;o<e.length;++o)d(e[o],t,n.elm,null,!0,e,o)}else c(n.text)&&p.appendChild(n.elm,p.createTextNode(String(n.text)))}function v(n){for(;n.componentInstance;)n=n.componentInstance._vnode;return i(n.tag)}function g(n,t){for(var r=0;r<o.create.length;++r)o.create[r](ko,n);i(e=n.data.hook)&&(i(e.create)&&e.create(ko,n),i(e.insert)&&t.push(n))}function y(n){var e;if(i(e=n.fnScopeId))p.setStyleScope(n.elm,e);else for(var t=n;t;)i(e=t.context)&&i(e=e.$options._scopeId)&&p.setStyleScope(n.elm,e),t=t.parent;i(e=Ye)&&e!==n.context&&e!==n.fnContext&&i(e=e.$options._scopeId)&&p.setStyleScope(n.elm,e)}function x(n,e,t,o,r,a){for(;o<=r;++o)d(t[o],a,n,e,!1,t,o)}function S(n){var e,t,r=n.data;if(i(r))for(i(e=r.hook)&&i(e=e.destroy)&&e(n),e=0;e<o.destroy.length;++e)o.destroy[e](n);if(i(e=n.children))for(t=0;t<n.children.length;++t)S(n.children[t])}function C(n,e,t){for(;e<=t;++e){var o=n[e];i(o)&&(i(o.tag)?(w(o),S(o)):u(o.elm))}}function w(n,e){if(i(e)||i(n.data)){var t,r=o.remove.length+1;for(i(e)?e.listeners+=r:e=function(n,e){function t(){0==--t.listeners&&u(n)}return t.listeners=e,t}(n.elm,r),i(t=n.componentInstance)&&i(t=t._vnode)&&i(t.data)&&w(t,e),t=0;t<o.remove.length;++t)o.remove[t](n,e);i(t=n.data.hook)&&i(t=t.remove)?t(n,e):e()}else u(n.elm)}function k(n,e,t,o){for(var r=t;r<o;r++){var a=e[r];if(i(a)&&Po(n,a))return r}}function A(n,e,t,r,c,l){if(n!==e){i(e.elm)&&i(r)&&(e=r[c]=vn(e));var u=e.elm=n.elm;if(s(n.isAsyncPlaceholder))i(e.asyncFactory.resolved)?I(n.elm,e,t):e.isAsyncPlaceholder=!0;else if(s(e.isStatic)&&s(n.isStatic)&&e.key===n.key&&(s(e.isCloned)||s(e.isOnce)))e.componentInstance=n.componentInstance;else{var m,f=e.data;i(f)&&i(m=f.hook)&&i(m=m.prepatch)&&m(n,e);var h=n.children,g=e.children;if(i(f)&&v(e)){for(m=0;m<o.update.length;++m)o.update[m](n,e);i(m=f.hook)&&i(m=m.update)&&m(n,e)}a(e.text)?i(h)&&i(g)?h!==g&&function(n,e,t,o,r){var s,c,l,u=0,m=0,f=e.length-1,h=e[0],v=e[f],g=t.length-1,b=t[0],y=t[g],S=!r;for(0;u<=f&&m<=g;)a(h)?h=e[++u]:a(v)?v=e[--f]:Po(h,b)?(A(h,b,o,t,m),h=e[++u],b=t[++m]):Po(v,y)?(A(v,y,o,t,g),v=e[--f],y=t[--g]):Po(h,y)?(A(h,y,o,t,g),S&&p.insertBefore(n,h.elm,p.nextSibling(v.elm)),h=e[++u],y=t[--g]):Po(v,b)?(A(v,b,o,t,m),S&&p.insertBefore(n,v.elm,h.elm),v=e[--f],b=t[++m]):(a(s)&&(s=Oo(e,u,f)),a(c=i(b.key)?s[b.key]:k(b,e,u,f))?d(b,o,n,h.elm,!1,t,m):Po(l=e[c],b)?(A(l,b,o,t,m),e[c]=void 0,S&&p.insertBefore(n,l.elm,h.elm)):d(b,o,n,h.elm,!1,t,m),b=t[++m]);u>f?x(n,a(t[g+1])?null:t[g+1].elm,t,m,g,o):m>g&&C(e,u,f)}(u,h,g,t,l):i(g)?(i(n.text)&&p.setTextContent(u,""),x(u,null,g,0,g.length-1,t)):i(h)?C(h,0,h.length-1):i(n.text)&&p.setTextContent(u,""):n.text!==e.text&&p.setTextContent(u,e.text),i(f)&&i(m=f.hook)&&i(m=m.postpatch)&&m(n,e)}}}function P(n,e,t){if(s(t)&&i(n.parent))n.parent.data.pendingInsert=e;else for(var o=0;o<e.length;++o)e[o].data.hook.insert(e[o])}var O=b("attrs,class,staticClass,staticStyle,key");function I(n,e,t,o){var r,a=e.tag,c=e.data,l=e.children;if(o=o||c&&c.pre,e.elm=n,s(e.isComment)&&i(e.asyncFactory))return e.isAsyncPlaceholder=!0,!0;if(i(c)&&(i(r=c.hook)&&i(r=r.init)&&r(e,!0),i(r=e.componentInstance)))return m(e,t),!0;if(i(a)){if(i(l))if(n.hasChildNodes())if(i(r=c)&&i(r=r.domProps)&&i(r=r.innerHTML)){if(r!==n.innerHTML)return!1}else{for(var p=!0,u=n.firstChild,d=0;d<l.length;d++){if(!u||!I(u,l[d],t,o)){p=!1;break}u=u.nextSibling}if(!p||u)return!1}else h(e,l,t);if(i(c)){var f=!1;for(var v in c)if(!O(v)){f=!0,g(e,t);break}!f&&c.class&&Ge(c.class)}}else n.data!==e.text&&(n.data=e.text);return!0}return function(n,e,t,r){if(!a(e)){var c,l=!1,u=[];if(a(n))l=!0,d(e,u);else{var m=i(n.nodeType);if(!m&&Po(n,e))A(n,e,u,null,null,r);else{if(m){if(1===n.nodeType&&n.hasAttribute("data-server-rendered")&&(n.removeAttribute("data-server-rendered"),t=!0),s(t)&&I(n,e,u))return P(e,u,!0),n;c=n,n=new mn(p.tagName(c).toLowerCase(),{},[],void 0,c)}var f=n.elm,h=p.parentNode(f);if(d(e,u,f._leaveCb?null:h,p.nextSibling(f)),i(e.parent))for(var g=e.parent,b=v(e);g;){for(var y=0;y<o.destroy.length;++y)o.destroy[y](g);if(g.elm=e.elm,b){for(var x=0;x<o.create.length;++x)o.create[x](ko,g);var w=g.data.hook.insert;if(w.merged)for(var k=1;k<w.fns.length;k++)w.fns[k]()}else Co(g);g=g.parent}i(h)?C([n],0,0):i(n.tag)&&S(n)}}return P(e,u,l),e.elm}i(n)&&S(n)}}({nodeOps:xo,modules:[Fo,jo,qo,Qo,cr,q?{create:Br,activate:Br,remove:function(n,e){!0!==n.data.show?_r(n,e):e()}}:{}].concat(Eo)});Q&&document.addEventListener("selectionchange",(function(){var n=document.activeElement;n&&n.vmodel&&jr(n,"input")}));var Er={inserted:function(n,e,t,o){"select"===t.tag?(o.elm&&!o.elm._vOptions?Xn(t,"postpatch",(function(){Er.componentUpdated(n,e,t)})):Ur(n,e,t.context),n._vOptions=[].map.call(n.options,Fr)):("textarea"===t.tag||yo(n.type))&&(n._vModifiers=e.modifiers,e.modifiers.lazy||(n.addEventListener("compositionstart",Nr),n.addEventListener("compositionend",zr),n.addEventListener("change",zr),Q&&(n.vmodel=!0)))},componentUpdated:function(n,e,t){if("select"===t.tag){Ur(n,e,t.context);var o=n._vOptions,r=n._vOptions=[].map.call(n.options,Fr);if(r.some((function(n,e){return!L(n,o[e])})))(n.multiple?e.value.some((function(n){return Rr(n,r)})):e.value!==e.oldValue&&Rr(e.value,r))&&jr(n,"change")}}};function Ur(n,e,t){Lr(n,e,t),(Y||J)&&setTimeout((function(){Lr(n,e,t)}),0)}function Lr(n,e,t){var o=e.value,r=n.multiple;if(!r||Array.isArray(o)){for(var a,i,s=0,c=n.options.length;s<c;s++)if(i=n.options[s],r)a=R(o,Fr(i))>-1,i.selected!==a&&(i.selected=a);else if(L(Fr(i),o))return void(n.selectedIndex!==s&&(n.selectedIndex=s));r||(n.selectedIndex=-1)}}function Rr(n,e){return e.every((function(e){return!L(e,n)}))}function Fr(n){return"_value"in n?n._value:n.value}function Nr(n){n.target.composing=!0}function zr(n){n.target.composing&&(n.target.composing=!1,jr(n.target,"input"))}function jr(n,e){var t=document.createEvent("HTMLEvents");t.initEvent(e,!0,!0),n.dispatchEvent(t)}function Gr(n){return!n.componentInstance||n.data&&n.data.transition?n:Gr(n.componentInstance._vnode)}var Vr={model:Er,show:{bind:function(n,e,t){var o=e.value,r=(t=Gr(t)).data&&t.data.transition,a=n.__vOriginalDisplay="none"===n.style.display?"":n.style.display;o&&r?(t.data.show=!0,Ir(t,(function(){n.style.display=a}))):n.style.display=o?a:"none"},update:function(n,e,t){var o=e.value;!o!=!e.oldValue&&((t=Gr(t)).data&&t.data.transition?(t.data.show=!0,o?Ir(t,(function(){n.style.display=n.__vOriginalDisplay})):_r(t,(function(){n.style.display="none"}))):n.style.display=o?n.__vOriginalDisplay:"none")},unbind:function(n,e,t,o,r){r||(n.style.display=n.__vOriginalDisplay)}}},Hr={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};function $r(n){var e=n&&n.componentOptions;return e&&e.Ctor.options.abstract?$r(ke(e.children)):n}function Wr(n){var e={},t=n.$options;for(var o in t.propsData)e[o]=n[o];var r=t._parentListeners;for(var o in r)e[A(o)]=r[o];return e}function Xr(n,e){if(/\d-keep-alive$/.test(e.tag))return n("keep-alive",{props:e.componentOptions.propsData})}var qr=function(n){return n.tag||fe(n)},Kr=function(n){return"show"===n.name},Yr={name:"transition",props:Hr,abstract:!0,render:function(n){var e=this,t=this.$slots.default;if(t&&(t=t.filter(qr)).length){0;var o=this.mode;0;var r=t[0];if(function(n){for(;n=n.parent;)if(n.data.transition)return!0}(this.$vnode))return r;var a=$r(r);if(!a)return r;if(this._leaving)return Xr(n,r);var i="__transition-".concat(this._uid,"-");a.key=null==a.key?a.isComment?i+"comment":i+a.tag:c(a.key)?0===String(a.key).indexOf(i)?a.key:i+a.key:a.key;var s=(a.data||(a.data={})).transition=Wr(this),l=this._vnode,p=$r(l);if(a.data.directives&&a.data.directives.some(Kr)&&(a.data.show=!0),p&&p.data&&!function(n,e){return e.key===n.key&&e.tag===n.tag}(a,p)&&!fe(p)&&(!p.componentInstance||!p.componentInstance._vnode.isComment)){var u=p.data.transition=D({},s);if("out-in"===o)return this._leaving=!0,Xn(u,"afterLeave",(function(){e._leaving=!1,e.$forceUpdate()})),Xr(n,r);if("in-out"===o){if(fe(a))return l;var d,m=function(){d()};Xn(s,"afterEnter",m),Xn(s,"enterCancelled",m),Xn(u,"delayLeave",(function(n){d=n}))}}return r}}},Qr=D({tag:String,moveClass:String},Hr);function Jr(n){n.elm._moveCb&&n.elm._moveCb(),n.elm._enterCb&&n.elm._enterCb()}function Zr(n){n.data.newPos=n.elm.getBoundingClientRect()}function na(n){var e=n.data.pos,t=n.data.newPos,o=e.left-t.left,r=e.top-t.top;if(o||r){n.data.moved=!0;var a=n.elm.style;a.transform=a.WebkitTransform="translate(".concat(o,"px,").concat(r,"px)"),a.transitionDuration="0s"}}delete Qr.mode;var ea={Transition:Yr,TransitionGroup:{props:Qr,beforeMount:function(){var n=this,e=this._update;this._update=function(t,o){var r=Qe(n);n.__patch__(n._vnode,n.kept,!1,!0),n._vnode=n.kept,r(),e.call(n,t,o)}},render:function(n){for(var e=this.tag||this.$vnode.data.tag||"span",t=Object.create(null),o=this.prevChildren=this.children,r=this.$slots.default||[],a=this.children=[],i=Wr(this),s=0;s<r.length;s++){if((p=r[s]).tag)if(null!=p.key&&0!==String(p.key).indexOf("__vlist"))a.push(p),t[p.key]=p,(p.data||(p.data={})).transition=i;else;}if(o){var c=[],l=[];for(s=0;s<o.length;s++){var p;(p=o[s]).data.transition=i,p.data.pos=p.elm.getBoundingClientRect(),t[p.key]?c.push(p):l.push(p)}this.kept=n(e,null,c),this.removed=l}return n(e,null,a)},updated:function(){var n=this.prevChildren,e=this.moveClass||(this.name||"v")+"-move";n.length&&this.hasMove(n[0].elm,e)&&(n.forEach(Jr),n.forEach(Zr),n.forEach(na),this._reflow=document.body.offsetHeight,n.forEach((function(n){if(n.data.moved){var t=n.elm,o=t.style;Sr(t,e),o.transform=o.WebkitTransform=o.transitionDuration="",t.addEventListener(vr,t._moveCb=function n(o){o&&o.target!==t||o&&!/transform$/.test(o.propertyName)||(t.removeEventListener(vr,n),t._moveCb=null,Cr(t,e))})}})))},methods:{hasMove:function(n,e){if(!fr)return!1;if(this._hasMove)return this._hasMove;var t=n.cloneNode();n._transitionClasses&&n._transitionClasses.forEach((function(n){ur(t,n)})),pr(t,e),t.style.display="none",this.$el.appendChild(t);var o=Ar(t);return this.$el.removeChild(t),this._hasMove=o.hasTransform}}}};function ta(n,e){for(var t in e)n[t]=e[t];return n}Wt.config.mustUseProp=function(n,e,t){return"value"===t&&eo(n)&&"button"!==e||"selected"===t&&"option"===n||"checked"===t&&"input"===n||"muted"===t&&"video"===n},Wt.config.isReservedTag=go,Wt.config.isReservedAttr=no,Wt.config.getTagNamespace=function(n){return vo(n)?"svg":"math"===n?"math":void 0},Wt.config.isUnknownElement=function(n){if(!q)return!0;if(go(n))return!1;if(n=n.toLowerCase(),null!=bo[n])return bo[n];var e=document.createElement(n);return n.indexOf("-")>-1?bo[n]=e.constructor===window.HTMLUnknownElement||e.constructor===window.HTMLElement:bo[n]=/HTMLUnknownElement/.test(e.toString())},D(Wt.options.directives,Vr),D(Wt.options.components,ea),Wt.prototype.__patch__=q?Tr:T,Wt.prototype.$mount=function(n,e){return function(n,e,t){var o;n.$el=e,n.$options.render||(n.$options.render=fn),nt(n,"beforeMount"),o=function(){n._update(n._render(),t)},new $e(n,o,T,{before:function(){n._isMounted&&!n._isDestroyed&&nt(n,"beforeUpdate")}},!0),t=!1;var r=n._preWatchers;if(r)for(var a=0;a<r.length;a++)r[a].run();return null==n.$vnode&&(n._isMounted=!0,nt(n,"mounted")),n}(this,n=n&&q?function(n){if("string"==typeof n){var e=document.querySelector(n);return e||document.createElement("div")}return n}(n):void 0,e)},q&&setTimeout((function(){G.devtools&&sn&&sn.emit("init",Wt)}),0);var oa=/[!'()*]/g,ra=function(n){return"%"+n.charCodeAt(0).toString(16)},aa=/%2C/g,ia=function(n){return encodeURIComponent(n).replace(oa,ra).replace(aa,",")};function sa(n){try{return decodeURIComponent(n)}catch(n){0}return n}var ca=function(n){return null==n||"object"==typeof n?n:String(n)};function la(n){var e={};return(n=n.trim().replace(/^(\?|#|&)/,""))?(n.split("&").forEach((function(n){var t=n.replace(/\+/g," ").split("="),o=sa(t.shift()),r=t.length>0?sa(t.join("=")):null;void 0===e[o]?e[o]=r:Array.isArray(e[o])?e[o].push(r):e[o]=[e[o],r]})),e):e}function pa(n){var e=n?Object.keys(n).map((function(e){var t=n[e];if(void 0===t)return"";if(null===t)return ia(e);if(Array.isArray(t)){var o=[];return t.forEach((function(n){void 0!==n&&(null===n?o.push(ia(e)):o.push(ia(e)+"="+ia(n)))})),o.join("&")}return ia(e)+"="+ia(t)})).filter((function(n){return n.length>0})).join("&"):null;return e?"?"+e:""}var ua=/\/?$/;function da(n,e,t,o){var r=o&&o.options.stringifyQuery,a=e.query||{};try{a=ma(a)}catch(n){}var i={name:e.name||n&&n.name,meta:n&&n.meta||{},path:e.path||"/",hash:e.hash||"",query:a,params:e.params||{},fullPath:va(e,r),matched:n?ha(n):[]};return t&&(i.redirectedFrom=va(t,r)),Object.freeze(i)}function ma(n){if(Array.isArray(n))return n.map(ma);if(n&&"object"==typeof n){var e={};for(var t in n)e[t]=ma(n[t]);return e}return n}var fa=da(null,{path:"/"});function ha(n){for(var e=[];n;)e.unshift(n),n=n.parent;return e}function va(n,e){var t=n.path,o=n.query;void 0===o&&(o={});var r=n.hash;return void 0===r&&(r=""),(t||"/")+(e||pa)(o)+r}function ga(n,e,t){return e===fa?n===e:!!e&&(n.path&&e.path?n.path.replace(ua,"")===e.path.replace(ua,"")&&(t||n.hash===e.hash&&ba(n.query,e.query)):!(!n.name||!e.name)&&(n.name===e.name&&(t||n.hash===e.hash&&ba(n.query,e.query)&&ba(n.params,e.params))))}function ba(n,e){if(void 0===n&&(n={}),void 0===e&&(e={}),!n||!e)return n===e;var t=Object.keys(n).sort(),o=Object.keys(e).sort();return t.length===o.length&&t.every((function(t,r){var a=n[t];if(o[r]!==t)return!1;var i=e[t];return null==a||null==i?a===i:"object"==typeof a&&"object"==typeof i?ba(a,i):String(a)===String(i)}))}function ya(n){for(var e=0;e<n.matched.length;e++){var t=n.matched[e];for(var o in t.instances){var r=t.instances[o],a=t.enteredCbs[o];if(r&&a){delete t.enteredCbs[o];for(var i=0;i<a.length;i++)r._isBeingDestroyed||a[i](r)}}}}var xa={name:"RouterView",functional:!0,props:{name:{type:String,default:"default"}},render:function(n,e){var t=e.props,o=e.children,r=e.parent,a=e.data;a.routerView=!0;for(var i=r.$createElement,s=t.name,c=r.$route,l=r._routerViewCache||(r._routerViewCache={}),p=0,u=!1;r&&r._routerRoot!==r;){var d=r.$vnode?r.$vnode.data:{};d.routerView&&p++,d.keepAlive&&r._directInactive&&r._inactive&&(u=!0),r=r.$parent}if(a.routerViewDepth=p,u){var m=l[s],f=m&&m.component;return f?(m.configProps&&Sa(f,a,m.route,m.configProps),i(f,a,o)):i()}var h=c.matched[p],v=h&&h.components[s];if(!h||!v)return l[s]=null,i();l[s]={component:v},a.registerRouteInstance=function(n,e){var t=h.instances[s];(e&&t!==n||!e&&t===n)&&(h.instances[s]=e)},(a.hook||(a.hook={})).prepatch=function(n,e){h.instances[s]=e.componentInstance},a.hook.init=function(n){n.data.keepAlive&&n.componentInstance&&n.componentInstance!==h.instances[s]&&(h.instances[s]=n.componentInstance),ya(c)};var g=h.props&&h.props[s];return g&&(ta(l[s],{route:c,configProps:g}),Sa(v,a,c,g)),i(v,a,o)}};function Sa(n,e,t,o){var r=e.props=function(n,e){switch(typeof e){case"undefined":return;case"object":return e;case"function":return e(n);case"boolean":return e?n.params:void 0;default:0}}(t,o);if(r){r=e.props=ta({},r);var a=e.attrs=e.attrs||{};for(var i in r)n.props&&i in n.props||(a[i]=r[i],delete r[i])}}function Ca(n,e,t){var o=n.charAt(0);if("/"===o)return n;if("?"===o||"#"===o)return e+n;var r=e.split("/");t&&r[r.length-1]||r.pop();for(var a=n.replace(/^\//,"").split("/"),i=0;i<a.length;i++){var s=a[i];".."===s?r.pop():"."!==s&&r.push(s)}return""!==r[0]&&r.unshift(""),r.join("/")}function wa(n){return n.replace(/\/(?:\s*\/)+/g,"/")}var ka=Array.isArray||function(n){return"[object Array]"==Object.prototype.toString.call(n)},Aa=Na,Pa=Da,Oa=function(n,e){return Ta(Da(n,e),e)},Ia=Ta,_a=Fa,Ma=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function Da(n,e){for(var t,o=[],r=0,a=0,i="",s=e&&e.delimiter||"/";null!=(t=Ma.exec(n));){var c=t[0],l=t[1],p=t.index;if(i+=n.slice(a,p),a=p+c.length,l)i+=l[1];else{var u=n[a],d=t[2],m=t[3],f=t[4],h=t[5],v=t[6],g=t[7];i&&(o.push(i),i="");var b=null!=d&&null!=u&&u!==d,y="+"===v||"*"===v,x="?"===v||"*"===v,S=t[2]||s,C=f||h;o.push({name:m||r++,prefix:d||"",delimiter:S,optional:x,repeat:y,partial:b,asterisk:!!g,pattern:C?Ua(C):g?".*":"[^"+Ea(S)+"]+?"})}}return a<n.length&&(i+=n.substr(a)),i&&o.push(i),o}function Ba(n){return encodeURI(n).replace(/[\/?#]/g,(function(n){return"%"+n.charCodeAt(0).toString(16).toUpperCase()}))}function Ta(n,e){for(var t=new Array(n.length),o=0;o<n.length;o++)"object"==typeof n[o]&&(t[o]=new RegExp("^(?:"+n[o].pattern+")$",Ra(e)));return function(e,o){for(var r="",a=e||{},i=(o||{}).pretty?Ba:encodeURIComponent,s=0;s<n.length;s++){var c=n[s];if("string"!=typeof c){var l,p=a[c.name];if(null==p){if(c.optional){c.partial&&(r+=c.prefix);continue}throw new TypeError('Expected "'+c.name+'" to be defined')}if(ka(p)){if(!c.repeat)throw new TypeError('Expected "'+c.name+'" to not repeat, but received `'+JSON.stringify(p)+"`");if(0===p.length){if(c.optional)continue;throw new TypeError('Expected "'+c.name+'" to not be empty')}for(var u=0;u<p.length;u++){if(l=i(p[u]),!t[s].test(l))throw new TypeError('Expected all "'+c.name+'" to match "'+c.pattern+'", but received `'+JSON.stringify(l)+"`");r+=(0===u?c.prefix:c.delimiter)+l}}else{if(l=c.asterisk?encodeURI(p).replace(/[?#]/g,(function(n){return"%"+n.charCodeAt(0).toString(16).toUpperCase()})):i(p),!t[s].test(l))throw new TypeError('Expected "'+c.name+'" to match "'+c.pattern+'", but received "'+l+'"');r+=c.prefix+l}}else r+=c}return r}}function Ea(n){return n.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function Ua(n){return n.replace(/([=!:$\/()])/g,"\\$1")}function La(n,e){return n.keys=e,n}function Ra(n){return n&&n.sensitive?"":"i"}function Fa(n,e,t){ka(e)||(t=e||t,e=[]);for(var o=(t=t||{}).strict,r=!1!==t.end,a="",i=0;i<n.length;i++){var s=n[i];if("string"==typeof s)a+=Ea(s);else{var c=Ea(s.prefix),l="(?:"+s.pattern+")";e.push(s),s.repeat&&(l+="(?:"+c+l+")*"),a+=l=s.optional?s.partial?c+"("+l+")?":"(?:"+c+"("+l+"))?":c+"("+l+")"}}var p=Ea(t.delimiter||"/"),u=a.slice(-p.length)===p;return o||(a=(u?a.slice(0,-p.length):a)+"(?:"+p+"(?=$))?"),a+=r?"$":o&&u?"":"(?="+p+"|$)",La(new RegExp("^"+a,Ra(t)),e)}function Na(n,e,t){return ka(e)||(t=e||t,e=[]),t=t||{},n instanceof RegExp?function(n,e){var t=n.source.match(/\((?!\?)/g);if(t)for(var o=0;o<t.length;o++)e.push({name:o,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return La(n,e)}(n,e):ka(n)?function(n,e,t){for(var o=[],r=0;r<n.length;r++)o.push(Na(n[r],e,t).source);return La(new RegExp("(?:"+o.join("|")+")",Ra(t)),e)}(n,e,t):function(n,e,t){return Fa(Da(n,t),e,t)}(n,e,t)}Aa.parse=Pa,Aa.compile=Oa,Aa.tokensToFunction=Ia,Aa.tokensToRegExp=_a;var za=Object.create(null);function ja(n,e,t){e=e||{};try{var o=za[n]||(za[n]=Aa.compile(n));return"string"==typeof e.pathMatch&&(e[0]=e.pathMatch),o(e,{pretty:!0})}catch(n){return""}finally{delete e[0]}}function Ga(n,e,t,o){var r="string"==typeof n?{path:n}:n;if(r._normalized)return r;if(r.name){var a=(r=ta({},n)).params;return a&&"object"==typeof a&&(r.params=ta({},a)),r}if(!r.path&&r.params&&e){(r=ta({},r))._normalized=!0;var i=ta(ta({},e.params),r.params);if(e.name)r.name=e.name,r.params=i;else if(e.matched.length){var s=e.matched[e.matched.length-1].path;r.path=ja(s,i,e.path)}else 0;return r}var c=function(n){var e="",t="",o=n.indexOf("#");o>=0&&(e=n.slice(o),n=n.slice(0,o));var r=n.indexOf("?");return r>=0&&(t=n.slice(r+1),n=n.slice(0,r)),{path:n,query:t,hash:e}}(r.path||""),l=e&&e.path||"/",p=c.path?Ca(c.path,l,t||r.append):l,u=function(n,e,t){void 0===e&&(e={});var o,r=t||la;try{o=r(n||"")}catch(n){o={}}for(var a in e){var i=e[a];o[a]=Array.isArray(i)?i.map(ca):ca(i)}return o}(c.query,r.query,o&&o.options.parseQuery),d=r.hash||c.hash;return d&&"#"!==d.charAt(0)&&(d="#"+d),{_normalized:!0,path:p,query:u,hash:d}}var Va,Ha=function(){},$a={name:"RouterLink",props:{to:{type:[String,Object],required:!0},tag:{type:String,default:"a"},custom:Boolean,exact:Boolean,exactPath:Boolean,append:Boolean,replace:Boolean,activeClass:String,exactActiveClass:String,ariaCurrentValue:{type:String,default:"page"},event:{type:[String,Array],default:"click"}},render:function(n){var e=this,t=this.$router,o=this.$route,r=t.resolve(this.to,o,this.append),a=r.location,i=r.route,s=r.href,c={},l=t.options.linkActiveClass,p=t.options.linkExactActiveClass,u=null==l?"router-link-active":l,d=null==p?"router-link-exact-active":p,m=null==this.activeClass?u:this.activeClass,f=null==this.exactActiveClass?d:this.exactActiveClass,h=i.redirectedFrom?da(null,Ga(i.redirectedFrom),null,t):i;c[f]=ga(o,h,this.exactPath),c[m]=this.exact||this.exactPath?c[f]:function(n,e){return 0===n.path.replace(ua,"/").indexOf(e.path.replace(ua,"/"))&&(!e.hash||n.hash===e.hash)&&function(n,e){for(var t in e)if(!(t in n))return!1;return!0}(n.query,e.query)}(o,h);var v=c[f]?this.ariaCurrentValue:null,g=function(n){Wa(n)&&(e.replace?t.replace(a,Ha):t.push(a,Ha))},b={click:Wa};Array.isArray(this.event)?this.event.forEach((function(n){b[n]=g})):b[this.event]=g;var y={class:c},x=!this.$scopedSlots.$hasNormal&&this.$scopedSlots.default&&this.$scopedSlots.default({href:s,route:i,navigate:g,isActive:c[m],isExactActive:c[f]});if(x){if(1===x.length)return x[0];if(x.length>1||!x.length)return 0===x.length?n():n("span",{},x)}if("a"===this.tag)y.on=b,y.attrs={href:s,"aria-current":v};else{var S=function n(e){var t;if(e)for(var o=0;o<e.length;o++){if("a"===(t=e[o]).tag)return t;if(t.children&&(t=n(t.children)))return t}}(this.$slots.default);if(S){S.isStatic=!1;var C=S.data=ta({},S.data);for(var w in C.on=C.on||{},C.on){var k=C.on[w];w in b&&(C.on[w]=Array.isArray(k)?k:[k])}for(var A in b)A in C.on?C.on[A].push(b[A]):C.on[A]=g;var P=S.data.attrs=ta({},S.data.attrs);P.href=s,P["aria-current"]=v}else y.on=b}return n(this.tag,y,this.$slots.default)}};function Wa(n){if(!(n.metaKey||n.altKey||n.ctrlKey||n.shiftKey||n.defaultPrevented||void 0!==n.button&&0!==n.button)){if(n.currentTarget&&n.currentTarget.getAttribute){var e=n.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(e))return}return n.preventDefault&&n.preventDefault(),!0}}var Xa="undefined"!=typeof window;function qa(n,e,t,o,r){var a=e||[],i=t||Object.create(null),s=o||Object.create(null);n.forEach((function(n){!function n(e,t,o,r,a,i){var s=r.path,c=r.name;0;var l=r.pathToRegexpOptions||{},p=function(n,e,t){t||(n=n.replace(/\/$/,""));if("/"===n[0])return n;if(null==e)return n;return wa(e.path+"/"+n)}(s,a,l.strict);"boolean"==typeof r.caseSensitive&&(l.sensitive=r.caseSensitive);var u={path:p,regex:Ka(p,l),components:r.components||{default:r.component},alias:r.alias?"string"==typeof r.alias?[r.alias]:r.alias:[],instances:{},enteredCbs:{},name:c,parent:a,matchAs:i,redirect:r.redirect,beforeEnter:r.beforeEnter,meta:r.meta||{},props:null==r.props?{}:r.components?r.props:{default:r.props}};r.children&&r.children.forEach((function(r){var a=i?wa(i+"/"+r.path):void 0;n(e,t,o,r,u,a)}));t[u.path]||(e.push(u.path),t[u.path]=u);if(void 0!==r.alias)for(var d=Array.isArray(r.alias)?r.alias:[r.alias],m=0;m<d.length;++m){0;var f={path:d[m],children:r.children};n(e,t,o,f,a,u.path||"/")}c&&(o[c]||(o[c]=u))}(a,i,s,n,r)}));for(var c=0,l=a.length;c<l;c++)"*"===a[c]&&(a.push(a.splice(c,1)[0]),l--,c--);return{pathList:a,pathMap:i,nameMap:s}}function Ka(n,e){return Aa(n,[],e)}function Ya(n,e){var t=qa(n),o=t.pathList,r=t.pathMap,a=t.nameMap;function i(n,t,i){var s=Ga(n,t,!1,e),l=s.name;if(l){var p=a[l];if(!p)return c(null,s);var u=p.regex.keys.filter((function(n){return!n.optional})).map((function(n){return n.name}));if("object"!=typeof s.params&&(s.params={}),t&&"object"==typeof t.params)for(var d in t.params)!(d in s.params)&&u.indexOf(d)>-1&&(s.params[d]=t.params[d]);return s.path=ja(p.path,s.params),c(p,s,i)}if(s.path){s.params={};for(var m=0;m<o.length;m++){var f=o[m],h=r[f];if(Qa(h.regex,s.path,s.params))return c(h,s,i)}}return c(null,s)}function s(n,t){var o=n.redirect,r="function"==typeof o?o(da(n,t,null,e)):o;if("string"==typeof r&&(r={path:r}),!r||"object"!=typeof r)return c(null,t);var s=r,l=s.name,p=s.path,u=t.query,d=t.hash,m=t.params;if(u=s.hasOwnProperty("query")?s.query:u,d=s.hasOwnProperty("hash")?s.hash:d,m=s.hasOwnProperty("params")?s.params:m,l){a[l];return i({_normalized:!0,name:l,query:u,hash:d,params:m},void 0,t)}if(p){var f=function(n,e){return Ca(n,e.parent?e.parent.path:"/",!0)}(p,n);return i({_normalized:!0,path:ja(f,m),query:u,hash:d},void 0,t)}return c(null,t)}function c(n,t,o){return n&&n.redirect?s(n,o||t):n&&n.matchAs?function(n,e,t){var o=i({_normalized:!0,path:ja(t,e.params)});if(o){var r=o.matched,a=r[r.length-1];return e.params=o.params,c(a,e)}return c(null,e)}(0,t,n.matchAs):da(n,t,o,e)}return{match:i,addRoute:function(n,e){var t="object"!=typeof n?a[n]:void 0;qa([e||n],o,r,a,t),t&&t.alias.length&&qa(t.alias.map((function(n){return{path:n,children:[e]}})),o,r,a,t)},getRoutes:function(){return o.map((function(n){return r[n]}))},addRoutes:function(n){qa(n,o,r,a)}}}function Qa(n,e,t){var o=e.match(n);if(!o)return!1;if(!t)return!0;for(var r=1,a=o.length;r<a;++r){var i=n.keys[r-1];i&&(t[i.name||"pathMatch"]="string"==typeof o[r]?sa(o[r]):o[r])}return!0}var Ja=Xa&&window.performance&&window.performance.now?window.performance:Date;function Za(){return Ja.now().toFixed(3)}var ni=Za();function ei(){return ni}function ti(n){return ni=n}var oi=Object.create(null);function ri(){"scrollRestoration"in window.history&&(window.history.scrollRestoration="manual");var n=window.location.protocol+"//"+window.location.host,e=window.location.href.replace(n,""),t=ta({},window.history.state);return t.key=ei(),window.history.replaceState(t,"",e),window.addEventListener("popstate",si),function(){window.removeEventListener("popstate",si)}}function ai(n,e,t,o){if(n.app){var r=n.options.scrollBehavior;r&&n.app.$nextTick((function(){var a=function(){var n=ei();if(n)return oi[n]}(),i=r.call(n,e,t,o?a:null);i&&("function"==typeof i.then?i.then((function(n){di(n,a)})).catch((function(n){0})):di(i,a))}))}}function ii(){var n=ei();n&&(oi[n]={x:window.pageXOffset,y:window.pageYOffset})}function si(n){ii(),n.state&&n.state.key&&ti(n.state.key)}function ci(n){return pi(n.x)||pi(n.y)}function li(n){return{x:pi(n.x)?n.x:window.pageXOffset,y:pi(n.y)?n.y:window.pageYOffset}}function pi(n){return"number"==typeof n}var ui=/^#\d/;function di(n,e){var t,o="object"==typeof n;if(o&&"string"==typeof n.selector){var r=ui.test(n.selector)?document.getElementById(n.selector.slice(1)):document.querySelector(n.selector);if(r){var a=n.offset&&"object"==typeof n.offset?n.offset:{};e=function(n,e){var t=document.documentElement.getBoundingClientRect(),o=n.getBoundingClientRect();return{x:o.left-t.left-e.x,y:o.top-t.top-e.y}}(r,a={x:pi((t=a).x)?t.x:0,y:pi(t.y)?t.y:0})}else ci(n)&&(e=li(n))}else o&&ci(n)&&(e=li(n));e&&("scrollBehavior"in document.documentElement.style?window.scrollTo({left:e.x,top:e.y,behavior:n.behavior}):window.scrollTo(e.x,e.y))}var mi,fi=Xa&&((-1===(mi=window.navigator.userAgent).indexOf("Android 2.")&&-1===mi.indexOf("Android 4.0")||-1===mi.indexOf("Mobile Safari")||-1!==mi.indexOf("Chrome")||-1!==mi.indexOf("Windows Phone"))&&window.history&&"function"==typeof window.history.pushState);function hi(n,e){ii();var t=window.history;try{if(e){var o=ta({},t.state);o.key=ei(),t.replaceState(o,"",n)}else t.pushState({key:ti(Za())},"",n)}catch(t){window.location[e?"replace":"assign"](n)}}function vi(n){hi(n,!0)}var gi={redirected:2,aborted:4,cancelled:8,duplicated:16};function bi(n,e){return xi(n,e,gi.redirected,'Redirected when going from "'+n.fullPath+'" to "'+function(n){if("string"==typeof n)return n;if("path"in n)return n.path;var e={};return Si.forEach((function(t){t in n&&(e[t]=n[t])})),JSON.stringify(e,null,2)}(e)+'" via a navigation guard.')}function yi(n,e){return xi(n,e,gi.cancelled,'Navigation cancelled from "'+n.fullPath+'" to "'+e.fullPath+'" with a new navigation.')}function xi(n,e,t,o){var r=new Error(o);return r._isRouter=!0,r.from=n,r.to=e,r.type=t,r}var Si=["params","query","hash"];function Ci(n){return Object.prototype.toString.call(n).indexOf("Error")>-1}function wi(n,e){return Ci(n)&&n._isRouter&&(null==e||n.type===e)}function ki(n,e,t){var o=function(r){r>=n.length?t():n[r]?e(n[r],(function(){o(r+1)})):o(r+1)};o(0)}function Ai(n){return function(e,t,o){var r=!1,a=0,i=null;Pi(n,(function(n,e,t,s){if("function"==typeof n&&void 0===n.cid){r=!0,a++;var c,l=_i((function(e){var r;((r=e).__esModule||Ii&&"Module"===r[Symbol.toStringTag])&&(e=e.default),n.resolved="function"==typeof e?e:Va.extend(e),t.components[s]=e,--a<=0&&o()})),p=_i((function(n){var e="Failed to resolve async component "+s+": "+n;i||(i=Ci(n)?n:new Error(e),o(i))}));try{c=n(l,p)}catch(n){p(n)}if(c)if("function"==typeof c.then)c.then(l,p);else{var u=c.component;u&&"function"==typeof u.then&&u.then(l,p)}}})),r||o()}}function Pi(n,e){return Oi(n.map((function(n){return Object.keys(n.components).map((function(t){return e(n.components[t],n.instances[t],n,t)}))})))}function Oi(n){return Array.prototype.concat.apply([],n)}var Ii="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;function _i(n){var e=!1;return function(){for(var t=[],o=arguments.length;o--;)t[o]=arguments[o];if(!e)return e=!0,n.apply(this,t)}}var Mi=function(n,e){this.router=n,this.base=function(n){if(!n)if(Xa){var e=document.querySelector("base");n=(n=e&&e.getAttribute("href")||"/").replace(/^https?:\/\/[^\/]+/,"")}else n="/";"/"!==n.charAt(0)&&(n="/"+n);return n.replace(/\/$/,"")}(e),this.current=fa,this.pending=null,this.ready=!1,this.readyCbs=[],this.readyErrorCbs=[],this.errorCbs=[],this.listeners=[]};function Di(n,e,t,o){var r=Pi(n,(function(n,o,r,a){var i=function(n,e){"function"!=typeof n&&(n=Va.extend(n));return n.options[e]}(n,e);if(i)return Array.isArray(i)?i.map((function(n){return t(n,o,r,a)})):t(i,o,r,a)}));return Oi(o?r.reverse():r)}function Bi(n,e){if(e)return function(){return n.apply(e,arguments)}}Mi.prototype.listen=function(n){this.cb=n},Mi.prototype.onReady=function(n,e){this.ready?n():(this.readyCbs.push(n),e&&this.readyErrorCbs.push(e))},Mi.prototype.onError=function(n){this.errorCbs.push(n)},Mi.prototype.transitionTo=function(n,e,t){var o,r=this;try{o=this.router.match(n,this.current)}catch(n){throw this.errorCbs.forEach((function(e){e(n)})),n}var a=this.current;this.confirmTransition(o,(function(){r.updateRoute(o),e&&e(o),r.ensureURL(),r.router.afterHooks.forEach((function(n){n&&n(o,a)})),r.ready||(r.ready=!0,r.readyCbs.forEach((function(n){n(o)})))}),(function(n){t&&t(n),n&&!r.ready&&(wi(n,gi.redirected)&&a===fa||(r.ready=!0,r.readyErrorCbs.forEach((function(e){e(n)}))))}))},Mi.prototype.confirmTransition=function(n,e,t){var o=this,r=this.current;this.pending=n;var a,i,s=function(n){!wi(n)&&Ci(n)&&(o.errorCbs.length?o.errorCbs.forEach((function(e){e(n)})):console.error(n)),t&&t(n)},c=n.matched.length-1,l=r.matched.length-1;if(ga(n,r)&&c===l&&n.matched[c]===r.matched[l])return this.ensureURL(),n.hash&&ai(this.router,r,n,!1),s(((i=xi(a=r,n,gi.duplicated,'Avoided redundant navigation to current location: "'+a.fullPath+'".')).name="NavigationDuplicated",i));var p=function(n,e){var t,o=Math.max(n.length,e.length);for(t=0;t<o&&n[t]===e[t];t++);return{updated:e.slice(0,t),activated:e.slice(t),deactivated:n.slice(t)}}(this.current.matched,n.matched),u=p.updated,d=p.deactivated,m=p.activated,f=[].concat(function(n){return Di(n,"beforeRouteLeave",Bi,!0)}(d),this.router.beforeHooks,function(n){return Di(n,"beforeRouteUpdate",Bi)}(u),m.map((function(n){return n.beforeEnter})),Ai(m)),h=function(e,t){if(o.pending!==n)return s(yi(r,n));try{e(n,r,(function(e){!1===e?(o.ensureURL(!0),s(function(n,e){return xi(n,e,gi.aborted,'Navigation aborted from "'+n.fullPath+'" to "'+e.fullPath+'" via a navigation guard.')}(r,n))):Ci(e)?(o.ensureURL(!0),s(e)):"string"==typeof e||"object"==typeof e&&("string"==typeof e.path||"string"==typeof e.name)?(s(bi(r,n)),"object"==typeof e&&e.replace?o.replace(e):o.push(e)):t(e)}))}catch(n){s(n)}};ki(f,h,(function(){ki(function(n){return Di(n,"beforeRouteEnter",(function(n,e,t,o){return function(n,e,t){return function(o,r,a){return n(o,r,(function(n){"function"==typeof n&&(e.enteredCbs[t]||(e.enteredCbs[t]=[]),e.enteredCbs[t].push(n)),a(n)}))}}(n,t,o)}))}(m).concat(o.router.resolveHooks),h,(function(){if(o.pending!==n)return s(yi(r,n));o.pending=null,e(n),o.router.app&&o.router.app.$nextTick((function(){ya(n)}))}))}))},Mi.prototype.updateRoute=function(n){this.current=n,this.cb&&this.cb(n)},Mi.prototype.setupListeners=function(){},Mi.prototype.teardown=function(){this.listeners.forEach((function(n){n()})),this.listeners=[],this.current=fa,this.pending=null};var Ti=function(n){function e(e,t){n.call(this,e,t),this._startLocation=Ei(this.base)}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.setupListeners=function(){var n=this;if(!(this.listeners.length>0)){var e=this.router,t=e.options.scrollBehavior,o=fi&&t;o&&this.listeners.push(ri());var r=function(){var t=n.current,r=Ei(n.base);n.current===fa&&r===n._startLocation||n.transitionTo(r,(function(n){o&&ai(e,n,t,!0)}))};window.addEventListener("popstate",r),this.listeners.push((function(){window.removeEventListener("popstate",r)}))}},e.prototype.go=function(n){window.history.go(n)},e.prototype.push=function(n,e,t){var o=this,r=this.current;this.transitionTo(n,(function(n){hi(wa(o.base+n.fullPath)),ai(o.router,n,r,!1),e&&e(n)}),t)},e.prototype.replace=function(n,e,t){var o=this,r=this.current;this.transitionTo(n,(function(n){vi(wa(o.base+n.fullPath)),ai(o.router,n,r,!1),e&&e(n)}),t)},e.prototype.ensureURL=function(n){if(Ei(this.base)!==this.current.fullPath){var e=wa(this.base+this.current.fullPath);n?hi(e):vi(e)}},e.prototype.getCurrentLocation=function(){return Ei(this.base)},e}(Mi);function Ei(n){var e=window.location.pathname,t=e.toLowerCase(),o=n.toLowerCase();return!n||t!==o&&0!==t.indexOf(wa(o+"/"))||(e=e.slice(n.length)),(e||"/")+window.location.search+window.location.hash}var Ui=function(n){function e(e,t,o){n.call(this,e,t),o&&function(n){var e=Ei(n);if(!/^\/#/.test(e))return window.location.replace(wa(n+"/#"+e)),!0}(this.base)||Li()}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.setupListeners=function(){var n=this;if(!(this.listeners.length>0)){var e=this.router.options.scrollBehavior,t=fi&&e;t&&this.listeners.push(ri());var o=function(){var e=n.current;Li()&&n.transitionTo(Ri(),(function(o){t&&ai(n.router,o,e,!0),fi||zi(o.fullPath)}))},r=fi?"popstate":"hashchange";window.addEventListener(r,o),this.listeners.push((function(){window.removeEventListener(r,o)}))}},e.prototype.push=function(n,e,t){var o=this,r=this.current;this.transitionTo(n,(function(n){Ni(n.fullPath),ai(o.router,n,r,!1),e&&e(n)}),t)},e.prototype.replace=function(n,e,t){var o=this,r=this.current;this.transitionTo(n,(function(n){zi(n.fullPath),ai(o.router,n,r,!1),e&&e(n)}),t)},e.prototype.go=function(n){window.history.go(n)},e.prototype.ensureURL=function(n){var e=this.current.fullPath;Ri()!==e&&(n?Ni(e):zi(e))},e.prototype.getCurrentLocation=function(){return Ri()},e}(Mi);function Li(){var n=Ri();return"/"===n.charAt(0)||(zi("/"+n),!1)}function Ri(){var n=window.location.href,e=n.indexOf("#");return e<0?"":n=n.slice(e+1)}function Fi(n){var e=window.location.href,t=e.indexOf("#");return(t>=0?e.slice(0,t):e)+"#"+n}function Ni(n){fi?hi(Fi(n)):window.location.hash=n}function zi(n){fi?vi(Fi(n)):window.location.replace(Fi(n))}var ji=function(n){function e(e,t){n.call(this,e,t),this.stack=[],this.index=-1}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.push=function(n,e,t){var o=this;this.transitionTo(n,(function(n){o.stack=o.stack.slice(0,o.index+1).concat(n),o.index++,e&&e(n)}),t)},e.prototype.replace=function(n,e,t){var o=this;this.transitionTo(n,(function(n){o.stack=o.stack.slice(0,o.index).concat(n),e&&e(n)}),t)},e.prototype.go=function(n){var e=this,t=this.index+n;if(!(t<0||t>=this.stack.length)){var o=this.stack[t];this.confirmTransition(o,(function(){var n=e.current;e.index=t,e.updateRoute(o),e.router.afterHooks.forEach((function(e){e&&e(o,n)}))}),(function(n){wi(n,gi.duplicated)&&(e.index=t)}))}},e.prototype.getCurrentLocation=function(){var n=this.stack[this.stack.length-1];return n?n.fullPath:"/"},e.prototype.ensureURL=function(){},e}(Mi),Gi=function(n){void 0===n&&(n={}),this.app=null,this.apps=[],this.options=n,this.beforeHooks=[],this.resolveHooks=[],this.afterHooks=[],this.matcher=Ya(n.routes||[],this);var e=n.mode||"hash";switch(this.fallback="history"===e&&!fi&&!1!==n.fallback,this.fallback&&(e="hash"),Xa||(e="abstract"),this.mode=e,e){case"history":this.history=new Ti(this,n.base);break;case"hash":this.history=new Ui(this,n.base,this.fallback);break;case"abstract":this.history=new ji(this,n.base);break;default:0}},Vi={currentRoute:{configurable:!0}};Gi.prototype.match=function(n,e,t){return this.matcher.match(n,e,t)},Vi.currentRoute.get=function(){return this.history&&this.history.current},Gi.prototype.init=function(n){var e=this;if(this.apps.push(n),n.$once("hook:destroyed",(function(){var t=e.apps.indexOf(n);t>-1&&e.apps.splice(t,1),e.app===n&&(e.app=e.apps[0]||null),e.app||e.history.teardown()})),!this.app){this.app=n;var t=this.history;if(t instanceof Ti||t instanceof Ui){var o=function(n){t.setupListeners(),function(n){var o=t.current,r=e.options.scrollBehavior;fi&&r&&"fullPath"in n&&ai(e,n,o,!1)}(n)};t.transitionTo(t.getCurrentLocation(),o,o)}t.listen((function(n){e.apps.forEach((function(e){e._route=n}))}))}},Gi.prototype.beforeEach=function(n){return $i(this.beforeHooks,n)},Gi.prototype.beforeResolve=function(n){return $i(this.resolveHooks,n)},Gi.prototype.afterEach=function(n){return $i(this.afterHooks,n)},Gi.prototype.onReady=function(n,e){this.history.onReady(n,e)},Gi.prototype.onError=function(n){this.history.onError(n)},Gi.prototype.push=function(n,e,t){var o=this;if(!e&&!t&&"undefined"!=typeof Promise)return new Promise((function(e,t){o.history.push(n,e,t)}));this.history.push(n,e,t)},Gi.prototype.replace=function(n,e,t){var o=this;if(!e&&!t&&"undefined"!=typeof Promise)return new Promise((function(e,t){o.history.replace(n,e,t)}));this.history.replace(n,e,t)},Gi.prototype.go=function(n){this.history.go(n)},Gi.prototype.back=function(){this.go(-1)},Gi.prototype.forward=function(){this.go(1)},Gi.prototype.getMatchedComponents=function(n){var e=n?n.matched?n:this.resolve(n).route:this.currentRoute;return e?[].concat.apply([],e.matched.map((function(n){return Object.keys(n.components).map((function(e){return n.components[e]}))}))):[]},Gi.prototype.resolve=function(n,e,t){var o=Ga(n,e=e||this.history.current,t,this),r=this.match(o,e),a=r.redirectedFrom||r.fullPath;return{location:o,route:r,href:function(n,e,t){var o="hash"===t?"#"+e:e;return n?wa(n+"/"+o):o}(this.history.base,a,this.mode),normalizedTo:o,resolved:r}},Gi.prototype.getRoutes=function(){return this.matcher.getRoutes()},Gi.prototype.addRoute=function(n,e){this.matcher.addRoute(n,e),this.history.current!==fa&&this.history.transitionTo(this.history.getCurrentLocation())},Gi.prototype.addRoutes=function(n){this.matcher.addRoutes(n),this.history.current!==fa&&this.history.transitionTo(this.history.getCurrentLocation())},Object.defineProperties(Gi.prototype,Vi);var Hi=Gi;function $i(n,e){return n.push(e),function(){var t=n.indexOf(e);t>-1&&n.splice(t,1)}}Gi.install=function n(e){if(!n.installed||Va!==e){n.installed=!0,Va=e;var t=function(n){return void 0!==n},o=function(n,e){var o=n.$options._parentVnode;t(o)&&t(o=o.data)&&t(o=o.registerRouteInstance)&&o(n,e)};e.mixin({beforeCreate:function(){t(this.$options.router)?(this._routerRoot=this,this._router=this.$options.router,this._router.init(this),e.util.defineReactive(this,"_route",this._router.history.current)):this._routerRoot=this.$parent&&this.$parent._routerRoot||this,o(this,this)},destroyed:function(){o(this)}}),Object.defineProperty(e.prototype,"$router",{get:function(){return this._routerRoot._router}}),Object.defineProperty(e.prototype,"$route",{get:function(){return this._routerRoot._route}}),e.component("RouterView",xa),e.component("RouterLink",$a);var r=e.config.optionMergeStrategies;r.beforeRouteEnter=r.beforeRouteLeave=r.beforeRouteUpdate=r.created}},Gi.version="3.6.5",Gi.isNavigationFailure=wi,Gi.NavigationFailureType=gi,Gi.START_LOCATION=fa,Xa&&window.Vue&&window.Vue.use(Gi);t(101);t(93),t(128);var Wi={NotFound:()=>t.e(36).then(t.bind(null,438)),Layout:()=>Promise.all([t.e(0),t.e(2)]).then(t.bind(null,437))},Xi={"v-1fa07328":()=>t.e(37).then(t.bind(null,442)),"v-366c3f69":()=>t.e(11).then(t.bind(null,443)),"v-4cc6fb9b":()=>t.e(38).then(t.bind(null,444)),"v-fde3b590":()=>t.e(39).then(t.bind(null,445)),"v-95e31c08":()=>t.e(24).then(t.bind(null,446)),"v-49d89153":()=>t.e(30).then(t.bind(null,447)),"v-00d46393":()=>t.e(16).then(t.bind(null,448)),"v-07350bfb":()=>t.e(31).then(t.bind(null,449)),"v-00ebb4fa":()=>t.e(40).then(t.bind(null,450)),"v-7fa8f7d8":()=>t.e(9).then(t.bind(null,451)),"v-13d59a53":()=>t.e(41).then(t.bind(null,452)),"v-aaa8e5da":()=>t.e(17).then(t.bind(null,453)),"v-c6c22d8e":()=>t.e(42).then(t.bind(null,454)),"v-740c98ba":()=>t.e(25).then(t.bind(null,455)),"v-ecd4631e":()=>t.e(10).then(t.bind(null,456)),"v-7995a69a":()=>t.e(32).then(t.bind(null,457)),"v-561f93b3":()=>t.e(8).then(t.bind(null,458)),"v-74fe7b93":()=>t.e(26).then(t.bind(null,459)),"v-b798945a":()=>t.e(27).then(t.bind(null,460)),"v-7a42fe5a":()=>t.e(5).then(t.bind(null,461)),"v-ac0e9e56":()=>t.e(7).then(t.bind(null,462)),"v-b82dfbfa":()=>t.e(18).then(t.bind(null,463)),"v-75168346":()=>t.e(6).then(t.bind(null,464)),"v-39419617":()=>t.e(43).then(t.bind(null,465)),"v-575976af":()=>t.e(33).then(t.bind(null,466)),"v-22f73089":()=>t.e(44).then(t.bind(null,467)),"v-7a9d2033":()=>t.e(14).then(t.bind(null,468)),"v-f70e9c9a":()=>t.e(45).then(t.bind(null,469)),"v-111b33de":()=>t.e(28).then(t.bind(null,470)),"v-093f9953":()=>t.e(15).then(t.bind(null,471)),"v-df55b176":()=>t.e(12).then(t.bind(null,472)),"v-478f963e":()=>t.e(34).then(t.bind(null,473)),"v-71251f53":()=>t.e(4).then(t.bind(null,474)),"v-1474475a":()=>t.e(13).then(t.bind(null,475)),"v-1fe02573":()=>t.e(3).then(t.bind(null,476)),"v-115108b8":()=>t.e(46).then(t.bind(null,477)),"v-15555df3":()=>t.e(47).then(t.bind(null,478)),"v-13fb6693":()=>t.e(19).then(t.bind(null,479)),"v-8f91aef6":()=>t.e(48).then(t.bind(null,480)),"v-6ff7519a":()=>t.e(49).then(t.bind(null,481)),"v-5f9fb552":()=>t.e(29).then(t.bind(null,482))};function qi(n){const e=Object.create(null);return function(t){return e[t]||(e[t]=n(t))}}const Ki=/-(\w)/g,Yi=qi(n=>n.replace(Ki,(n,e)=>e?e.toUpperCase():"")),Qi=/\B([A-Z])/g,Ji=qi(n=>n.replace(Qi,"-$1").toLowerCase()),Zi=qi(n=>n.charAt(0).toUpperCase()+n.slice(1));function ns(n,e){if(!e)return;if(n(e))return n(e);return e.includes("-")?n(Zi(Yi(e))):n(Zi(e))||n(Ji(e))}const es=Object.assign({},Wi,Xi),ts=n=>es[n],os=n=>Xi[n],rs=n=>Wi[n],as=n=>Wt.component(n);function is(n){return ns(os,n)}function ss(n){return ns(rs,n)}function cs(n){return ns(ts,n)}function ls(n){return ns(as,n)}function ps(...n){return Promise.all(n.filter(n=>n).map(async n=>{if(!ls(n)&&cs(n)){const e=await cs(n)();Wt.component(n,e.default)}}))}function us(n,e){"undefined"!=typeof window&&window.__VUEPRESS__&&(window.__VUEPRESS__[n]=e)}var ds=t(90),ms=t.n(ds),fs=t(91),hs=t.n(fs),vs={created(){if(this.siteMeta=this.$site.headTags.filter(([n])=>"meta"===n).map(([n,e])=>e),this.$ssrContext){const e=this.getMergedMetaTags();this.$ssrContext.title=this.$title,this.$ssrContext.lang=this.$lang,this.$ssrContext.pageMeta=(n=e)?n.map(n=>{let e="<meta";return Object.keys(n).forEach(t=>{e+=` ${t}="${hs()(n[t])}"`}),e+">"}).join("\n    "):"",this.$ssrContext.canonicalLink=bs(this.$canonicalUrl)}var n},mounted(){this.currentMetaTags=[...document.querySelectorAll("meta")],this.updateMeta(),this.updateCanonicalLink()},methods:{updateMeta(){document.title=this.$title,document.documentElement.lang=this.$lang;const n=this.getMergedMetaTags();this.currentMetaTags=ys(n,this.currentMetaTags)},getMergedMetaTags(){const n=this.$page.frontmatter.meta||[];return ms()([{name:"description",content:this.$description}],n,this.siteMeta,xs)},updateCanonicalLink(){gs(),this.$canonicalUrl&&document.head.insertAdjacentHTML("beforeend",bs(this.$canonicalUrl))}},watch:{$page(){this.updateMeta(),this.updateCanonicalLink()}},beforeDestroy(){ys(null,this.currentMetaTags),gs()}};function gs(){const n=document.querySelector("link[rel='canonical']");n&&n.remove()}function bs(n=""){return n?`<link href="${n}" rel="canonical" />`:""}function ys(n,e){if(e&&[...e].filter(n=>n.parentNode===document.head).forEach(n=>document.head.removeChild(n)),n)return n.map(n=>{const e=document.createElement("meta");return Object.keys(n).forEach(t=>{e.setAttribute(t,n[t])}),document.head.appendChild(e),e})}function xs(n){for(const e of["name","property","itemprop"])if(n.hasOwnProperty(e))return n[e]+e;return JSON.stringify(n)}var Ss=t(24),Cs=t.n(Ss),ws={mounted(){Cs.a.configure({showSpinner:!1}),this.$router.beforeEach((n,e,t)=>{n.path===e.path||Wt.component(n.name)||Cs.a.start(),t()}),this.$router.afterEach(()=>{Cs.a.done(),this.isSidebarOpen=!1})}},ks=t(92),As=t.n(ks),Ps={mounted(){As.a.polyfill()}},Os=(t(235),Object.assign||function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(n[o]=t[o])}return n}),Is=function(n){return"IMG"===n.tagName},_s=function(n){return n&&1===n.nodeType},Ms=function(n){return".svg"===(n.currentSrc||n.src).substr(-4).toLowerCase()},Ds=function(n){try{return Array.isArray(n)?n.filter(Is):function(n){return NodeList.prototype.isPrototypeOf(n)}(n)?[].slice.call(n).filter(Is):_s(n)?[n].filter(Is):"string"==typeof n?[].slice.call(document.querySelectorAll(n)).filter(Is):[]}catch(n){throw new TypeError("The provided selector is invalid.\nExpects a CSS selector, a Node element, a NodeList or an array.\nSee: https://github.com/francoischalifour/medium-zoom")}},Bs=function(n){var e=document.createElement("div");return e.classList.add("medium-zoom-overlay"),e.style.background=n,e},Ts=function(n){var e=n.getBoundingClientRect(),t=e.top,o=e.left,r=e.width,a=e.height,i=n.cloneNode(),s=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0,c=window.pageXOffset||document.documentElement.scrollLeft||document.body.scrollLeft||0;return i.removeAttribute("id"),i.style.position="absolute",i.style.top=t+s+"px",i.style.left=o+c+"px",i.style.width=r+"px",i.style.height=a+"px",i.style.transform="",i},Es=function(n,e){var t=Os({bubbles:!1,cancelable:!1,detail:void 0},e);if("function"==typeof window.CustomEvent)return new CustomEvent(n,t);var o=document.createEvent("CustomEvent");return o.initCustomEvent(n,t.bubbles,t.cancelable,t.detail),o};!function(n,e){void 0===e&&(e={});var t=e.insertAt;if(n&&"undefined"!=typeof document){var o=document.head||document.getElementsByTagName("head")[0],r=document.createElement("style");r.type="text/css","top"===t&&o.firstChild?o.insertBefore(r,o.firstChild):o.appendChild(r),r.styleSheet?r.styleSheet.cssText=n:r.appendChild(document.createTextNode(n))}}(".medium-zoom-overlay{position:fixed;top:0;right:0;bottom:0;left:0;opacity:0;transition:opacity .3s;will-change:opacity}.medium-zoom--opened .medium-zoom-overlay{cursor:pointer;cursor:zoom-out;opacity:1}.medium-zoom-image{cursor:pointer;cursor:zoom-in;transition:transform .3s cubic-bezier(.2,0,.2,1)!important}.medium-zoom-image--hidden{visibility:hidden}.medium-zoom-image--opened{position:relative;cursor:pointer;cursor:zoom-out;will-change:transform}");var Us=function n(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},o=window.Promise||function(n){function e(){}n(e,e)},r=function(n){var e=n.target;e!==A?-1!==y.indexOf(e)&&h({target:e}):f()},a=function(){if(!S&&k.original){var n=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0;Math.abs(C-n)>w.scrollOffset&&setTimeout(f,150)}},i=function(n){var e=n.key||n.keyCode;"Escape"!==e&&"Esc"!==e&&27!==e||f()},s=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=n;if(n.background&&(A.style.background=n.background),n.container&&n.container instanceof Object&&(e.container=Os({},w.container,n.container)),n.template){var t=_s(n.template)?n.template:document.querySelector(n.template);e.template=t}return w=Os({},w,e),y.forEach((function(n){n.dispatchEvent(Es("medium-zoom:update",{detail:{zoom:P}}))})),P},c=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return n(Os({},w,e))},l=function(){for(var n=arguments.length,e=Array(n),t=0;t<n;t++)e[t]=arguments[t];var o=e.reduce((function(n,e){return[].concat(n,Ds(e))}),[]);return o.filter((function(n){return-1===y.indexOf(n)})).forEach((function(n){y.push(n),n.classList.add("medium-zoom-image")})),x.forEach((function(n){var e=n.type,t=n.listener,r=n.options;o.forEach((function(n){n.addEventListener(e,t,r)}))})),P},p=function(){for(var n=arguments.length,e=Array(n),t=0;t<n;t++)e[t]=arguments[t];k.zoomed&&f();var o=e.length>0?e.reduce((function(n,e){return[].concat(n,Ds(e))}),[]):y;return o.forEach((function(n){n.classList.remove("medium-zoom-image"),n.dispatchEvent(Es("medium-zoom:detach",{detail:{zoom:P}}))})),y=y.filter((function(n){return-1===o.indexOf(n)})),P},u=function(n,e){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return y.forEach((function(o){o.addEventListener("medium-zoom:"+n,e,t)})),x.push({type:"medium-zoom:"+n,listener:e,options:t}),P},d=function(n,e){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return y.forEach((function(o){o.removeEventListener("medium-zoom:"+n,e,t)})),x=x.filter((function(t){return!(t.type==="medium-zoom:"+n&&t.listener.toString()===e.toString())})),P},m=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=n.target,t=function(){var n={width:document.documentElement.clientWidth,height:document.documentElement.clientHeight,left:0,top:0,right:0,bottom:0},e=void 0,t=void 0;if(w.container)if(w.container instanceof Object)e=(n=Os({},n,w.container)).width-n.left-n.right-2*w.margin,t=n.height-n.top-n.bottom-2*w.margin;else{var o=(_s(w.container)?w.container:document.querySelector(w.container)).getBoundingClientRect(),r=o.width,a=o.height,i=o.left,s=o.top;n=Os({},n,{width:r,height:a,left:i,top:s})}e=e||n.width-2*w.margin,t=t||n.height-2*w.margin;var c=k.zoomedHd||k.original,l=Ms(c)?e:c.naturalWidth||e,p=Ms(c)?t:c.naturalHeight||t,u=c.getBoundingClientRect(),d=u.top,m=u.left,f=u.width,h=u.height,v=Math.min(l,e)/f,g=Math.min(p,t)/h,b=Math.min(v,g),y="scale("+b+") translate3d("+((e-f)/2-m+w.margin+n.left)/b+"px, "+((t-h)/2-d+w.margin+n.top)/b+"px, 0)";k.zoomed.style.transform=y,k.zoomedHd&&(k.zoomedHd.style.transform=y)};return new o((function(n){if(e&&-1===y.indexOf(e))n(P);else{if(k.zoomed)n(P);else{if(e)k.original=e;else{if(!(y.length>0))return void n(P);var o=y;k.original=o[0]}if(k.original.dispatchEvent(Es("medium-zoom:open",{detail:{zoom:P}})),C=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0,S=!0,k.zoomed=Ts(k.original),document.body.appendChild(A),w.template){var r=_s(w.template)?w.template:document.querySelector(w.template);k.template=document.createElement("div"),k.template.appendChild(r.content.cloneNode(!0)),document.body.appendChild(k.template)}if(document.body.appendChild(k.zoomed),window.requestAnimationFrame((function(){document.body.classList.add("medium-zoom--opened")})),k.original.classList.add("medium-zoom-image--hidden"),k.zoomed.classList.add("medium-zoom-image--opened"),k.zoomed.addEventListener("click",f),k.zoomed.addEventListener("transitionend",(function e(){S=!1,k.zoomed.removeEventListener("transitionend",e),k.original.dispatchEvent(Es("medium-zoom:opened",{detail:{zoom:P}})),n(P)})),k.original.getAttribute("data-zoom-src")){k.zoomedHd=k.zoomed.cloneNode(),k.zoomedHd.removeAttribute("srcset"),k.zoomedHd.removeAttribute("sizes"),k.zoomedHd.src=k.zoomed.getAttribute("data-zoom-src"),k.zoomedHd.onerror=function(){clearInterval(a),console.warn("Unable to reach the zoom image target "+k.zoomedHd.src),k.zoomedHd=null,t()};var a=setInterval((function(){k.zoomedHd.complete&&(clearInterval(a),k.zoomedHd.classList.add("medium-zoom-image--opened"),k.zoomedHd.addEventListener("click",f),document.body.appendChild(k.zoomedHd),t())}),10)}else if(k.original.hasAttribute("srcset")){k.zoomedHd=k.zoomed.cloneNode(),k.zoomedHd.removeAttribute("sizes"),k.zoomedHd.removeAttribute("loading");var i=k.zoomedHd.addEventListener("load",(function(){k.zoomedHd.removeEventListener("load",i),k.zoomedHd.classList.add("medium-zoom-image--opened"),k.zoomedHd.addEventListener("click",f),document.body.appendChild(k.zoomedHd),t()}))}else t()}}}))},f=function(){return new o((function(n){if(!S&&k.original){S=!0,document.body.classList.remove("medium-zoom--opened"),k.zoomed.style.transform="",k.zoomedHd&&(k.zoomedHd.style.transform=""),k.template&&(k.template.style.transition="opacity 150ms",k.template.style.opacity=0),k.original.dispatchEvent(Es("medium-zoom:close",{detail:{zoom:P}})),k.zoomed.addEventListener("transitionend",(function e(){k.original.classList.remove("medium-zoom-image--hidden"),document.body.removeChild(k.zoomed),k.zoomedHd&&document.body.removeChild(k.zoomedHd),document.body.removeChild(A),k.zoomed.classList.remove("medium-zoom-image--opened"),k.template&&document.body.removeChild(k.template),S=!1,k.zoomed.removeEventListener("transitionend",e),k.original.dispatchEvent(Es("medium-zoom:closed",{detail:{zoom:P}})),k.original=null,k.zoomed=null,k.zoomedHd=null,k.template=null,n(P)}))}else n(P)}))},h=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=n.target;return k.original?f():m({target:e})},v=function(){return w},g=function(){return y},b=function(){return k.original},y=[],x=[],S=!1,C=0,w=t,k={original:null,zoomed:null,zoomedHd:null,template:null};"[object Object]"===Object.prototype.toString.call(e)?w=e:(e||"string"==typeof e)&&l(e),w=Os({margin:0,background:"#fff",scrollOffset:40,container:null,template:null},w);var A=Bs(w.background);document.addEventListener("click",r),document.addEventListener("keyup",i),document.addEventListener("scroll",a),window.addEventListener("resize",f);var P={open:m,close:f,toggle:h,update:s,clone:c,attach:l,detach:p,on:u,off:d,getOptions:v,getImages:g,getZoomedImage:b};return P},Ls={data:()=>({zoom:null}),mounted(){this.updateZoom()},updated(){this.updateZoom()},methods:{updateZoom(){setTimeout(()=>{this.zoom&&this.zoom.detach(),this.zoom=Us(".theme-succinct-content :not(a) > img",{background:"var(--bodyBgColor)"})},1e3)}}},Rs=t(23),Fs=t.n(Rs),Ns=[vs,ws,Ps,Ls,{mounted(){window.addEventListener("scroll",this.onScroll)},methods:{onScroll:Fs()((function(){this.setActiveHash()}),300),setActiveHash(){const n=[].slice.call(document.querySelectorAll(".sidebar-link")),e=[].slice.call(document.querySelectorAll(".header-anchor")).filter(e=>n.some(n=>n.hash===e.hash)),t=Math.max(window.pageYOffset,document.documentElement.scrollTop,document.body.scrollTop),o=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),r=window.innerHeight+t;for(let n=0;n<e.length;n++){const a=e[n],i=e[n+1],s=0===n&&0===t||t>=a.parentElement.offsetTop+10&&(!i||t<i.parentElement.offsetTop-10),c=decodeURIComponent(this.$route.hash);if(s&&c!==decodeURIComponent(a.hash)){const t=a;if(r===o)for(let t=n+1;t<e.length;t++)if(c===decodeURIComponent(e[t].hash))return;return this.$vuepress.$set("disableScrollBehavior",!0),void this.$router.replace(decodeURIComponent(t.hash),()=>{this.$nextTick(()=>{this.$vuepress.$set("disableScrollBehavior",!1)})})}}}},beforeDestroy(){window.removeEventListener("scroll",this.onScroll)}}],zs={name:"GlobalLayout",computed:{layout(){const n=this.getLayout();return us("layout",n),Wt.component(n)}},methods:{getLayout(){if(this.$page.path){const n=this.$page.frontmatter.layout;return n&&(this.$vuepress.getLayoutAsyncComponent(n)||this.$vuepress.getVueComponent(n))?n:"Layout"}return"NotFound"}}},js=t(10),Gs=Object(js.a)(zs,(function(){return(0,this._self._c)(this.layout,{tag:"component"})}),[],!1,null,null,null).exports;!function(n,e,t){switch(e){case"components":n[e]||(n[e]={}),Object.assign(n[e],t);break;case"mixins":n[e]||(n[e]=[]),n[e].push(...t);break;default:throw new Error("Unknown option name.")}}(Gs,"mixins",Ns);const Vs=[{name:"v-1fa07328",path:"/",component:Gs,beforeEnter:(n,e,t)=>{ps("Layout","v-1fa07328").then(t)}},{path:"/index.html",redirect:"/"},{name:"v-366c3f69",path:"/cosmetic/gui.html",component:Gs,beforeEnter:(n,e,t)=>{ps("Layout","v-366c3f69").then(t)}},{name:"v-4cc6fb9b",path:"/cosmetic/verbose.html",component:Gs,beforeEnter:(n,e,t)=>{ps("Layout","v-4cc6fb9b").then(t)}},{name:"v-fde3b590",path:"/gpu-patching/",component:Gs,beforeEnter:(n,e,t)=>{ps("Layout","v-fde3b590").then(t)}},{path:"/gpu-patching/index.html",redirect:"/gpu-patching/"},{name:"v-95e31c08",path:"/gpu-patching/intel-patching/",component:Gs,beforeEnter:(n,e,t)=>{ps("Layout","v-95e31c08").then(t)}},{path:"/gpu-patching/intel-patching/index.html",redirect:"/gpu-patching/intel-patching/"},{name:"v-49d89153",path:"/gpu-patching/intel-patching/busid.html",component:Gs,beforeEnter:(n,e,t)=>{ps("Layout","v-49d89153").then(t)}},{name:"v-00d46393",path:"/gpu-patching/intel-patching/connector.html",component:Gs,beforeEnter:(n,e,t)=>{ps("Layout","v-00d46393").then(t)}},{name:"v-07350bfb",path:"/gpu-patching/intel-patching/vram.html",component:Gs,beforeEnter:(n,e,t)=>{ps("Layout","v-07350bfb").then(t)}},{name:"v-00ebb4fa",path:"/gpu-patching/legacy-intel/",component:Gs,beforeEnter:(n,e,t)=>{ps("Layout","v-00ebb4fa").then(t)}},{path:"/gpu-patching/legacy-intel/index.html",redirect:"/gpu-patching/legacy-intel/"},{name:"v-7fa8f7d8",path:"/gpu-patching/nvidia-patching/",component:Gs,beforeEnter:(n,e,t)=>{ps("Layout","v-7fa8f7d8").then(t)}},{path:"/gpu-patching/nvidia-patching/index.html",redirect:"/gpu-patching/nvidia-patching/"},{name:"v-13d59a53",path:"/laptop-specific/battery.html",component:Gs,beforeEnter:(n,e,t)=>{ps("Layout","v-13d59a53").then(t)}},{name:"v-aaa8e5da",path:"/misc/msr-lock.html",component:Gs,beforeEnter:(n,e,t)=>{ps("Layout","v-aaa8e5da").then(t)}},{name:"v-c6c22d8e",path:"/misc/nvram.html",component:Gs,beforeEnter:(n,e,t)=>{ps("Layout","v-c6c22d8e").then(t)}},{name:"v-740c98ba",path:"/misc/rtc.html",component:Gs,beforeEnter:(n,e,t)=>{ps("Layout","v-740c98ba").then(t)}},{name:"v-ecd4631e",path:"/multiboot/bootcamp.html",component:Gs,beforeEnter:(n,e,t)=>{ps("Layout","v-ecd4631e").then(t)}},{name:"v-7995a69a",path:"/multiboot/bootstrap.html",component:Gs,beforeEnter:(n,e,t)=>{ps("Layout","v-7995a69a").then(t)}},{name:"v-561f93b3",path:"/universal/audio.html",component:Gs,beforeEnter:(n,e,t)=>{ps("Layout","v-561f93b3").then(t)}},{name:"v-74fe7b93",path:"/universal/drm.html",component:Gs,beforeEnter:(n,e,t)=>{ps("Layout","v-74fe7b93").then(t)}},{name:"v-b798945a",path:"/universal/gpu-patches.html",component:Gs,beforeEnter:(n,e,t)=>{ps("Layout","v-b798945a").then(t)}},{name:"v-7a42fe5a",path:"/universal/iservices.html",component:Gs,beforeEnter:(n,e,t)=>{ps("Layout","v-7a42fe5a").then(t)}},{name:"v-ac0e9e56",path:"/universal/memory.html",component:Gs,beforeEnter:(n,e,t)=>{ps("Layout","v-ac0e9e56").then(t)}},{name:"v-b82dfbfa",path:"/universal/oc2hdd.html",component:Gs,beforeEnter:(n,e,t)=>{ps("Layout","v-b82dfbfa").then(t)}},{name:"v-75168346",path:"/universal/pm.html",component:Gs,beforeEnter:(n,e,t)=>{ps("Layout","v-75168346").then(t)}},{name:"v-39419617",path:"/universal/security.html",component:Gs,beforeEnter:(n,e,t)=>{ps("Layout","v-39419617").then(t)}},{name:"v-575976af",path:"/universal/security/applesecureboot.html",component:Gs,beforeEnter:(n,e,t)=>{ps("Layout","v-575976af").then(t)}},{name:"v-22f73089",path:"/universal/security/filevault.html",component:Gs,beforeEnter:(n,e,t)=>{ps("Layout","v-22f73089").then(t)}},{name:"v-7a9d2033",path:"/universal/security/password.html",component:Gs,beforeEnter:(n,e,t)=>{ps("Layout","v-7a9d2033").then(t)}},{name:"v-f70e9c9a",path:"/universal/security/scanpolicy.html",component:Gs,beforeEnter:(n,e,t)=>{ps("Layout","v-f70e9c9a").then(t)}},{name:"v-111b33de",path:"/universal/security/vault.html",component:Gs,beforeEnter:(n,e,t)=>{ps("Layout","v-111b33de").then(t)}},{name:"v-093f9953",path:"/universal/sleep.html",component:Gs,beforeEnter:(n,e,t)=>{ps("Layout","v-093f9953").then(t)}},{name:"v-df55b176",path:"/universal/update.html",component:Gs,beforeEnter:(n,e,t)=>{ps("Layout","v-df55b176").then(t)}},{name:"v-478f963e",path:"/usb/",component:Gs,beforeEnter:(n,e,t)=>{ps("Layout","v-478f963e").then(t)}},{path:"/usb/index.html",redirect:"/usb/"},{name:"v-71251f53",path:"/usb/amd-mapping/amd.html",component:Gs,beforeEnter:(n,e,t)=>{ps("Layout","v-71251f53").then(t)}},{name:"v-1474475a",path:"/usb/intel-mapping/intel.html",component:Gs,beforeEnter:(n,e,t)=>{ps("Layout","v-1474475a").then(t)}},{name:"v-1fe02573",path:"/usb/manual/manual.html",component:Gs,beforeEnter:(n,e,t)=>{ps("Layout","v-1fe02573").then(t)}},{name:"v-115108b8",path:"/usb/misc/",component:Gs,beforeEnter:(n,e,t)=>{ps("Layout","v-115108b8").then(t)}},{path:"/usb/misc/index.html",redirect:"/usb/misc/"},{name:"v-15555df3",path:"/usb/misc/instant-wake.html",component:Gs,beforeEnter:(n,e,t)=>{ps("Layout","v-15555df3").then(t)}},{name:"v-13fb6693",path:"/usb/misc/keyboard.html",component:Gs,beforeEnter:(n,e,t)=>{ps("Layout","v-13fb6693").then(t)}},{name:"v-8f91aef6",path:"/usb/misc/power.html",component:Gs,beforeEnter:(n,e,t)=>{ps("Layout","v-8f91aef6").then(t)}},{name:"v-6ff7519a",path:"/usb/misc/shutdown.html",component:Gs,beforeEnter:(n,e,t)=>{ps("Layout","v-6ff7519a").then(t)}},{name:"v-5f9fb552",path:"/usb/system-preparation.html",component:Gs,beforeEnter:(n,e,t)=>{ps("Layout","v-5f9fb552").then(t)}},{path:"*",component:Gs}],Hs={title:"OpenCore 安装后",description:"",base:"/OpenCore-Post-Install/",headTags:[["meta",{name:"theme-color",content:"#3eaf7c"}],["meta",{name:"apple-mobile-web-app-capable",content:"yes"}],["meta",{name:"apple-mobile-web-app-status-bar-style",content:"black"}],["link",{rel:"'stylesheet",href:"/OpenCore-Post-Install/styles/website.css"}]],pages:[{title:"OpenCore 安装后",frontmatter:{},regularPath:"/",relativePath:"README.md",key:"v-1fa07328",path:"/",headers:[{level:2,title:"如何遵循本指南",slug:"如何遵循本指南",normalizedTitle:"如何遵循本指南",charIndex:161},{level:3,title:"通用",slug:"通用",normalizedTitle:"通用",charIndex:235},{level:3,title:"USB 修复",slug:"usb-修复",normalizedTitle:"usb 修复",charIndex:768},{level:3,title:"安全",slug:"安全",normalizedTitle:"安全",charIndex:279},{level:3,title:"笔记本细节",slug:"笔记本细节",normalizedTitle:"笔记本细节",charIndex:867},{level:3,title:"美化",slug:"美化",normalizedTitle:"美化",charIndex:338},{level:3,title:"多重引导",slug:"多重引导",normalizedTitle:"多重引导",charIndex:1084},{level:3,title:"杂项",slug:"杂项",normalizedTitle:"杂项",charIndex:401},{level:3,title:"GPU修补",slug:"gpu修补",normalizedTitle:"gpu修补",charIndex:434}],lastUpdated:"2/14/2023, 5:12:00 PM",lastUpdatedTimestamp:167639472e4,headersStr:"如何遵循本指南 通用 USB 修复 安全 笔记本细节 美化 多重引导 杂项 GPU修补",content:"# OpenCore 安装后\n\n欢迎来到OpenCore安装后指南!请注意，如果您还没有安装macOS，我们建议您遵循我们的安装指南:\n\n * OpenCore安装指南\n\n虽然这里的信息可以应用到OpenCore和Clover，我们主要关注的是OpenCore安装。所以，如果你遇到任何问题，你需要做更多的研究。\n\n\n# 如何遵循本指南\n\n首先，本指南中并非每一节都必须完整。这取决于每个用户是否觉得他们想要添加最后的润色或解决某些问题\n\n本指南分为8个部分:\n\n * 通用\n   * 建议所有用户遵循\n * USB修复\n   * 建议所有用户也遵循\n * 安全\n   * 针对那些关心安全和隐私的人。\n * 笔记本电脑细节\n   * 除上述外，建议笔记本电脑用户遵循\n * 美化\n   * 美化，如OpenCore GUI和删除启动期间的详细屏幕输出\n * 多引导\n   * 多引导用户的建议\n * 杂项\n   * 其他杂项修复，并不是所有用户都需要这些修复\n * GPU修补\n   * 更深入地了解如何为macOS打补丁以支持各种GPU硬件\n\n\n# 通用\n\n * 修复音频\n   * 对于那些需要帮助解决音频问题的人。\n * 无需USB启动\n   * 允许您在不安装USB的情况下启动OpenCore。\n * 更新OpenCore, kexts和macOS\n   * 如何安全地更新你的kext, OpenCore甚至macOS。\n * 修复DRM\n   * 对于那些有DRM问题的人，比如Netflix播放。\n * 修复iServices\n   * 帮助解决诸如iMessage之类的杂项服务问题。\n * 修复电源管理\n   * 修复并帮助改善硬件空闲和增强状态。\n * 修复睡眠\n   * 修复睡眠时要检查的地方很多。\n\n\n# USB 修复\n\n * USB映射:介绍\n   * USB问题的起点，如缺少端口和帮助睡眠。\n\n\n# 安全\n\n * 安全性和文件库\n   * 这里我们来设置一些OpenCore很棒的安全特性\n\n\n# 笔记本细节\n\n * 修复电池读数\n   * 如果您的电池不支持SMCBatteryManager开箱即用。\n\n\n# 美化\n\n * 添加GUI和开机铃声\n   * 为OpenCore添加一个花哨的GUI，甚至是一个启动铃声!\n * 修复分辨率和啰嗦模式\n   * 帮助修复OpenCore的分辨率，并允许您在启动时获得那个甜美的苹果标志!\n * 修复macpro7,1内存错误\n   * 修复macpro7,1启动时的内存错误\n\n\n# 多重引导\n\n * OpenCore 多重引导\n   * 使用OpenCore进行多重引导的专用指南\n * 设置启动选项\n   * 确保Windows不会从我们的系统中删除OpenCore。\n * 安装BootCamp\n   * 允许我们安装Bootcamp，便于引导切换。\n\n\n# 杂项\n\n * 修复RTC\n   * 帮助解决RTC / CMOS /安全模式重新启动问题。\n * 修复CFG锁\n   * 允许删除一些内核补丁以获得更好的稳定性\n * 模拟NVRAM\n   * NVRAM损坏或需要测试的用户。\n\n\n# GPU修补\n\n * 深入的GPU修补",normalizedContent:"# opencore 安装后\n\n欢迎来到opencore安装后指南!请注意，如果您还没有安装macos，我们建议您遵循我们的安装指南:\n\n * opencore安装指南\n\n虽然这里的信息可以应用到opencore和clover，我们主要关注的是opencore安装。所以，如果你遇到任何问题，你需要做更多的研究。\n\n\n# 如何遵循本指南\n\n首先，本指南中并非每一节都必须完整。这取决于每个用户是否觉得他们想要添加最后的润色或解决某些问题\n\n本指南分为8个部分:\n\n * 通用\n   * 建议所有用户遵循\n * usb修复\n   * 建议所有用户也遵循\n * 安全\n   * 针对那些关心安全和隐私的人。\n * 笔记本电脑细节\n   * 除上述外，建议笔记本电脑用户遵循\n * 美化\n   * 美化，如opencore gui和删除启动期间的详细屏幕输出\n * 多引导\n   * 多引导用户的建议\n * 杂项\n   * 其他杂项修复，并不是所有用户都需要这些修复\n * gpu修补\n   * 更深入地了解如何为macos打补丁以支持各种gpu硬件\n\n\n# 通用\n\n * 修复音频\n   * 对于那些需要帮助解决音频问题的人。\n * 无需usb启动\n   * 允许您在不安装usb的情况下启动opencore。\n * 更新opencore, kexts和macos\n   * 如何安全地更新你的kext, opencore甚至macos。\n * 修复drm\n   * 对于那些有drm问题的人，比如netflix播放。\n * 修复iservices\n   * 帮助解决诸如imessage之类的杂项服务问题。\n * 修复电源管理\n   * 修复并帮助改善硬件空闲和增强状态。\n * 修复睡眠\n   * 修复睡眠时要检查的地方很多。\n\n\n# usb 修复\n\n * usb映射:介绍\n   * usb问题的起点，如缺少端口和帮助睡眠。\n\n\n# 安全\n\n * 安全性和文件库\n   * 这里我们来设置一些opencore很棒的安全特性\n\n\n# 笔记本细节\n\n * 修复电池读数\n   * 如果您的电池不支持smcbatterymanager开箱即用。\n\n\n# 美化\n\n * 添加gui和开机铃声\n   * 为opencore添加一个花哨的gui，甚至是一个启动铃声!\n * 修复分辨率和啰嗦模式\n   * 帮助修复opencore的分辨率，并允许您在启动时获得那个甜美的苹果标志!\n * 修复macpro7,1内存错误\n   * 修复macpro7,1启动时的内存错误\n\n\n# 多重引导\n\n * opencore 多重引导\n   * 使用opencore进行多重引导的专用指南\n * 设置启动选项\n   * 确保windows不会从我们的系统中删除opencore。\n * 安装bootcamp\n   * 允许我们安装bootcamp，便于引导切换。\n\n\n# 杂项\n\n * 修复rtc\n   * 帮助解决rtc / cmos /安全模式重新启动问题。\n * 修复cfg锁\n   * 允许删除一些内核补丁以获得更好的稳定性\n * 模拟nvram\n   * nvram损坏或需要测试的用户。\n\n\n# gpu修补\n\n * 深入的gpu修补",charsets:{cjk:!0}},{title:"OpenCore美化",frontmatter:{},regularPath:"/cosmetic/gui.html",relativePath:"cosmetic/gui.md",key:"v-366c3f69",path:"/cosmetic/gui.html",headers:[{level:2,title:"设置OpenCore的GUI",slug:"设置opencore的gui",normalizedTitle:"设置opencore的gui",charIndex:33},{level:2,title:"使用AudioDxe设置开机铃声",slug:"使用audiodxe设置开机铃声",normalizedTitle:"使用audiodxe设置开机铃声",charIndex:51}],lastUpdated:"2/14/2023, 5:12:00 PM",lastUpdatedTimestamp:167639472e4,headersStr:"设置OpenCore的GUI 使用AudioDxe设置开机铃声",content:"# OpenCore美化\n\n本指南将介绍的主要内容:\n\n\n\n * 设置OpenCore的GUI\n * 使用AudioDxe设置开机铃声\n\n\n\n\n# 设置OpenCore的GUI\n\n在开始之前，我们需要0.5.7或更新版本，因为这些构建将GUI包含在其他文件中。如果你使用的是较旧的版本，我建议更新:更新 OpenCore\n\n完成之后，我们还需要做几件事:\n\n * 二进制资源\n * OpenCanopy.efi\n   * 注:OpenCanopy.efi必须来自与您的OpenCore文件相同的版本，因为不匹配的文件会导致启动问题\n\n完成这两个操作后，接下来将其添加到EFI分区中:\n\n * 将资源文件夹添加到EFI/OC\n * 添加OpenCanopy.efi到EFI/OC/Drivers\n\n\n\n现在在我们的config.Plist中，我们有4个问题需要解决:\n\n * Misc -> Boot -> PickerMode: External\n * Misc -> Boot -> PickerAttributes: 17\n   * 这使鼠标/触控板支持以及从驱动器读取volumeicon.icns，允许macOS安装程序图标出现在选择器中\n     * PickerAttributes的其他设置可以在Configuration.pdf中找到\n * Misc -> Boot -> PickerVariant: Acidanthera\\GoldenGate\n   * 适用变量:\n     * Auto — 根据默认背景颜色自动选择一组图标。\n     * Acidanthera\\Syrah — N正常图标设置。\n     * Acidanthera\\GoldenGate — 新图标集。\n     * Acidanthera\\Chardonnay — 复古图标集。\n * 并将OpenCanopy.efi添加到UEFI -> Drivers\n\n一旦所有这些都保存下来，你就可以重新启动，并看到一个真正的类似mac的GUI:\n\n默认的 (SYRAH)   新的 (GOLDENGATE)   老的 (CHARDONNAY)\n                                \n\n\n# 使用AudioDxe设置开机铃声\n\n首先，我们需要一些东西:\n\n * 内置音频输出\n   * USB dac无法工作\n   * GPU音频输出好坏参半\n * AudioDxe 放到 EFI/OC/Drivers 和 UEFI -> Drivers\n * 二进制资源\n   * 将Resources文件夹添加到EFI/OC中，就像我们对OpenCore GUI部分所做的那样\n   * 对于那些空间不足的人，只需要 OCEFIAudio_VoiceOver_Boot.mp3也可以\n * 启用日志记录的OpenCore的调试版本\n   * 参见OpenCore调试了解更多信息\n   * 注意:在完成设置后，您可以恢复到发布版本\n\n设置NVRAM:\n\n * NVRAM -> Add -> 7C436110-AB2A-4BBB-A880-FE41995C9F82:\n   * SystemAudioVolume | Data | 0x46\n   * 这是启动编码器和屏幕阅读器的音量，注意它是十六进制的，因此将变成十进制的70;0x80是静音的\n\n可选NVRAM表项\n * NVRAM -> Add -> 7C436110-AB2A-4BBB-A880-FE41995C9F82:\n   * StartupMute | Data | 0x00\n   * 在固件音频支持中静音启动铃声;0x00是未静音的，不填写变量或填写任何其他值都意味着静音\n\n设置UEFI -> Audio:\n\n * AudioCodec: (Number)\n   \n   * 音频控制器编解码器地址。这通常包含第一个音频编解码器地址装入的模拟音频控制器(HDEF)。失效保护值为0。\n   * 找到你的:\n     \n     * 检查IORegistryExplorer -> HDEF -> AppleHDAController -> IOHDACodecDevice并查看IOHDACodecAddress属性(例如:0x0)\n     \n     * 也可以通过终端进行检查(注意，如果出现多个设备，请使用供应商ID查找正确的设备):\n       \n       ioreg -rxn IOHDACodecDevice | grep VendorID   # 列出所有可能的设备\n       sh ioreg -rxn IOHDACodecDevice | grep IOHDACodecAddress # 获取编解码器地址\n       \n\n * AudioDevice: (String)\n   \n   * 音频控制器的设备路径(PciRoot)\n   * 运行gfxutil找到路径:\n     * /path/to/gfxutil -f HDEF\n     * 例如: PciRoot(0x0)/Pci(0x1f,0x3)\n\n * AudioOutMask: (Number)\n   \n   * 在UEFI中播放声音到多个声道(例如主扬声器加低音扬声器)。失效保护的值是-1(输出到所有)。\n   \n   * 输出通道在内部编号为比特0(值1)，比特1(值2)等等。值1表示第一个音频输出(不一定是主扬声器)。值-1用于同时向所有通道播放。\n   \n   * 启用AudioSupport时，AudioDevice必须为空或有效路径，并且AudioOutMask必须非零\n   \n   * 找到正确输出的最简单方法是遍历每个输出(从2^0到2^(N - 1)，其中N是日志中列出的输出数量);例如:5个输出将转换为1/2/4/8/16(或这些值的组合)作为可能的值\n   \n   * 你可以在OpenCore调试日志中找到你的所有编解码器:\n     \n     06:065 00:004 OCAU: Matching PciRoot(0x0)/Pci(0x1F,0x3)/VenMsg(A9003FEB-D806-41DB-A491-5405FEEF46C3,00000000)...\n     06:070 00:005 OCAU: 1/2 PciRoot(0x0)/Pci(0x1F,0x3)/VenMsg(A9003FEB-D806-41DB-A491-5405FEEF46C3,00000000) (5 outputs) - Success\n     \n\n * AudioSupport: (Boolean)\n   \n   * 设置为 True\n   * 启用此设置将音频播放从内置协议路由到指定音频控制器(AudioDevice)上指定编解码器(AudioCodec)的指定专用音频端口(AudioOutMask)\n\n * DisconnectHDA: (Boolean)\n   \n   * 设置为 False\n\n * MaximumGain: (Number)\n   \n   * 用于UEFI音频的最大增益，以分贝(dB)指定，相对于放大器参考电平0 dB\n   * 设置为 -15\n\n * MinimumAssistGain: (Number)\n   \n   * 用于picker音频辅助的最小增益分贝(dB)。如果从SystemAudioVolumeDB NVRAM变量读取的系统放大器增益低于此值，则屏幕阅读器将使用此放大器增益\n   * 设置为 -30\n\n * MinimumAudibleGain: (Number)\n   \n   * 尝试播放任何声音的最小增益分贝(dB)\n   * 设置为 -55\n\n * PlayChime: (String)\n   \n   * 设置为 Enabled\n   * 支持的值为:\n     * Auto — 当StartupMute NVRAM变量不存在或设置为00时启用铃声\n     * Enabled — 无条件启用铃声\n     * Disabled — 无条件禁用铃声\n\n * ResetTrafficClass: (Boolean)\n   \n   * 设置为 False\n\n * SetupDelay: (Number)\n   \n   * 默认值为0\n   * 有些解码器需要额外的设置时间，如果你有问题，我们建议设置为500毫秒(0.5秒)\n\n一旦完成，你应该会得到这样的结果:\n\n\n\n信息\n\n有像Realtek ALC295 (HP等)这样的编解码器，其默认音频采样率为48 kHz。在这种情况下，即使编解码器支持44.1 kHz，声音输出也会失败。目前解决这个问题的唯一方法是更改OCEFIAudio_VoiceOver_Boot.mp3的采样率文件或使用音频编辑工具将它从44.1 kHz提高到48 kHz。这必须手动完成，因为OpenCore没有自动机制。\n\n信息\n\n视障人士注意事项:\n\n * OpenCore没有忘记您!使用AudioDxe设置，您可以通过以下2个设置启用选择器音频和文件库语音转换:\n   * Misc -> Boot -> PickerAudioAssist -> True 启用选择器音频\n   * UEFI -> ProtocolOverrides -> AppleAudio -> True 启动文件库语音转换\n * 请参阅安全和文件库了解如何设置其余的文件以获得适当的文件库支持。",normalizedContent:"# opencore美化\n\n本指南将介绍的主要内容:\n\n\n\n * 设置opencore的gui\n * 使用audiodxe设置开机铃声\n\n\n\n\n# 设置opencore的gui\n\n在开始之前，我们需要0.5.7或更新版本，因为这些构建将gui包含在其他文件中。如果你使用的是较旧的版本，我建议更新:更新 opencore\n\n完成之后，我们还需要做几件事:\n\n * 二进制资源\n * opencanopy.efi\n   * 注:opencanopy.efi必须来自与您的opencore文件相同的版本，因为不匹配的文件会导致启动问题\n\n完成这两个操作后，接下来将其添加到efi分区中:\n\n * 将资源文件夹添加到efi/oc\n * 添加opencanopy.efi到efi/oc/drivers\n\n\n\n现在在我们的config.plist中，我们有4个问题需要解决:\n\n * misc -> boot -> pickermode: external\n * misc -> boot -> pickerattributes: 17\n   * 这使鼠标/触控板支持以及从驱动器读取volumeicon.icns，允许macos安装程序图标出现在选择器中\n     * pickerattributes的其他设置可以在configuration.pdf中找到\n * misc -> boot -> pickervariant: acidanthera\\goldengate\n   * 适用变量:\n     * auto — 根据默认背景颜色自动选择一组图标。\n     * acidanthera\\syrah — n正常图标设置。\n     * acidanthera\\goldengate — 新图标集。\n     * acidanthera\\chardonnay — 复古图标集。\n * 并将opencanopy.efi添加到uefi -> drivers\n\n一旦所有这些都保存下来，你就可以重新启动，并看到一个真正的类似mac的gui:\n\n默认的 (syrah)   新的 (goldengate)   老的 (chardonnay)\n                                \n\n\n# 使用audiodxe设置开机铃声\n\n首先，我们需要一些东西:\n\n * 内置音频输出\n   * usb dac无法工作\n   * gpu音频输出好坏参半\n * audiodxe 放到 efi/oc/drivers 和 uefi -> drivers\n * 二进制资源\n   * 将resources文件夹添加到efi/oc中，就像我们对opencore gui部分所做的那样\n   * 对于那些空间不足的人，只需要 ocefiaudio_voiceover_boot.mp3也可以\n * 启用日志记录的opencore的调试版本\n   * 参见opencore调试了解更多信息\n   * 注意:在完成设置后，您可以恢复到发布版本\n\n设置nvram:\n\n * nvram -> add -> 7c436110-ab2a-4bbb-a880-fe41995c9f82:\n   * systemaudiovolume | data | 0x46\n   * 这是启动编码器和屏幕阅读器的音量，注意它是十六进制的，因此将变成十进制的70;0x80是静音的\n\n可选nvram表项\n * nvram -> add -> 7c436110-ab2a-4bbb-a880-fe41995c9f82:\n   * startupmute | data | 0x00\n   * 在固件音频支持中静音启动铃声;0x00是未静音的，不填写变量或填写任何其他值都意味着静音\n\n设置uefi -> audio:\n\n * audiocodec: (number)\n   \n   * 音频控制器编解码器地址。这通常包含第一个音频编解码器地址装入的模拟音频控制器(hdef)。失效保护值为0。\n   * 找到你的:\n     \n     * 检查ioregistryexplorer -> hdef -> applehdacontroller -> iohdacodecdevice并查看iohdacodecaddress属性(例如:0x0)\n     \n     * 也可以通过终端进行检查(注意，如果出现多个设备，请使用供应商id查找正确的设备):\n       \n       ioreg -rxn iohdacodecdevice | grep vendorid   # 列出所有可能的设备\n       sh ioreg -rxn iohdacodecdevice | grep iohdacodecaddress # 获取编解码器地址\n       \n\n * audiodevice: (string)\n   \n   * 音频控制器的设备路径(pciroot)\n   * 运行gfxutil找到路径:\n     * /path/to/gfxutil -f hdef\n     * 例如: pciroot(0x0)/pci(0x1f,0x3)\n\n * audiooutmask: (number)\n   \n   * 在uefi中播放声音到多个声道(例如主扬声器加低音扬声器)。失效保护的值是-1(输出到所有)。\n   \n   * 输出通道在内部编号为比特0(值1)，比特1(值2)等等。值1表示第一个音频输出(不一定是主扬声器)。值-1用于同时向所有通道播放。\n   \n   * 启用audiosupport时，audiodevice必须为空或有效路径，并且audiooutmask必须非零\n   \n   * 找到正确输出的最简单方法是遍历每个输出(从2^0到2^(n - 1)，其中n是日志中列出的输出数量);例如:5个输出将转换为1/2/4/8/16(或这些值的组合)作为可能的值\n   \n   * 你可以在opencore调试日志中找到你的所有编解码器:\n     \n     06:065 00:004 ocau: matching pciroot(0x0)/pci(0x1f,0x3)/venmsg(a9003feb-d806-41db-a491-5405feef46c3,00000000)...\n     06:070 00:005 ocau: 1/2 pciroot(0x0)/pci(0x1f,0x3)/venmsg(a9003feb-d806-41db-a491-5405feef46c3,00000000) (5 outputs) - success\n     \n\n * audiosupport: (boolean)\n   \n   * 设置为 true\n   * 启用此设置将音频播放从内置协议路由到指定音频控制器(audiodevice)上指定编解码器(audiocodec)的指定专用音频端口(audiooutmask)\n\n * disconnecthda: (boolean)\n   \n   * 设置为 false\n\n * maximumgain: (number)\n   \n   * 用于uefi音频的最大增益，以分贝(db)指定，相对于放大器参考电平0 db\n   * 设置为 -15\n\n * minimumassistgain: (number)\n   \n   * 用于picker音频辅助的最小增益分贝(db)。如果从systemaudiovolumedb nvram变量读取的系统放大器增益低于此值，则屏幕阅读器将使用此放大器增益\n   * 设置为 -30\n\n * minimumaudiblegain: (number)\n   \n   * 尝试播放任何声音的最小增益分贝(db)\n   * 设置为 -55\n\n * playchime: (string)\n   \n   * 设置为 enabled\n   * 支持的值为:\n     * auto — 当startupmute nvram变量不存在或设置为00时启用铃声\n     * enabled — 无条件启用铃声\n     * disabled — 无条件禁用铃声\n\n * resettrafficclass: (boolean)\n   \n   * 设置为 false\n\n * setupdelay: (number)\n   \n   * 默认值为0\n   * 有些解码器需要额外的设置时间，如果你有问题，我们建议设置为500毫秒(0.5秒)\n\n一旦完成，你应该会得到这样的结果:\n\n\n\n信息\n\n有像realtek alc295 (hp等)这样的编解码器，其默认音频采样率为48 khz。在这种情况下，即使编解码器支持44.1 khz，声音输出也会失败。目前解决这个问题的唯一方法是更改ocefiaudio_voiceover_boot.mp3的采样率文件或使用音频编辑工具将它从44.1 khz提高到48 khz。这必须手动完成，因为opencore没有自动机制。\n\n信息\n\n视障人士注意事项:\n\n * opencore没有忘记您!使用audiodxe设置，您可以通过以下2个设置启用选择器音频和文件库语音转换:\n   * misc -> boot -> pickeraudioassist -> true 启用选择器音频\n   * uefi -> protocoloverrides -> appleaudio -> true 启动文件库语音转换\n * 请参阅安全和文件库了解如何设置其余的文件以获得适当的文件库支持。",charsets:{cjk:!0}},{title:"修复分辨率和详细信息",frontmatter:{},regularPath:"/cosmetic/verbose.html",relativePath:"cosmetic/verbose.md",key:"v-4cc6fb9b",path:"/cosmetic/verbose.html",headers:[{level:2,title:"macOS整理",slug:"macos整理",normalizedTitle:"macos整理",charIndex:58},{level:2,title:"OpenCore整理",slug:"opencore整理",normalizedTitle:"opencore整理",charIndex:541}],lastUpdated:"2/14/2023, 5:12:00 PM",lastUpdatedTimestamp:167639472e4,headersStr:"macOS整理 OpenCore整理",content:"# 修复分辨率和详细信息\n\n想要使用macOS获得更简洁的启动体验，而不是启动时冗长的文本?你需要几件事:\n\n\n# macOS整理\n\nMisc -> Debug\n\n * 将AppleDebug设置为False，这将在启动时移除boot.efi调试。\n\nNVRAM -> Add -> 7C436110-AB2A-4BBB-A880-FE41995C9F82:\n\n * 在config.plist中删除引导参数中的-v\n\nNVRAM -> Add -> 4D1EDE05-38C7-4A6A-9CC6-4BCCA8B38C14:\n\n * UIScale\n   * 01: 标准分辨率\n   * 02: HiDPI (保险库通常需要在较小的显示器上正常工作)\n\nUEFI -> Output:\n\n * TextRenderer 设置为BuiltinGraphics\n * Resolution: 设置为 Max 以获得最佳效果\n   * 可选指定分辨率:WxH@Bpp(例如1920x1080@32)或WxH(例如1920x1080)\n * ProvideConsoleGop 设置为 True\n\n如果仍然有问题，请参阅Configuration.pdf以获得所有可能的选项。\n\n\n# OpenCore整理\n\n如果您在安装过程中密切遵循本指南，您可能会运行调试版本的OpenCore，并且在每次启动时将创建一个.txt文件。对于那些想要删除OpenCore的额外调试消息和.txt文件生成的人，请参见以下内容:\n\n在config.plist中:\n\n * Misc -> Debug -> Target: 3\n   * Target决定记录什么以及如何记录，请参阅OpenCore 调试了解更多值\n\n在EFI中:\n\n * 将以下文件替换为发布版本(如果以前使用的是调试版本):\n   * EFI/BOOT/\n     * BOOTx64.efi\n   * EFI/OC/Drivers/\n     * OpenRuntime.efi\n   * EFI/OC/\n     * OpenCore.efi",normalizedContent:"# 修复分辨率和详细信息\n\n想要使用macos获得更简洁的启动体验，而不是启动时冗长的文本?你需要几件事:\n\n\n# macos整理\n\nmisc -> debug\n\n * 将appledebug设置为false，这将在启动时移除boot.efi调试。\n\nnvram -> add -> 7c436110-ab2a-4bbb-a880-fe41995c9f82:\n\n * 在config.plist中删除引导参数中的-v\n\nnvram -> add -> 4d1ede05-38c7-4a6a-9cc6-4bcca8b38c14:\n\n * uiscale\n   * 01: 标准分辨率\n   * 02: hidpi (保险库通常需要在较小的显示器上正常工作)\n\nuefi -> output:\n\n * textrenderer 设置为builtingraphics\n * resolution: 设置为 max 以获得最佳效果\n   * 可选指定分辨率:wxh@bpp(例如1920x1080@32)或wxh(例如1920x1080)\n * provideconsolegop 设置为 true\n\n如果仍然有问题，请参阅configuration.pdf以获得所有可能的选项。\n\n\n# opencore整理\n\n如果您在安装过程中密切遵循本指南，您可能会运行调试版本的opencore，并且在每次启动时将创建一个.txt文件。对于那些想要删除opencore的额外调试消息和.txt文件生成的人，请参见以下内容:\n\n在config.plist中:\n\n * misc -> debug -> target: 3\n   * target决定记录什么以及如何记录，请参阅opencore 调试了解更多值\n\n在efi中:\n\n * 将以下文件替换为发布版本(如果以前使用的是调试版本):\n   * efi/boot/\n     * bootx64.efi\n   * efi/oc/drivers/\n     * openruntime.efi\n   * efi/oc/\n     * opencore.efi",charsets:{cjk:!0}},{title:"macOS中的GPU补丁",frontmatter:{},regularPath:"/gpu-patching/",relativePath:"gpu-patching/README.md",key:"v-fde3b590",path:"/gpu-patching/",headers:[{level:2,title:"Intel iGPU 补丁",slug:"intel-igpu-补丁",normalizedTitle:"intel igpu 补丁",charIndex:46},{level:2,title:"Nvidia 补丁",slug:"nvidia-补丁",normalizedTitle:"nvidia 补丁",charIndex:145}],lastUpdated:"2/14/2023, 5:12:00 PM",lastUpdatedTimestamp:167639472e4,headersStr:"Intel iGPU 补丁 Nvidia 补丁",content:"# macOS中的GPU补丁\n\n本节是专门针对GPU补丁的，目前我们支持以下内容：\n\n\n# Intel iGPU 补丁\n\n * Modern iGPU patching\n   * 支持Sandy和更新的版本\n * Legacy iGPU patching\n   * 支持GMA系列\n\n\n# Nvidia 补丁\n\n * 传统的Nvidia补丁\n   * 支持Tesla到Fermi系列。",normalizedContent:"# macos中的gpu补丁\n\n本节是专门针对gpu补丁的，目前我们支持以下内容：\n\n\n# intel igpu 补丁\n\n * modern igpu patching\n   * 支持sandy和更新的版本\n * legacy igpu patching\n   * 支持gma系列\n\n\n# nvidia 补丁\n\n * 传统的nvidia补丁\n   * 支持tesla到fermi系列。",charsets:{cjk:!0}},{title:"英特尔iGPU补丁",frontmatter:{},regularPath:"/gpu-patching/intel-patching/",relativePath:"gpu-patching/intel-patching/README.md",key:"v-95e31c08",path:"/gpu-patching/intel-patching/",headers:[{level:2,title:"术语",slug:"术语",normalizedTitle:"术语",charIndex:172},{level:2,title:"开始工作",slug:"开始工作",normalizedTitle:"开始工作",charIndex:509},{level:3,title:"AAPL,ig-platform-id explainer",slug:"aapl-ig-platform-id-explainer",normalizedTitle:"aapl,ig-platform-id explainer",charIndex:572},{level:3,title:"device-id解释",slug:"device-id解释",normalizedTitle:"device-id解释",charIndex:2123},{level:2,title:"学习用WhateverGreen打补丁",slug:"学习用whatevergreen打补丁",normalizedTitle:"学习用whatevergreen打补丁",charIndex:2920}],lastUpdated:"2/14/2023, 5:12:00 PM",lastUpdatedTimestamp:167639472e4,headersStr:"术语 开始工作 AAPL,ig-platform-id explainer device-id解释 学习用WhateverGreen打补丁",content:'# 英特尔iGPU补丁\n\n本指南将更深入地探讨修补macOS以支持英特尔iGPU的更多硬件变化，包括正确的显示输出，修复颜色色调问题，HiDPI问题等。注意本指南不是初学者教程，我们建议你按照指南中config.plist部分列出的推荐iGPU属性来开始。\n\n本指南支持：\n\n * Sandy Bridge到Ice Lake的iGPU\n\n\n# 术语\n\n术语                     说明\nFramebuffer            指的是macOS中用来驱动GPU的kext。\nFramebuffer Profile    帧缓冲器中的配置文件，它决定了iGPU将如何行动。\nWhateverGreen          Kext用于修补GPU驱动，以更好地支持PC硬件。\nAAPL,ig-platform-id    macOS用来确定Ivy Bridge和更新版本的帧缓冲器配置文件的属性。\nAAPL,snb-platform-id   macOS用于确定Sandy Bridge的帧缓冲器配置的属性\ndevice-id              IOKit用于将硬件与kexts相匹配\n\n\n# 开始工作\n\n在我们跳入这个无底洞太深之前，我们应该先解释一下我们在做什么，以及为什么我们需要这样做。\n\n基本的主题。\n\n * AAPL,ig-platform-id explainer\n * device-id explainer\n\n\n# AAPL,ig-platform-id explainer\n\n在带有iGPU的Mac中，默认情况下有几种配置。\n\n * iGPU是唯一的显示输出\n   * 常见于没有dGPU的Mac Minis、MacBook Airs、13英寸MacBook Pros和iMac上\n * iGPU只用于内部显示，而dGPU则处理外部显示\n   * 常见于15英寸MacBook Pro\n * iGPU仅用于内部计算，而dGPU处理所有的显示输出\n   * 常见于包含dGPU的iMac。\n\n这一点之所以重要，是因为苹果在iGPU kexts中支持大量的iGPU配置，特别是被称为帧缓冲器个性。这些个性决定了许多事情，包括显示器的数量、允许的显示器类型、这些显示器的位置、所需的最小VRAM等，因此我们需要希望这些配置文件中有一个与我们的硬件相匹配，或者尝试修补它。\n\n为了指定macOS中的帧缓冲器个性，我们使用OpenCore的DeviceProperties部分，添加一个名为AAPL,ig-platform-id的条目。\n\n * 注意：在Sandy Bridge上，我们使用AAPL,snb-platform-id代替。\n\n该条目的格式为十六进制，并与实际值进行了字节交换。这些值的完整列表可以在WhateverGreen的手册中找到。FAQ.IntelHD.en.md\n\n在这个例子中，让我们尝试找到一个与桌面HD4600 iGPU兼容的帧缓存。我们首先要向下滚动手册，直到找到Intel HD Graphics 4200-5200（Haswell处理器）条目。在这里，我们得到了一份macOS中所有支持的帧缓冲器的列表，包括硬件类型（即移动与桌面）、VRAM要求等。如果你滚动到这个列表的底部，你还会得到一些推荐选项。\n\n台式机:\n 0x0D220003 (默认)\n笔记本电脑:\n 0x0A160000 (默认)\n 0x0A260005 (推荐)\n 0x0A260006 (推荐)\n空的帧缓冲区。\n 0x04120004 (默认)\n\n\n前两个条目是非常明显的，但是最后一个条目（Empty Framebuffer）指的是系统已经设置了dGPU，但是仍然在后台启用了iGPU来处理任务，比如硬件加速解码等它擅长的任务。\n\n现在，由于我们使用的是台式机HD4600，我们将抓取相应的帧缓冲器配置文件。0x0D220003。\n\n现在，我们不能在我们的config.plist中使用它。原因是它是大尾数的，而macOS的IOS服务树希望它是小尾数的。然而，要转换它非常简单。\n\n# 开始时，去掉0x，然后将它们成对隔开\n0x0D220003 -> 0D 22 00 03\n\n# 接下来，颠倒顺序，但保持成对排列\n0D 22 00 03 -> 03 00 22 0D\n\n# And now you have your final framebuffer profile\n0300220D = AAPL,ig-platform-id\n\n\n从这里，让我们打开我们的config.plist，并前往DeviceProperties -> Add。现在我们要添加一个新条目，名为 PciRoot(0x0)/Pci(0x2,0x0)。这是英特尔iGPU相对于IOS服务路径的位置，从Yonah系列CPU（2007年以上）开始，这个位置就一直是一致的。\n\nKEY                   TYPE   VALUE\nAAPL,ig-platform-id   Data   0300220D\n\n\n\n\n# device-id解释\n\n“device-id”是macOS，或者更具体地说是IOKit用来确定允许哪些设备连接到哪些驱动程序的参数。这对我们来说很重要，因为苹果的iGPU驱动器的id数量有限，而kext本身可以支持更多的id。\n\n要确定是否需要注入新的“device-id”，你需要将WhateverGreen的支持id列表与你所拥有的进行比较。\n\n在这个例子中，让我们看看带有HD 4400 iGPU的i3-4150. 使用英特尔方舟页面，我们可以看到以下内容：\n\nDevice ID = 0x41E\n\n\n现在我们有了实际的设备ID，让我们把它与WhateverGreen的列表进行比较。\n\n本地支持的DevIDs。\n\n 0x0d26\n 0x0a26\n 0x0a2e\n 0x0d22\n 0x0412\n\n\n不幸的是，这个ID在macOS中不存在，所以我们需要找到一个与我们类似的iGPU并使用它们的设备ID。在i3-4330中发现的HD 4600是非常接近的，所以我们将使用它的设备ID。\n\nDevice ID = 0x412\n\n\n然而，在默认情况下，这不能被注入。我们需要首先将其填充到8位，然后进行十六进制交换。\n\n# 首先，去掉0x，在它前面用0来填充到8位\n0x412 -> 00 00 04 12\n\n# 接下来将其反转，但保持对数不变\n00 00 04 12 -> 12 04 00 00\n\n# 然后，你就得到了你的设备ID\n12040000 = device-id\n\n\n现在我们有了我们的设备ID，我们将做与之前ig-platform-id相同的事情。打开你的config.plist，在 PciRoot(0x0)/Pci(0x2,0x0)下添加这个新条目。\n\nKEY         TYPE   VALUE\ndevice-id   Data   12040000\n\n\n\n\n# 学习用WhateverGreen打补丁\n\n现在我们已经了解了设置iGPU的基础知识，让我们进入一些更深入的话题。我们首先需要了解一些前提条件。\n\n * Lilu和WhateverGreen存在于EFI/OC/Kexts下和你的config.plist中。\n   * 要验证它们在macOS中是否正确加载，运行下面的命令（如果没有输出，说明kexts没有被加载）\n   * kextstat | grep -E "Lilu|WhateverGreen"。\n * DeviceProperties -> Add -> PciRoot(0x0)/Pci(0x2,0x0)已经被正确设置。\n   * 参考你在config.plist部分的具体生成\n\n现在开始你的帧缓冲器补丁之旅吧！。\n\n * 对macOS的VRAM要求进行修补\n   * 与锁定BIOS和不能增加VRAM的系统有关。\n * 修补显示类型\n   * 与在某些显示器上可能得到失真的颜色的系统有关。\n * 修补显示连接\n   * 与某些显示输出不工作的系统有关',normalizedContent:'# 英特尔igpu补丁\n\n本指南将更深入地探讨修补macos以支持英特尔igpu的更多硬件变化，包括正确的显示输出，修复颜色色调问题，hidpi问题等。注意本指南不是初学者教程，我们建议你按照指南中config.plist部分列出的推荐igpu属性来开始。\n\n本指南支持：\n\n * sandy bridge到ice lake的igpu\n\n\n# 术语\n\n术语                     说明\nframebuffer            指的是macos中用来驱动gpu的kext。\nframebuffer profile    帧缓冲器中的配置文件，它决定了igpu将如何行动。\nwhatevergreen          kext用于修补gpu驱动，以更好地支持pc硬件。\naapl,ig-platform-id    macos用来确定ivy bridge和更新版本的帧缓冲器配置文件的属性。\naapl,snb-platform-id   macos用于确定sandy bridge的帧缓冲器配置的属性\ndevice-id              iokit用于将硬件与kexts相匹配\n\n\n# 开始工作\n\n在我们跳入这个无底洞太深之前，我们应该先解释一下我们在做什么，以及为什么我们需要这样做。\n\n基本的主题。\n\n * aapl,ig-platform-id explainer\n * device-id explainer\n\n\n# aapl,ig-platform-id explainer\n\n在带有igpu的mac中，默认情况下有几种配置。\n\n * igpu是唯一的显示输出\n   * 常见于没有dgpu的mac minis、macbook airs、13英寸macbook pros和imac上\n * igpu只用于内部显示，而dgpu则处理外部显示\n   * 常见于15英寸macbook pro\n * igpu仅用于内部计算，而dgpu处理所有的显示输出\n   * 常见于包含dgpu的imac。\n\n这一点之所以重要，是因为苹果在igpu kexts中支持大量的igpu配置，特别是被称为帧缓冲器个性。这些个性决定了许多事情，包括显示器的数量、允许的显示器类型、这些显示器的位置、所需的最小vram等，因此我们需要希望这些配置文件中有一个与我们的硬件相匹配，或者尝试修补它。\n\n为了指定macos中的帧缓冲器个性，我们使用opencore的deviceproperties部分，添加一个名为aapl,ig-platform-id的条目。\n\n * 注意：在sandy bridge上，我们使用aapl,snb-platform-id代替。\n\n该条目的格式为十六进制，并与实际值进行了字节交换。这些值的完整列表可以在whatevergreen的手册中找到。faq.intelhd.en.md\n\n在这个例子中，让我们尝试找到一个与桌面hd4600 igpu兼容的帧缓存。我们首先要向下滚动手册，直到找到intel hd graphics 4200-5200（haswell处理器）条目。在这里，我们得到了一份macos中所有支持的帧缓冲器的列表，包括硬件类型（即移动与桌面）、vram要求等。如果你滚动到这个列表的底部，你还会得到一些推荐选项。\n\n台式机:\n 0x0d220003 (默认)\n笔记本电脑:\n 0x0a160000 (默认)\n 0x0a260005 (推荐)\n 0x0a260006 (推荐)\n空的帧缓冲区。\n 0x04120004 (默认)\n\n\n前两个条目是非常明显的，但是最后一个条目（empty framebuffer）指的是系统已经设置了dgpu，但是仍然在后台启用了igpu来处理任务，比如硬件加速解码等它擅长的任务。\n\n现在，由于我们使用的是台式机hd4600，我们将抓取相应的帧缓冲器配置文件。0x0d220003。\n\n现在，我们不能在我们的config.plist中使用它。原因是它是大尾数的，而macos的ios服务树希望它是小尾数的。然而，要转换它非常简单。\n\n# 开始时，去掉0x，然后将它们成对隔开\n0x0d220003 -> 0d 22 00 03\n\n# 接下来，颠倒顺序，但保持成对排列\n0d 22 00 03 -> 03 00 22 0d\n\n# and now you have your final framebuffer profile\n0300220d = aapl,ig-platform-id\n\n\n从这里，让我们打开我们的config.plist，并前往deviceproperties -> add。现在我们要添加一个新条目，名为 pciroot(0x0)/pci(0x2,0x0)。这是英特尔igpu相对于ios服务路径的位置，从yonah系列cpu（2007年以上）开始，这个位置就一直是一致的。\n\nkey                   type   value\naapl,ig-platform-id   data   0300220d\n\n\n\n\n# device-id解释\n\n“device-id”是macos，或者更具体地说是iokit用来确定允许哪些设备连接到哪些驱动程序的参数。这对我们来说很重要，因为苹果的igpu驱动器的id数量有限，而kext本身可以支持更多的id。\n\n要确定是否需要注入新的“device-id”，你需要将whatevergreen的支持id列表与你所拥有的进行比较。\n\n在这个例子中，让我们看看带有hd 4400 igpu的i3-4150. 使用英特尔方舟页面，我们可以看到以下内容：\n\ndevice id = 0x41e\n\n\n现在我们有了实际的设备id，让我们把它与whatevergreen的列表进行比较。\n\n本地支持的devids。\n\n 0x0d26\n 0x0a26\n 0x0a2e\n 0x0d22\n 0x0412\n\n\n不幸的是，这个id在macos中不存在，所以我们需要找到一个与我们类似的igpu并使用它们的设备id。在i3-4330中发现的hd 4600是非常接近的，所以我们将使用它的设备id。\n\ndevice id = 0x412\n\n\n然而，在默认情况下，这不能被注入。我们需要首先将其填充到8位，然后进行十六进制交换。\n\n# 首先，去掉0x，在它前面用0来填充到8位\n0x412 -> 00 00 04 12\n\n# 接下来将其反转，但保持对数不变\n00 00 04 12 -> 12 04 00 00\n\n# 然后，你就得到了你的设备id\n12040000 = device-id\n\n\n现在我们有了我们的设备id，我们将做与之前ig-platform-id相同的事情。打开你的config.plist，在 pciroot(0x0)/pci(0x2,0x0)下添加这个新条目。\n\nkey         type   value\ndevice-id   data   12040000\n\n\n\n\n# 学习用whatevergreen打补丁\n\n现在我们已经了解了设置igpu的基础知识，让我们进入一些更深入的话题。我们首先需要了解一些前提条件。\n\n * lilu和whatevergreen存在于efi/oc/kexts下和你的config.plist中。\n   * 要验证它们在macos中是否正确加载，运行下面的命令（如果没有输出，说明kexts没有被加载）\n   * kextstat | grep -e "lilu|whatevergreen"。\n * deviceproperties -> add -> pciroot(0x0)/pci(0x2,0x0)已经被正确设置。\n   * 参考你在config.plist部分的具体生成\n\n现在开始你的帧缓冲器补丁之旅吧！。\n\n * 对macos的vram要求进行修补\n   * 与锁定bios和不能增加vram的系统有关。\n * 修补显示类型\n   * 与在某些显示器上可能得到失真的颜色的系统有关。\n * 修补显示连接\n   * 与某些显示输出不工作的系统有关',charsets:{cjk:!0}},{title:"补丁总线ID",frontmatter:{},regularPath:"/gpu-patching/intel-patching/busid.html",relativePath:"gpu-patching/intel-patching/busid.md",key:"v-49d89153",path:"/gpu-patching/intel-patching/busid.html",headers:[{level:2,title:"解析帧缓冲区",slug:"解析帧缓冲区",normalizedTitle:"解析帧缓冲区",charIndex:200},{level:2,title:"映射视频端口",slug:"映射视频端口",normalizedTitle:"映射视频端口",charIndex:1682},{level:3,title:"在macOS中的映射",slug:"在macos中的映射",normalizedTitle:"在macos中的映射",charIndex:1776},{level:3,title:"没有macOS的映射",slug:"没有macos的映射",normalizedTitle:"没有macos的映射",charIndex:3582}],lastUpdated:"2/14/2023, 5:12:00 PM",lastUpdatedTimestamp:167639472e4,headersStr:"解析帧缓冲区 映射视频端口 在macOS中的映射 没有macOS的映射",content:"# 补丁总线ID\n\n本节主要与那些无论连接器类型或SMBIOS补丁都无法使用某些显示输出的人有关，因为苹果对输出总线ID进行了硬编码，与你的硬件不匹配。为了解决这个问题，我们将手动修补这些总线ID以支持我们的硬件。\n\n这一页会比较技术性，因为我们已经假定你已经读完了前面的几页，并且对WhateverGreen有了一定的了解。\n\n * 修补显示类型\n * 对macOS的VRAM要求进行修补\n\n\n# 解析帧缓冲区\n\n首先，让我们假设我们使用的是一块带有UHD 630的Z390主板。这个系统在macOS中只使用iGPU，在使用某些显示输出时有问题，并且使用了0x3E9B0007帧缓冲器。\n\n当我们从WhateverGreen的手册上看这个帧缓冲器时，我们看到以下情况：\n\nID: 3E9B0007, STOLEN: 57 MB, FBMEM: 0 bytes, VRAM: 1536 MB, Flags: 0x00801302\nTOTAL STOLEN: 58 MB, TOTAL CURSOR: 1 MB (1572864 bytes), MAX STOLEN: 172 MB, MAX OVERALL: 173 MB (181940224 bytes)\nGPU Name: Intel UHD Graphics 630\nModel Name(s):\nCamelia: Disabled\nMobile: 0, PipeCount: 3, PortCount: 3, FBMemoryCount: 3\n[1] busId: 0x05, pipe: 9, type: 0x00000400, flags: 0x000003C7 - DP\n[2] busId: 0x04, pipe: 10, type: 0x00000400, flags: 0x000003C7 - DP\n[3] busId: 0x06, pipe: 8, type: 0x00000400, flags: 0x000003C7 - DP\n01050900 00040000 C7030000\n02040A00 00040000 C7030000\n03060800 00040000 C7030000\n\n\n现在让我们把它解析为BusID信息，因为这就是我们要修补的内容：\n\n[1] busId: 0x05, pipe: 9, type: 0x00000400, flags: 0x000003C7 - DP\n[2] busId: 0x04, pipe: 10, type: 0x00000400, flags: 0x000003C7 - DP\n[3] busId: 0x06, pipe: 8, type: 0x00000400, flags: 0x000003C7 - DP\n01050900 00040000 C7030000\n02040A00 00040000 C7030000\n03060800 00040000 C7030000\n\n\n在这里，我们看到这个帧缓冲器的特性中列出了3个总线ID，让我们试着把它们分解，以便更容易理解。让我们来看看第1条：\n\n[1] busId: 0x05, pipe: 9, type: 0x00000400, flags: 0x000003C7 - DP\n01050900 00040000 C7030000\n\n\nBIT        NAME             VALUE\nBit 1      Port             01\nBit 2      Bus ID           05\nBit 3-4    Pipe Number      0900\nBit 5-8    Connector Type   00040000\nBit 9-12   Flags            C7030000\n\n需要记住的事情。\n\n * BusID是一个唯一的值，不能被多个条目使用\n * 连接器类型的值与连接器类型修补页中讨论的相同。\n\n\n# 映射视频端口\n\n这里我们有两个部分。\n\n * macOS内的映射\n   * 你可以启动macOS并使用至少一个显示器。\n * 不使用macOS的映射\n   * 在所有显示器上黑屏\n\n\n# 在macOS中的映射\n\n在macOS中映射视频是相当容易的，因为我们可以假设我们的一个端口在帧缓冲器中被正确映射。\n\n在这个例子中，我们将解释常见的HDMI-hotplug fix for Kaby lake users。首先，让我们看一下0x591B0000帧缓冲区：\n\nID: 591B0000, STOLEN: 38 MB, FBMEM: 21 MB, VRAM: 1536 MB, Flags: 0x0000130B\nTOTAL STOLEN: 39 MB, TOTAL CURSOR: 1 MB (1572864 bytes), MAX STOLEN: 136 MB, MAX OVERALL: 137 MB (144191488 bytes)\nModel name: Intel HD Graphics KBL CRB\nCamellia: CamelliaDisabled (0), Freq: 1388 Hz, FreqMax: 1388 Hz\nMobile: 1, PipeCount: 3, PortCount: 3, FBMemoryCount: 3\n[0] busId: 0x00, pipe: 8, type: 0x00000002, flags: 0x00000098 - ConnectorLVDS\n[2] busId: 0x04, pipe: 10, type: 0x00000800, flags: 0x00000187 - ConnectorHDMI\n[3] busId: 0x06, pipe: 10, type: 0x00000400, flags: 0x00000187 - ConnectorDP\n00000800 02000000 98000000\n02040A00 00080000 87010000\n03060A00 00040000 87010000\n\n\n在这里，我们看到第2条是HDMI端口，但是在真正的Kaby lake笔记本电脑上，热插拔导致机器内核崩溃的情况非常普遍。这是由于总线ID和端口与硬件不完全一致造成的。\n\n为了解决这个问题，我们要把它打成更合适的东西（即把0204改为 0105，这些都是经过测试可以正常工作的）。\n\n有2种方法来修补。\n\n * 替换整个条目\n * 替换条目的部分内容\n\n# 替换整个条目\n\n要替换整个条目，我们首先要找到我们的条目，并确保它被正确枚举。这是因为Apple的条目从0开始，并依次递增。\n\n * con0\n * con1\n * con2\n\n因此，由于条目2是列表中的第二个，我们要使用con1。\n\n * framebuffer-con2-enable\n\n接下来让我们打补丁，我们知道端口需要打成01，BusID改成05:\n\n * 01050A00 00080000 87010000\n\n最后，我们得到了以下补丁。\n\nframebuffer-patch-enable | Data | `01000000`\nframebuffer-con2-enable  | Data | `01000000`\nframebuffer-con2-alldata | Data | `01050A00 00080000 87010000`\n\n\n# 替换条目的各个部分\n\n要替换条目的某些部分，我们首先要找到我们的条目，并确保它被正确列举出来。这是因为苹果公司的条目从0开始，然后依次递增。\n\n * con0\n * con1\n * con2\n\n因此，由于条目2是列表中的第二个，我们要使用con1。\n\n * framebuffer-con1-enable。\n\n接下来让我们打补丁，我们知道端口需要打成01，BusID改成05。\n\n * framebuffer-con2-index = 01\n * framebuffer-con2-busid = 05\n\n最后，我们得到了这些补丁:\n\nframebuffer-patch-enable | Data | `01000000`\nframebuffer-con2-enable  | Data | `01000000`\nframebuffer-con2-index   | Data | `01`\nframebuffer-con2-busid   | Data | `05`\n\n\n\n# 没有macOS的映射\n\n映射你的显示器输出是相当简单的，然而是相当耗时的，因为你需要尝试每一个BusID值，直到你得到一个输出。\n\n在这个例子中，我们将再次使用0x3E9B0007帧缓冲器。\n\n[1] busId: 0x05, pipe: 9, type: 0x00000400, flags: 0x000003C7 - DP\n[2] busId: 0x04, pipe: 10, type: 0x00000400, flags: 0x000003C7 - DP\n[3] busId: 0x06, pipe: 8, type: 0x00000400, flags: 0x000003C7 - DP\n01050900 00040000 C7030000\n02040A00 00040000 C7030000\n03060800 00040000 C7030000\n\n\n首先，我们将试图通过条目1的BusIDs，希望能找到工作值。\n\n# 1. 在这里插上你的HDMI显示器\n\n# 2. 将端口1设置为HDMI连接器类型\n\n * 01xx0900 00080000 C7030000\n\n支持的连接器类型\n\nmacOS中支持的常见连接器类型\n\n<02 00 00 00>        LVDS 和 eDP      - 笔记本显示器\n<10 00 00 00>        VGA               - 在10.8和更新的版本中不被支持\n<00 04 00 00>        DisplayPort       - USB-C显示输出内部为DP\n<01 00 00 00>        DUMMY             - 在没有物理端口时使用\n<00 08 00 00>        HDMI\n<80 00 00 00>        S-Video\n<04 00 00 00>        DVI (双链路)\n<00 02 00 00>        DVI (单链路)\n\n\n提醒大家，Skylake和更新版本的VGA在内部实际上是DisplayPort，所以用这种连接器类型代替。\n\n# 3. 用busid=00禁用端口2和3\n\n * 02000A00 00040000 C7030000\n * 03000800 00040000 C7030000\n\n# 4. 如果前面的方法不奏效，就走一遍端口1的busids。在大多数平台上，最大的busid一般是0x06\n\n * 01010900 00080000 C7030000\n * 01020900 00080000 C7030000\n * 01030900 00080000 C7030000\n * 等\n\n如果还是没有输出，把端口1的母线设置为00，然后开始查看端口2的母线，依次类推。\n\n * port 1 = 01000900 00040000 C7030000\n * port 2 = 02xx0A00 00080000 C7030000\n * port 3 = 03000800 00040000 C7030000\n\n# 添加到你的config.plist中\n\n你现在要在 DeviceProperteies -> Add -> PciRoot(0x0)/Pci(0x2,0x0)中添加以下补丁:\n\nframebuffer-patch-enable | Data | `01000000`\nframebuffer-con0-enable  | Data | `01000000`\nframebuffer-con1-enable  | Data | `01000000`\nframebuffer-con2-enable  | Data | `01000000`\nframebuffer-con0-alldata | Data | port 1 (ie. `01010900 00080000 C7030000`)\nframebuffer-con1-alldata | Data | port 2 (ie. `02000A00 00040000 C7030000`)\nframebuffer-con2-alldata | Data | port 3 (ie. `03000800 00040000 C7030000`)\n\n\n请注意:\n\n * 端口1将被标记为con0\n * 端口1的BusID被设置为`01'\n * 端口2和3的BusID被设置为`00'，禁用它们\n\n完成后，你应该得到类似的东西:\n\n\n\n如前所述，如果这个组合不起作用，就增加端口1的BusID，如果还不起作用，就禁用端口1的BusID，然后尝试端口2，以此类推。",normalizedContent:"# 补丁总线id\n\n本节主要与那些无论连接器类型或smbios补丁都无法使用某些显示输出的人有关，因为苹果对输出总线id进行了硬编码，与你的硬件不匹配。为了解决这个问题，我们将手动修补这些总线id以支持我们的硬件。\n\n这一页会比较技术性，因为我们已经假定你已经读完了前面的几页，并且对whatevergreen有了一定的了解。\n\n * 修补显示类型\n * 对macos的vram要求进行修补\n\n\n# 解析帧缓冲区\n\n首先，让我们假设我们使用的是一块带有uhd 630的z390主板。这个系统在macos中只使用igpu，在使用某些显示输出时有问题，并且使用了0x3e9b0007帧缓冲器。\n\n当我们从whatevergreen的手册上看这个帧缓冲器时，我们看到以下情况：\n\nid: 3e9b0007, stolen: 57 mb, fbmem: 0 bytes, vram: 1536 mb, flags: 0x00801302\ntotal stolen: 58 mb, total cursor: 1 mb (1572864 bytes), max stolen: 172 mb, max overall: 173 mb (181940224 bytes)\ngpu name: intel uhd graphics 630\nmodel name(s):\ncamelia: disabled\nmobile: 0, pipecount: 3, portcount: 3, fbmemorycount: 3\n[1] busid: 0x05, pipe: 9, type: 0x00000400, flags: 0x000003c7 - dp\n[2] busid: 0x04, pipe: 10, type: 0x00000400, flags: 0x000003c7 - dp\n[3] busid: 0x06, pipe: 8, type: 0x00000400, flags: 0x000003c7 - dp\n01050900 00040000 c7030000\n02040a00 00040000 c7030000\n03060800 00040000 c7030000\n\n\n现在让我们把它解析为busid信息，因为这就是我们要修补的内容：\n\n[1] busid: 0x05, pipe: 9, type: 0x00000400, flags: 0x000003c7 - dp\n[2] busid: 0x04, pipe: 10, type: 0x00000400, flags: 0x000003c7 - dp\n[3] busid: 0x06, pipe: 8, type: 0x00000400, flags: 0x000003c7 - dp\n01050900 00040000 c7030000\n02040a00 00040000 c7030000\n03060800 00040000 c7030000\n\n\n在这里，我们看到这个帧缓冲器的特性中列出了3个总线id，让我们试着把它们分解，以便更容易理解。让我们来看看第1条：\n\n[1] busid: 0x05, pipe: 9, type: 0x00000400, flags: 0x000003c7 - dp\n01050900 00040000 c7030000\n\n\nbit        name             value\nbit 1      port             01\nbit 2      bus id           05\nbit 3-4    pipe number      0900\nbit 5-8    connector type   00040000\nbit 9-12   flags            c7030000\n\n需要记住的事情。\n\n * busid是一个唯一的值，不能被多个条目使用\n * 连接器类型的值与连接器类型修补页中讨论的相同。\n\n\n# 映射视频端口\n\n这里我们有两个部分。\n\n * macos内的映射\n   * 你可以启动macos并使用至少一个显示器。\n * 不使用macos的映射\n   * 在所有显示器上黑屏\n\n\n# 在macos中的映射\n\n在macos中映射视频是相当容易的，因为我们可以假设我们的一个端口在帧缓冲器中被正确映射。\n\n在这个例子中，我们将解释常见的hdmi-hotplug fix for kaby lake users。首先，让我们看一下0x591b0000帧缓冲区：\n\nid: 591b0000, stolen: 38 mb, fbmem: 21 mb, vram: 1536 mb, flags: 0x0000130b\ntotal stolen: 39 mb, total cursor: 1 mb (1572864 bytes), max stolen: 136 mb, max overall: 137 mb (144191488 bytes)\nmodel name: intel hd graphics kbl crb\ncamellia: camelliadisabled (0), freq: 1388 hz, freqmax: 1388 hz\nmobile: 1, pipecount: 3, portcount: 3, fbmemorycount: 3\n[0] busid: 0x00, pipe: 8, type: 0x00000002, flags: 0x00000098 - connectorlvds\n[2] busid: 0x04, pipe: 10, type: 0x00000800, flags: 0x00000187 - connectorhdmi\n[3] busid: 0x06, pipe: 10, type: 0x00000400, flags: 0x00000187 - connectordp\n00000800 02000000 98000000\n02040a00 00080000 87010000\n03060a00 00040000 87010000\n\n\n在这里，我们看到第2条是hdmi端口，但是在真正的kaby lake笔记本电脑上，热插拔导致机器内核崩溃的情况非常普遍。这是由于总线id和端口与硬件不完全一致造成的。\n\n为了解决这个问题，我们要把它打成更合适的东西（即把0204改为 0105，这些都是经过测试可以正常工作的）。\n\n有2种方法来修补。\n\n * 替换整个条目\n * 替换条目的部分内容\n\n# 替换整个条目\n\n要替换整个条目，我们首先要找到我们的条目，并确保它被正确枚举。这是因为apple的条目从0开始，并依次递增。\n\n * con0\n * con1\n * con2\n\n因此，由于条目2是列表中的第二个，我们要使用con1。\n\n * framebuffer-con2-enable\n\n接下来让我们打补丁，我们知道端口需要打成01，busid改成05:\n\n * 01050a00 00080000 87010000\n\n最后，我们得到了以下补丁。\n\nframebuffer-patch-enable | data | `01000000`\nframebuffer-con2-enable  | data | `01000000`\nframebuffer-con2-alldata | data | `01050a00 00080000 87010000`\n\n\n# 替换条目的各个部分\n\n要替换条目的某些部分，我们首先要找到我们的条目，并确保它被正确列举出来。这是因为苹果公司的条目从0开始，然后依次递增。\n\n * con0\n * con1\n * con2\n\n因此，由于条目2是列表中的第二个，我们要使用con1。\n\n * framebuffer-con1-enable。\n\n接下来让我们打补丁，我们知道端口需要打成01，busid改成05。\n\n * framebuffer-con2-index = 01\n * framebuffer-con2-busid = 05\n\n最后，我们得到了这些补丁:\n\nframebuffer-patch-enable | data | `01000000`\nframebuffer-con2-enable  | data | `01000000`\nframebuffer-con2-index   | data | `01`\nframebuffer-con2-busid   | data | `05`\n\n\n\n# 没有macos的映射\n\n映射你的显示器输出是相当简单的，然而是相当耗时的，因为你需要尝试每一个busid值，直到你得到一个输出。\n\n在这个例子中，我们将再次使用0x3e9b0007帧缓冲器。\n\n[1] busid: 0x05, pipe: 9, type: 0x00000400, flags: 0x000003c7 - dp\n[2] busid: 0x04, pipe: 10, type: 0x00000400, flags: 0x000003c7 - dp\n[3] busid: 0x06, pipe: 8, type: 0x00000400, flags: 0x000003c7 - dp\n01050900 00040000 c7030000\n02040a00 00040000 c7030000\n03060800 00040000 c7030000\n\n\n首先，我们将试图通过条目1的busids，希望能找到工作值。\n\n# 1. 在这里插上你的hdmi显示器\n\n# 2. 将端口1设置为hdmi连接器类型\n\n * 01xx0900 00080000 c7030000\n\n支持的连接器类型\n\nmacos中支持的常见连接器类型\n\n<02 00 00 00>        lvds 和 edp      - 笔记本显示器\n<10 00 00 00>        vga               - 在10.8和更新的版本中不被支持\n<00 04 00 00>        displayport       - usb-c显示输出内部为dp\n<01 00 00 00>        dummy             - 在没有物理端口时使用\n<00 08 00 00>        hdmi\n<80 00 00 00>        s-video\n<04 00 00 00>        dvi (双链路)\n<00 02 00 00>        dvi (单链路)\n\n\n提醒大家，skylake和更新版本的vga在内部实际上是displayport，所以用这种连接器类型代替。\n\n# 3. 用busid=00禁用端口2和3\n\n * 02000a00 00040000 c7030000\n * 03000800 00040000 c7030000\n\n# 4. 如果前面的方法不奏效，就走一遍端口1的busids。在大多数平台上，最大的busid一般是0x06\n\n * 01010900 00080000 c7030000\n * 01020900 00080000 c7030000\n * 01030900 00080000 c7030000\n * 等\n\n如果还是没有输出，把端口1的母线设置为00，然后开始查看端口2的母线，依次类推。\n\n * port 1 = 01000900 00040000 c7030000\n * port 2 = 02xx0a00 00080000 c7030000\n * port 3 = 03000800 00040000 c7030000\n\n# 添加到你的config.plist中\n\n你现在要在 deviceproperteies -> add -> pciroot(0x0)/pci(0x2,0x0)中添加以下补丁:\n\nframebuffer-patch-enable | data | `01000000`\nframebuffer-con0-enable  | data | `01000000`\nframebuffer-con1-enable  | data | `01000000`\nframebuffer-con2-enable  | data | `01000000`\nframebuffer-con0-alldata | data | port 1 (ie. `01010900 00080000 c7030000`)\nframebuffer-con1-alldata | data | port 2 (ie. `02000a00 00040000 c7030000`)\nframebuffer-con2-alldata | data | port 3 (ie. `03000800 00040000 c7030000`)\n\n\n请注意:\n\n * 端口1将被标记为con0\n * 端口1的busid被设置为`01'\n * 端口2和3的busid被设置为`00'，禁用它们\n\n完成后，你应该得到类似的东西:\n\n\n\n如前所述，如果这个组合不起作用，就增加端口1的busid，如果还不起作用，就禁用端口1的busid，然后尝试端口2，以此类推。",charsets:{cjk:!0}},{title:"修补连接器类型",frontmatter:{},regularPath:"/gpu-patching/intel-patching/connector.html",relativePath:"gpu-patching/intel-patching/connector.md",key:"v-00d46393",path:"/gpu-patching/intel-patching/connector.html",lastUpdated:"2/14/2023, 5:12:00 PM",lastUpdatedTimestamp:167639472e4,headersStr:null,content:"# 修补连接器类型\n\n * 图片和信息基于CorpNewt's Vanilla Guide\n\n本节主要与那些在显示器（通常是HDMI端口）上出现黑屏或不正确颜色输出的用户有关。这是由于苹果公司在你的硬件上强制显示类型。为了解决这个问题，我们将修补苹果的连接器类型，以正确尊重我们的硬件。\n\n在这个例子中，让我们来看看一个连接了HDMI显示器的UHD 630系统。这台机器已经被正确设置，但是在HDMI显示器上有一个粉红色/紫色的色调。\n\n获得一份IOReg的副本，搜索 iGPU条目。\n\n\n\n接下来，清除该条目，这样我们就可以看到iGPU设备。\n\n\n\n正如我们在上面的截图中所看到的，我们有几个帧缓冲器的条目被列出。这些都是存在于framebuffer特型中的显示特型，并且都有自己的设置。\n\n对我们来说，我们关心的是那些有display0子项的条目，因为这就是驱动物理显示器的东西。在这个例子中，我们可以看到它是AppleIntelFramebuffer@1。当我们选择它时，你会看到在左边的窗格中，它的属性 connector-type的值是<00 04 00 00>。而当我们看下面的列表时：\n\n<02 00 00 00>        LVDS 和 eDP      - 笔记本电脑显示器\n<10 00 00 00>        VGA               - 在10.8和更新的版本中不被支持\n<00 04 00 00>        DisplayPort       - USB-C显示输出内部为DP\n<01 00 00 00>        DUMMY             - 在没有物理端口时使用\n<00 08 00 00>        HDMI\n<80 00 00 00>        S-Video\n<04 00 00 00>        DVI (双链路)\n<00 02 00 00>        DVI (单链路)\n\n\n * 注意：Skylake和更新版本的VGA在内部是DisplayPorts，所以被macOS支持。对于这些系统，请使用DisplayPort接口。\n\n仔细观察，我们发现HDMI端口实际上被列为DisplayPort。这就是WhateverGreen的修补机制发挥作用的地方。\n\n由于错误的端口位于AppleIntelFramebuffer@1，这就是端口1。接下来，我们要为con1启用WhateverGreen的修补机制，然后将连接器类型设置为HDMI。要做到这一点，我们在DeviceProperties -> Add -> PciRoot(0x0)/Pci(0x2,0x0)下设置以下属性。\n\n * framebuffer-patch-enable = 01000000\n   * 启用WhateverGreen的补丁机制\n * framebuffer-conX-enable = 01000000\n   * 启用WhateverGreen在conX上的补丁\n * framebuffer-conX-type = 00080000\n   * 设置端口为HDMI(<00 08 00 00>)\n\n注意：记得将两个补丁中的conX替换为 con1，以反映我们想要固定的端口，然后按上面列出的值设置。\n\n",normalizedContent:"# 修补连接器类型\n\n * 图片和信息基于corpnewt's vanilla guide\n\n本节主要与那些在显示器（通常是hdmi端口）上出现黑屏或不正确颜色输出的用户有关。这是由于苹果公司在你的硬件上强制显示类型。为了解决这个问题，我们将修补苹果的连接器类型，以正确尊重我们的硬件。\n\n在这个例子中，让我们来看看一个连接了hdmi显示器的uhd 630系统。这台机器已经被正确设置，但是在hdmi显示器上有一个粉红色/紫色的色调。\n\n获得一份ioreg的副本，搜索 igpu条目。\n\n\n\n接下来，清除该条目，这样我们就可以看到igpu设备。\n\n\n\n正如我们在上面的截图中所看到的，我们有几个帧缓冲器的条目被列出。这些都是存在于framebuffer特型中的显示特型，并且都有自己的设置。\n\n对我们来说，我们关心的是那些有display0子项的条目，因为这就是驱动物理显示器的东西。在这个例子中，我们可以看到它是appleintelframebuffer@1。当我们选择它时，你会看到在左边的窗格中，它的属性 connector-type的值是<00 04 00 00>。而当我们看下面的列表时：\n\n<02 00 00 00>        lvds 和 edp      - 笔记本电脑显示器\n<10 00 00 00>        vga               - 在10.8和更新的版本中不被支持\n<00 04 00 00>        displayport       - usb-c显示输出内部为dp\n<01 00 00 00>        dummy             - 在没有物理端口时使用\n<00 08 00 00>        hdmi\n<80 00 00 00>        s-video\n<04 00 00 00>        dvi (双链路)\n<00 02 00 00>        dvi (单链路)\n\n\n * 注意：skylake和更新版本的vga在内部是displayports，所以被macos支持。对于这些系统，请使用displayport接口。\n\n仔细观察，我们发现hdmi端口实际上被列为displayport。这就是whatevergreen的修补机制发挥作用的地方。\n\n由于错误的端口位于appleintelframebuffer@1，这就是端口1。接下来，我们要为con1启用whatevergreen的修补机制，然后将连接器类型设置为hdmi。要做到这一点，我们在deviceproperties -> add -> pciroot(0x0)/pci(0x2,0x0)下设置以下属性。\n\n * framebuffer-patch-enable = 01000000\n   * 启用whatevergreen的补丁机制\n * framebuffer-conx-enable = 01000000\n   * 启用whatevergreen在conx上的补丁\n * framebuffer-conx-type = 00080000\n   * 设置端口为hdmi(<00 08 00 00>)\n\n注意：记得将两个补丁中的conx替换为 con1，以反映我们想要固定的端口，然后按上面列出的值设置。\n\n",charsets:{cjk:!0}},{title:"给VRAM打补丁",frontmatter:{},regularPath:"/gpu-patching/intel-patching/vram.html",relativePath:"gpu-patching/intel-patching/vram.md",key:"v-07350bfb",path:"/gpu-patching/intel-patching/vram.html",headers:[{level:2,title:"创建我们的补丁",slug:"创建我们的补丁",normalizedTitle:"创建我们的补丁",charIndex:1571},{level:2,title:"应用我们的补丁",slug:"应用我们的补丁",normalizedTitle:"应用我们的补丁",charIndex:2180}],lastUpdated:"2/14/2023, 5:12:00 PM",lastUpdatedTimestamp:167639472e4,headersStr:"创建我们的补丁 应用我们的补丁",content:"# 给VRAM打补丁\n\n本节主要与那些不能解锁BIOS以增加分配给iGPU的VRAM的用户有关，这将导致macOS的内核崩溃。为了解决这个问题，我们首先要确定帧缓冲器所需的最小VRAM量，然后打补丁使其要求更少。\n\n在这个例子中，让我们举一个Haswell Lake帧缓冲器，它通常用于桌面Haswell iGPU。0x0D220003(0300220D当十六进制互换时)\n\n现在让我们看看WhateverGreen的手册中的相应信息(注意你需要点击 \"Spoiler: Azul connectors\")\n\nID: 0D220003, STOLEN: 32 MB, FBMEM: 19 MB, VRAM: 1536 MB, Flags: 0x00000402\nTOTAL STOLEN: 52 MB, TOTAL CURSOR: 1 MB (1572864 bytes), MAX STOLEN: 116 MB, MAX OVERALL: 117 MB (123219968 bytes)\nCamellia: CamelliaDisabled (0), Freq: 5273 Hz, FreqMax: 5273 Hz\nMobile: 0, PipeCount: 3, PortCount: 3, FBMemoryCount: 3\n[1] busId: 0x05, pipe: 9, type: 0x00000400, flags: 0x00000087 - ConnectorDP\n[2] busId: 0x04, pipe: 10, type: 0x00000400, flags: 0x00000087 - ConnectorDP\n[3] busId: 0x06, pipe: 8, type: 0x00000400, flags: 0x00000011 - ConnectorDP\n01050900 00040000 87000000\n02040A00 00040000 87000000\n03060800 00040000 11000000\n\n\n这里重要的是前两行。\n\nID: 0D220003, STOLEN: 32 MB, FBMEM: 19 MB, VRAM: 1536 MB, Flags: 0x00000402\nTOTAL STOLEN: 52 MB, TOTAL CURSOR: 1 MB (1572864 bytes), MAX STOLEN: 116 MB, MAX OVERALL: 117 MB (123219968 bytes)\n\n\n这里是我们关心的主要条目。\n\nENTRY          VALUE   COMMENT\nSTOLEN         32MB    保留给iGPU的内存\nFBMEM          19MB    为帧缓冲器保留的内存\nTOTAL CURSOR   1 MB    为游标保留的内存\nTOTAL STOLEN   52 MB   以上的组合\n\n例如，你的主板只为iGPU分配了32MB的内存，这对于帧缓冲器所期望的来说太少了，所以当它试图写入一个不存在的内存区域时，很可能会出现内核崩溃。\n\n这就是WhateverGreen的补丁功能的作用，在这里我们可以通过以下属性设置帧缓冲器所期望的iGPU内存的确切数量。\n\nVALUE                      COMMENT\nframebuffer-patch-enable   这启用了WhateverGreen的补丁功能\nframebuffer-stolenmem      这设置了STOLEN条目所使用的值\nframebuffer-fbmem          这设置了FBMEM项使用的值\n\n\n# 创建我们的补丁\n\n因此，为了降低这个VRAM要求，我们要把STOLEN设置为19MB，FBMEM设置为9MB。这将使我们低于32MB的限制。\n\n要做到这一点，我们运行以下命令来覆盖9MB。\n\n# 将9MB的兆字节转换成字节数\necho '9 * 1024 * 1024' | bc\n 9437184\n\n# 从十进制转换为十六进制\necho 'obase=16; ibase=10; 9437184' | bc\n 900000\n\n# 十六进制交换，以便能够正确注入\n# 即成对地交换\n900000 -> 90 00 00 -> 00 00 90\n\n# 将数值填充到4个字节，最后是00\n00 00 90 00\n\n\n当我们对这两个值都这样做时，我们会得到:\n\n * 19MB = 00 00 30 01\n * 9MB = 00 00 90 00\n\n当我们把它打入我们的WhateverGreen属性时。\n\nKEY                        TYPE   VALUE\nframebuffer-patch-enable   Data   01000000\nframebuffer-stolenmem      Data   00003001\nframebuffer-fbmem          Data   00009000\n\n * 对于patch-enable，01000000只是指被启用。\n\n\n# 应用我们的补丁\n\n现在我们打好了补丁，进入你的config.plist，然后在 DeviceProperties -> Add -> PciRoot(0x0)/Pci(0x2,0x0)下，添加属性。\n\n",normalizedContent:"# 给vram打补丁\n\n本节主要与那些不能解锁bios以增加分配给igpu的vram的用户有关，这将导致macos的内核崩溃。为了解决这个问题，我们首先要确定帧缓冲器所需的最小vram量，然后打补丁使其要求更少。\n\n在这个例子中，让我们举一个haswell lake帧缓冲器，它通常用于桌面haswell igpu。0x0d220003(0300220d当十六进制互换时)\n\n现在让我们看看whatevergreen的手册中的相应信息(注意你需要点击 \"spoiler: azul connectors\")\n\nid: 0d220003, stolen: 32 mb, fbmem: 19 mb, vram: 1536 mb, flags: 0x00000402\ntotal stolen: 52 mb, total cursor: 1 mb (1572864 bytes), max stolen: 116 mb, max overall: 117 mb (123219968 bytes)\ncamellia: camelliadisabled (0), freq: 5273 hz, freqmax: 5273 hz\nmobile: 0, pipecount: 3, portcount: 3, fbmemorycount: 3\n[1] busid: 0x05, pipe: 9, type: 0x00000400, flags: 0x00000087 - connectordp\n[2] busid: 0x04, pipe: 10, type: 0x00000400, flags: 0x00000087 - connectordp\n[3] busid: 0x06, pipe: 8, type: 0x00000400, flags: 0x00000011 - connectordp\n01050900 00040000 87000000\n02040a00 00040000 87000000\n03060800 00040000 11000000\n\n\n这里重要的是前两行。\n\nid: 0d220003, stolen: 32 mb, fbmem: 19 mb, vram: 1536 mb, flags: 0x00000402\ntotal stolen: 52 mb, total cursor: 1 mb (1572864 bytes), max stolen: 116 mb, max overall: 117 mb (123219968 bytes)\n\n\n这里是我们关心的主要条目。\n\nentry          value   comment\nstolen         32mb    保留给igpu的内存\nfbmem          19mb    为帧缓冲器保留的内存\ntotal cursor   1 mb    为游标保留的内存\ntotal stolen   52 mb   以上的组合\n\n例如，你的主板只为igpu分配了32mb的内存，这对于帧缓冲器所期望的来说太少了，所以当它试图写入一个不存在的内存区域时，很可能会出现内核崩溃。\n\n这就是whatevergreen的补丁功能的作用，在这里我们可以通过以下属性设置帧缓冲器所期望的igpu内存的确切数量。\n\nvalue                      comment\nframebuffer-patch-enable   这启用了whatevergreen的补丁功能\nframebuffer-stolenmem      这设置了stolen条目所使用的值\nframebuffer-fbmem          这设置了fbmem项使用的值\n\n\n# 创建我们的补丁\n\n因此，为了降低这个vram要求，我们要把stolen设置为19mb，fbmem设置为9mb。这将使我们低于32mb的限制。\n\n要做到这一点，我们运行以下命令来覆盖9mb。\n\n# 将9mb的兆字节转换成字节数\necho '9 * 1024 * 1024' | bc\n 9437184\n\n# 从十进制转换为十六进制\necho 'obase=16; ibase=10; 9437184' | bc\n 900000\n\n# 十六进制交换，以便能够正确注入\n# 即成对地交换\n900000 -> 90 00 00 -> 00 00 90\n\n# 将数值填充到4个字节，最后是00\n00 00 90 00\n\n\n当我们对这两个值都这样做时，我们会得到:\n\n * 19mb = 00 00 30 01\n * 9mb = 00 00 90 00\n\n当我们把它打入我们的whatevergreen属性时。\n\nkey                        type   value\nframebuffer-patch-enable   data   01000000\nframebuffer-stolenmem      data   00003001\nframebuffer-fbmem          data   00009000\n\n * 对于patch-enable，01000000只是指被启用。\n\n\n# 应用我们的补丁\n\n现在我们打好了补丁，进入你的config.plist，然后在 deviceproperties -> add -> pciroot(0x0)/pci(0x2,0x0)下，添加属性。\n\n",charsets:{cjk:!0}},{title:"传统的英特尔设置",frontmatter:{},regularPath:"/gpu-patching/legacy-intel/",relativePath:"gpu-patching/legacy-intel/README.md",key:"v-00ebb4fa",path:"/gpu-patching/legacy-intel/",headers:[{level:2,title:"前提条件",slug:"前提条件",normalizedTitle:"前提条件",charIndex:273},{level:2,title:"GMA 950设置",slug:"gma-950设置",normalizedTitle:"gma 950设置",charIndex:526},{level:3,title:"属性注入",slug:"属性注入",normalizedTitle:"属性注入",charIndex:1626},{level:2,title:"GMA X3100 设置",slug:"gma-x3100-设置",normalizedTitle:"gma x3100 设置",charIndex:3710},{level:3,title:"属性注入",slug:"属性注入-2",normalizedTitle:"属性注入",charIndex:1626},{level:2,title:"故障排除",slug:"故障排除",normalizedTitle:"故障排除",charIndex:595},{level:3,title:"戴尔笔记本电脑",slug:"戴尔笔记本电脑",normalizedTitle:"戴尔笔记本电脑",charIndex:6447},{level:3,title:"30秒后内核崩溃",slug:"_30秒后内核崩溃",normalizedTitle:"30秒后内核崩溃",charIndex:6967}],lastUpdated:"2/14/2023, 5:12:00 PM",lastUpdatedTimestamp:167639472e4,headersStr:"前提条件 GMA 950设置 属性注入 GMA X3100 设置 属性注入 故障排除 戴尔笔记本电脑 30秒后内核崩溃",content:'# 传统的英特尔设置\n\n涵盖了对以下GPU型号的支持。\n\n * GMA 900 (10.4和10.5)\n   * 10.6和10.7中的部分支持，但加速问题很常见\n * GMA 950(10.4-10.7)\n   * GMA 3150的可以被欺骗支持，然而缺少适当的加速功能\n * GMA X3100(10.5-10.7)\n   * 注意只有移动型号(即965 Express芯片组家族)\n\n请注意，这个页面更像是一个信息转储，我们不会对设置进行太多细节，尽管我们计划为它扩展这个页面。信息是基于Clover\'s InjectIntel\n\n\n# 前提条件\n\n不幸的是，对GMA的支持在PC上要复杂一些，正因为如此，我们需要强制使用32位的内核空间，因为64位的GMA驱动以奇怪的GPU损坏和睡眠问题而闻名。要做到这一点。\n\n * 确保你所有的内核都是32位或FAT的\n   * 在kext的二进制文件上运行lipo -archs来验证\n   * 普通的kexts存放在这里Legacy-Kexts\n * 确保你启动的是一个32位的内核\n   * 设置 Keenel->Scheme->KernelArch为i386\n\n现在我们可以开始设置了:\n\n * GMA 950设置\n   * 支持GMA 900、950和3150\n * GMA X3100设置 *只支持移动式GMA X3100\n * 故障排除\n   * 戴尔笔记本\n   * Kernel Panic after 30 seconds\n\n\n# GMA 950设置\n\n*支持的操作系统：10.4-10.7\n\n本节主要与GMA 900和950用户有关，并对GMA 3150系列提供部分支持。请注意，GMA 900只在10.4和10.5中得到适当支持。\n\n在AppleIntelGMA950.kext的Info.plist中，支持以下设备ID：\n\n# 从OS X 10.7.0提取的数值\n0x2582 - GMA 900 - Grantsdale - 945GM/GMS/940GML\n0x2592 - GMA 900 - Alviso     - 945G\n0x2772 - GMA 950 - Lakeport   - 915GM/GMS/910GML\n0x27A2 - GMA 950 - Calistoga  - 82915G/GV/910GL\n\n\n如果你的iGPU是来自上述家族之一，但设备ID不存在，你可以轻松地添加一个假的设备ID。\n\n# GMA 950(Calistoga) 假 ID\nconfig.plist:\n|-DeviceProperties\n |- Add\n  |- PciRoot(0x0)/Pci(0x2,0x0)\n   |- device-id | Data | A2270000\n\n\n关于支持的GPU系列的完整列表，见下文：\n\nGMA设备系列\n\n以下内容来自Clover的GMA.c:\n\n# Grantsdale\n0x2582 - GMA 900 - 945GM/GMS/940GML\n0x258A - GMA 900 - E7221\n0x2782 - GMA 900 - 82915G\n\n# Alviso\n0x2592 - GMA 900 - 915GM/GMS/910GML\n0x2792 - GMA 900 - 915GM/GMS/910GML\n\n# Lakeport\n0x2772 - GMA 950 - 915GM/GMS/910GML\n0x2776 - GMA 950 - 915GM/GMS/910GML\n\n# Calistoga\n0x27A2 - GMA 950 - 82915G/GV/910GL\n0x27A6 - GMA 950 - 945GM/GMS/GME, 943/940GML\n0x27AE - GMA 950 - 945GSE\n\n\n\n# 属性注入\n\n为了确保OpenCore的适当加速，请进入你的config.plist，然后DeviceProperties -> Add。创建一个名为PciRoot(0x0)/Pci(0x2,0x0)的新子项，我们将添加我们需要的属性：\n\n台式机需要的属性很少，大多数时候不需要任何属性就可以启动。\n\n * 桌面：\n\n| model         | String | GMA 950  | // Mainly cosmetic\n| AAPL,HasPanel | Data   | 00000000 |\n\n\n * 笔记本:\n\n| model                     | String | GMA 950  | // Mainly cosmetic\n| AAPL,HasPanel             |  Data  | 01000000 |\n| AAPL01,BacklightIntensity |  Data  | 3F000008 |\n| AAPL01,BootDisplay        |  Data  | 01000000 |\n| AAPL01,DataJustify        |  Data  | 01000000 |\n| AAPL01,DualLink           |  Data  | 00       |\n\n* 如果你的内部显示器高于1366x768，将AAPL01,DualLink设置为01。\n\n\n关于Clover注入的内容的完整列表，请看下面：\n\nClover的InjectIntel属性\n\n下面的属性是Clover将为GMA 900/950系列iGPU注入的内容：\n\n| built-in                  | Data | 01       |\n| AAPL,HasPanel             | Data | 01000000 |\n| AAPL01,BacklightIntensity | Data | 3F000008 |\n| AAPL01,BootDisplay        | Data | 01000000 |\n| AAPL01,DataJustify        | Data | 01000000 |\n| AAPL01,Dither             | Data | 00000000 |\n| AAPL01,Interlace          | Data | 00000000 |\n| AAPL01,Inverter           | Data | 00000000 |\n| AAPL01,InverterCurrent    | Data | 00000000 |\n| AAPL01,LinkFormat         | Data | 00000000 |\n| AAPL01,LinkType           | Data | 00000000 |\n| AAPL01,Pipe               | Data | 01000000 |\n| AAPL01,Refresh            | Data | 3B000000 |\n| AAPL01,Stretch            | Data | 00000000 |\n| AAPL01,T1                 | Data | 00000000 |\n| AAPL01,T2                 | Data | 01000000 |\n| AAPL01,T3                 | Data | C8000000 |\n| AAPL01,T4                 | Data | C8010000 |\n| AAPL01,T5                 | Data | 01000000 |\n| AAPL01,T6                 | Data | 00000000 |\n| AAPL01,T7                 | Data | 90100000 |\n\n\n对于GMA 3150用户，你也要添加这个补丁：\n\nGMA 3150 补丁\n\n在Kernel -> Patch下，添加以下内容：\n\nComment    = GMA 3150 Cursor corruption fix\nEnabled    = True\nIdentifier = com.apple.driver.AppleIntelIntegratedFramebuffer\nFind       = 8b550883bab0000000017e36890424e832bbffff\nReplace    = b800000002909090909090909090eb0400000000\nMaxKernel  = 11.99.99\nMinKernel  = 8.00.00\n\n\n来源: GMA.c\n\n\n# GMA X3100 设置\n\n * 支持的操作系统：10.5-10.7\n\n在AppleIntelGMAX3100.kext的Info.plist中，支持以下设备ID：\n\n# 取自OS X 10.7.0的数值\n0x2a02 - GMA X3100 - Crestline - GM965/GL960\n\n\n如果你的iGPU是Crestline系列的，但是设备ID不存在，你可以很容易地添加一个假的设备ID：\n\n# GMA X3100(Crestline) 假 ID\nconfig.plist:\n|-DeviceProperties\n |- Add\n  |- PciRoot(0x0)/Pci(0x2,0x0)\n   |- device-id | Data | 022A0000\n\n\n关于支持的GPU系列的完整列表，见下文：\n\nGMA设备系列\n\n以下内容来自Clover的GMA.c:\n\n# Calistoga\n0x2A02 - GMA X3100 - GM965/GL960\n0x2A03 - GMA X3100 - GM965/GL960\n0x2A12 - GMA X3100 - GME965/GLE960\n0x2A13 - GMA X3100 - GME965/GLE960\n\n\n\n# 属性注入\n\n为了确保OpenCore的适当加速，请进入你的config.plist，然后DeviceProperties -> Add。创建一个名为PciRoot(0x0)/Pci(0x2,0x0)的新子项，我们将添加我们需要的属性。\n\nX3100需要的属性非常少，大多数时候不需要任何属性就可以启动。\n\n| model                     | String | GMA X3100 | // Mainly cosmetic\n| AAPL,HasPanel             |  Data  | 01000000  |\n| AAPL,SelfRefreshSupported |  Data  | 01000000  | // Optional\n| AAPL,aux-power-connected  |  Data  | 01000000  | // Optional\n| AAPL,backlight-control    |  Data  | 01000008  | // Optional\n| AAPL01,BacklightIntensity |  Data  | 38000008  |\n| AAPL01,BootDisplay        |  Data  | 01000000  |\n| AAPL01,DataJustify        |  Data  | 01000000  |\n| AAPL01,DualLink           |  Data  | 00        |\n\n* 如果你的内部显示器高于1366x768，将AAPL01,DualLink设置为01。\n\n\n关于Clover注入的内容的完整列表，请看下面:\n\nClover的InjectIntel属性\n\n下面的属性是Clover将为GMA 900/950系列iGPU注入的内容：\n\n| built-in                       | Data | 01       |\n| AAPL,HasPanel                  | Data | 01000000 |\n| AAPL,SelfRefreshSupported      | Data | 01000000 |\n| AAPL,aux-power-connected       | Data | 01000000 |\n| AAPL,backlight-control         | Data | 01000008 |\n| AAPL00,blackscreen-preferences | Data | 00000008 |\n| AAPL01,BootDisplay             | Data | 01000000 |\n| AAPL01,BacklightIntensity      | Data | 38000008 |\n| AAPL01,blackscreen-preferences | Data | 00000000 |\n| AAPL01,DataJustify             | Data | 01000000 |\n| AAPL01,Dither                  | Data | 00000000 |\n| AAPL01,Interlace               | Data | 00000000 |\n| AAPL01,Inverter                | Data | 00000000 |\n| AAPL01,InverterCurrent         | Data | 08520000 |\n| AAPL01,LinkFormat              | Data | 00000000 |\n| AAPL01,LinkType                | Data | 00000000 |\n| AAPL01,Pipe                    | Data | 01000000 |\n| AAPL01,Refresh                 | Data | 3D000000 |\n| AAPL01,Stretch                 | Data | 00000000 |\n| AAPL01,T1                      | Data | 00000000 |\n| AAPL01,T2                      | Data | 01000000 |\n| AAPL01,T3                      | Data | C8000000 |\n| AAPL01,T4                      | Data | C8010000 |\n| AAPL01,T5                      | Data | 01000000 |\n| AAPL01,T6                      | Data | 00000000 |\n| AAPL01,T7                      | Data | 90100000 |\n\n\n\n# 故障排除\n\n\n# 戴尔笔记本电脑\n\n使用GMA iGPU的戴尔笔记本电脑的一个恼人的问题是，它们在启动时通常会出现黑屏。这是由于ACPI中的DVI设备造成的，所以我们需要给它打上补丁，以便在macOS中顺利运行。\n\n例如SSDT：\n\nDefinitionBlock ("", "SSDT", 2, "DRTNIA", "SsdtDvi", 0x00001000)\n{\n    External (_SB_.PCI0.SBRG.GFX0.DVI_, DeviceObj)\n\n    Scope (\\_SB.PCI0.SBRG.GFX0.DVI)\n    {\n        Method (_STA, 0, NotSerialized)  // _STA: Status\n        {\n            If (_OSI ("Darwin"))\n            {\n                Return (0)\n            }\n            Else\n            {\n                Return (0x0F)\n            }\n        }\n    }\n\n\n\n# 30秒后内核崩溃\n\n10.6及以前版本的另一个奇怪的问题是，PciRoot的_UID值必须为零，否则会发生内核崩溃。坏UID条目的例子：\n\nDevice (PCI0)  {\n Name (_HID, EisaId ("PNP0A08")) // Use PNP0A08 to find your PciRoot\n Name (_CID, EisaId ("PNP0A03"))\n Name (_ADR, One)\n Name (_UID, Zero)               // Needs to be patched to Zero\n',normalizedContent:'# 传统的英特尔设置\n\n涵盖了对以下gpu型号的支持。\n\n * gma 900 (10.4和10.5)\n   * 10.6和10.7中的部分支持，但加速问题很常见\n * gma 950(10.4-10.7)\n   * gma 3150的可以被欺骗支持，然而缺少适当的加速功能\n * gma x3100(10.5-10.7)\n   * 注意只有移动型号(即965 express芯片组家族)\n\n请注意，这个页面更像是一个信息转储，我们不会对设置进行太多细节，尽管我们计划为它扩展这个页面。信息是基于clover\'s injectintel\n\n\n# 前提条件\n\n不幸的是，对gma的支持在pc上要复杂一些，正因为如此，我们需要强制使用32位的内核空间，因为64位的gma驱动以奇怪的gpu损坏和睡眠问题而闻名。要做到这一点。\n\n * 确保你所有的内核都是32位或fat的\n   * 在kext的二进制文件上运行lipo -archs来验证\n   * 普通的kexts存放在这里legacy-kexts\n * 确保你启动的是一个32位的内核\n   * 设置 keenel->scheme->kernelarch为i386\n\n现在我们可以开始设置了:\n\n * gma 950设置\n   * 支持gma 900、950和3150\n * gma x3100设置 *只支持移动式gma x3100\n * 故障排除\n   * 戴尔笔记本\n   * kernel panic after 30 seconds\n\n\n# gma 950设置\n\n*支持的操作系统：10.4-10.7\n\n本节主要与gma 900和950用户有关，并对gma 3150系列提供部分支持。请注意，gma 900只在10.4和10.5中得到适当支持。\n\n在appleintelgma950.kext的info.plist中，支持以下设备id：\n\n# 从os x 10.7.0提取的数值\n0x2582 - gma 900 - grantsdale - 945gm/gms/940gml\n0x2592 - gma 900 - alviso     - 945g\n0x2772 - gma 950 - lakeport   - 915gm/gms/910gml\n0x27a2 - gma 950 - calistoga  - 82915g/gv/910gl\n\n\n如果你的igpu是来自上述家族之一，但设备id不存在，你可以轻松地添加一个假的设备id。\n\n# gma 950(calistoga) 假 id\nconfig.plist:\n|-deviceproperties\n |- add\n  |- pciroot(0x0)/pci(0x2,0x0)\n   |- device-id | data | a2270000\n\n\n关于支持的gpu系列的完整列表，见下文：\n\ngma设备系列\n\n以下内容来自clover的gma.c:\n\n# grantsdale\n0x2582 - gma 900 - 945gm/gms/940gml\n0x258a - gma 900 - e7221\n0x2782 - gma 900 - 82915g\n\n# alviso\n0x2592 - gma 900 - 915gm/gms/910gml\n0x2792 - gma 900 - 915gm/gms/910gml\n\n# lakeport\n0x2772 - gma 950 - 915gm/gms/910gml\n0x2776 - gma 950 - 915gm/gms/910gml\n\n# calistoga\n0x27a2 - gma 950 - 82915g/gv/910gl\n0x27a6 - gma 950 - 945gm/gms/gme, 943/940gml\n0x27ae - gma 950 - 945gse\n\n\n\n# 属性注入\n\n为了确保opencore的适当加速，请进入你的config.plist，然后deviceproperties -> add。创建一个名为pciroot(0x0)/pci(0x2,0x0)的新子项，我们将添加我们需要的属性：\n\n台式机需要的属性很少，大多数时候不需要任何属性就可以启动。\n\n * 桌面：\n\n| model         | string | gma 950  | // mainly cosmetic\n| aapl,haspanel | data   | 00000000 |\n\n\n * 笔记本:\n\n| model                     | string | gma 950  | // mainly cosmetic\n| aapl,haspanel             |  data  | 01000000 |\n| aapl01,backlightintensity |  data  | 3f000008 |\n| aapl01,bootdisplay        |  data  | 01000000 |\n| aapl01,datajustify        |  data  | 01000000 |\n| aapl01,duallink           |  data  | 00       |\n\n* 如果你的内部显示器高于1366x768，将aapl01,duallink设置为01。\n\n\n关于clover注入的内容的完整列表，请看下面：\n\nclover的injectintel属性\n\n下面的属性是clover将为gma 900/950系列igpu注入的内容：\n\n| built-in                  | data | 01       |\n| aapl,haspanel             | data | 01000000 |\n| aapl01,backlightintensity | data | 3f000008 |\n| aapl01,bootdisplay        | data | 01000000 |\n| aapl01,datajustify        | data | 01000000 |\n| aapl01,dither             | data | 00000000 |\n| aapl01,interlace          | data | 00000000 |\n| aapl01,inverter           | data | 00000000 |\n| aapl01,invertercurrent    | data | 00000000 |\n| aapl01,linkformat         | data | 00000000 |\n| aapl01,linktype           | data | 00000000 |\n| aapl01,pipe               | data | 01000000 |\n| aapl01,refresh            | data | 3b000000 |\n| aapl01,stretch            | data | 00000000 |\n| aapl01,t1                 | data | 00000000 |\n| aapl01,t2                 | data | 01000000 |\n| aapl01,t3                 | data | c8000000 |\n| aapl01,t4                 | data | c8010000 |\n| aapl01,t5                 | data | 01000000 |\n| aapl01,t6                 | data | 00000000 |\n| aapl01,t7                 | data | 90100000 |\n\n\n对于gma 3150用户，你也要添加这个补丁：\n\ngma 3150 补丁\n\n在kernel -> patch下，添加以下内容：\n\ncomment    = gma 3150 cursor corruption fix\nenabled    = true\nidentifier = com.apple.driver.appleintelintegratedframebuffer\nfind       = 8b550883bab0000000017e36890424e832bbffff\nreplace    = b800000002909090909090909090eb0400000000\nmaxkernel  = 11.99.99\nminkernel  = 8.00.00\n\n\n来源: gma.c\n\n\n# gma x3100 设置\n\n * 支持的操作系统：10.5-10.7\n\n在appleintelgmax3100.kext的info.plist中，支持以下设备id：\n\n# 取自os x 10.7.0的数值\n0x2a02 - gma x3100 - crestline - gm965/gl960\n\n\n如果你的igpu是crestline系列的，但是设备id不存在，你可以很容易地添加一个假的设备id：\n\n# gma x3100(crestline) 假 id\nconfig.plist:\n|-deviceproperties\n |- add\n  |- pciroot(0x0)/pci(0x2,0x0)\n   |- device-id | data | 022a0000\n\n\n关于支持的gpu系列的完整列表，见下文：\n\ngma设备系列\n\n以下内容来自clover的gma.c:\n\n# calistoga\n0x2a02 - gma x3100 - gm965/gl960\n0x2a03 - gma x3100 - gm965/gl960\n0x2a12 - gma x3100 - gme965/gle960\n0x2a13 - gma x3100 - gme965/gle960\n\n\n\n# 属性注入\n\n为了确保opencore的适当加速，请进入你的config.plist，然后deviceproperties -> add。创建一个名为pciroot(0x0)/pci(0x2,0x0)的新子项，我们将添加我们需要的属性。\n\nx3100需要的属性非常少，大多数时候不需要任何属性就可以启动。\n\n| model                     | string | gma x3100 | // mainly cosmetic\n| aapl,haspanel             |  data  | 01000000  |\n| aapl,selfrefreshsupported |  data  | 01000000  | // optional\n| aapl,aux-power-connected  |  data  | 01000000  | // optional\n| aapl,backlight-control    |  data  | 01000008  | // optional\n| aapl01,backlightintensity |  data  | 38000008  |\n| aapl01,bootdisplay        |  data  | 01000000  |\n| aapl01,datajustify        |  data  | 01000000  |\n| aapl01,duallink           |  data  | 00        |\n\n* 如果你的内部显示器高于1366x768，将aapl01,duallink设置为01。\n\n\n关于clover注入的内容的完整列表，请看下面:\n\nclover的injectintel属性\n\n下面的属性是clover将为gma 900/950系列igpu注入的内容：\n\n| built-in                       | data | 01       |\n| aapl,haspanel                  | data | 01000000 |\n| aapl,selfrefreshsupported      | data | 01000000 |\n| aapl,aux-power-connected       | data | 01000000 |\n| aapl,backlight-control         | data | 01000008 |\n| aapl00,blackscreen-preferences | data | 00000008 |\n| aapl01,bootdisplay             | data | 01000000 |\n| aapl01,backlightintensity      | data | 38000008 |\n| aapl01,blackscreen-preferences | data | 00000000 |\n| aapl01,datajustify             | data | 01000000 |\n| aapl01,dither                  | data | 00000000 |\n| aapl01,interlace               | data | 00000000 |\n| aapl01,inverter                | data | 00000000 |\n| aapl01,invertercurrent         | data | 08520000 |\n| aapl01,linkformat              | data | 00000000 |\n| aapl01,linktype                | data | 00000000 |\n| aapl01,pipe                    | data | 01000000 |\n| aapl01,refresh                 | data | 3d000000 |\n| aapl01,stretch                 | data | 00000000 |\n| aapl01,t1                      | data | 00000000 |\n| aapl01,t2                      | data | 01000000 |\n| aapl01,t3                      | data | c8000000 |\n| aapl01,t4                      | data | c8010000 |\n| aapl01,t5                      | data | 01000000 |\n| aapl01,t6                      | data | 00000000 |\n| aapl01,t7                      | data | 90100000 |\n\n\n\n# 故障排除\n\n\n# 戴尔笔记本电脑\n\n使用gma igpu的戴尔笔记本电脑的一个恼人的问题是，它们在启动时通常会出现黑屏。这是由于acpi中的dvi设备造成的，所以我们需要给它打上补丁，以便在macos中顺利运行。\n\n例如ssdt：\n\ndefinitionblock ("", "ssdt", 2, "drtnia", "ssdtdvi", 0x00001000)\n{\n    external (_sb_.pci0.sbrg.gfx0.dvi_, deviceobj)\n\n    scope (\\_sb.pci0.sbrg.gfx0.dvi)\n    {\n        method (_sta, 0, notserialized)  // _sta: status\n        {\n            if (_osi ("darwin"))\n            {\n                return (0)\n            }\n            else\n            {\n                return (0x0f)\n            }\n        }\n    }\n\n\n\n# 30秒后内核崩溃\n\n10.6及以前版本的另一个奇怪的问题是，pciroot的_uid值必须为零，否则会发生内核崩溃。坏uid条目的例子：\n\ndevice (pci0)  {\n name (_hid, eisaid ("pnp0a08")) // use pnp0a08 to find your pciroot\n name (_cid, eisaid ("pnp0a03"))\n name (_adr, one)\n name (_uid, zero)               // needs to be patched to zero\n',charsets:{cjk:!0}},{title:"Legacy Nvidia Patching",frontmatter:{},regularPath:"/gpu-patching/nvidia-patching/",relativePath:"gpu-patching/nvidia-patching/README.md",key:"v-7fa8f7d8",path:"/gpu-patching/nvidia-patching/",headers:[{level:3,title:"Finding the GPU pathing",slug:"finding-the-gpu-pathing",normalizedTitle:"finding the gpu pathing",charIndex:728},{level:3,title:"Building our DeviceProperties",slug:"building-our-deviceproperties",normalizedTitle:"building our deviceproperties",charIndex:1135},{level:3,title:"model",slug:"model",normalizedTitle:"model",charIndex:1372},{level:3,title:"VRAM,totalsize",slug:"vram-totalsize",normalizedTitle:"vram,totalsize",charIndex:1551},{level:3,title:"rom-revision",slug:"rom-revision",normalizedTitle:"rom-revision",charIndex:1630},{level:3,title:"NVCAP",slug:"nvcap",normalizedTitle:"nvcap",charIndex:1749},{level:3,title:"Cleaning up",slug:"cleaning-up",normalizedTitle:"cleaning up",charIndex:6885}],lastUpdated:"2/14/2023, 5:12:00 PM",lastUpdatedTimestamp:167639472e4,headersStr:"Finding the GPU pathing Building our DeviceProperties model VRAM,totalsize rom-revision NVCAP Cleaning up",content:"# Legacy Nvidia Patching\n\n * Please note this page is more of an info dump, we won't be going to too great of detail on setup though we plan to expand this page more for it.\n\nWith legacy Nvidia GPUs, macOS has difficulties enabling acceleration due to many missing properties. To work around this, we can inject properties into IOService for macOS to easily interpret.\n\nTo start off, we'll be assuming the following:\n\n * macOS has already been installed in some way\n   * We need macOS installed to determine certain properties\n * Your GPU is either Fermi or older\n   * Kepler and newer do not need Device Property injection\n * Lilu and WhateverGreen are loaded\n   * verify by running kextstat | grep -E \"Lilu|WhateverGreen\"\n\n\n# Finding the GPU pathing\n\nFirst lets grab gfxutil and run the following:\n\npath/to/gfxutil -f display\n\n\nThis should spit out something like the following:\n\n67:00.0 10DE:0A20 /PC02@0/BR2A@0/GFX0@0/ = PciRoot(0x2)/Pci(0x0,0x0)/Pci(0x0,0x0)\n\n\nWhat we care about is the PciRoot section, as this is where our GPU is located and where we'll be injecting our properties:\n\nPciRoot(0x2)/Pci(0x0,0x0)/Pci(0x0,0x0)\n\n\n\n# Building our DeviceProperties\n\nWith Nvidia GPUs, there's actually not too many properties required for setup. The main ones that are recommended are the following:\n\nPROPERTY         VALUE                                          COMMENT\nmodel            ex. GeForce GT 220                             GPU model name, cosmetic\ndevice_type      NVDA,Parent                                    Always set as NVDA,Parent\nVRAM,totalsize   ex. 0000004000000000                           Sets VRAM size\nrom-revision     Dortania                                       Property must exist, however the value can be anything\nNVCAP            ex. 0500000000000F00000000000000000F00000000   sets display properties used by macOS, more info below\n@0,compatible    NVDA,NVMac                                     Always set as NVDA,NVMac\n@0,device_type   display                                        Always set as display\n@0,name          NVDA,Display-A                                 Always set as NVDA,Display-A\n@1,compatible    NVDA,NVMac                                     Always set as NVDA,NVMac\n@1,device_type   display                                        Always set as display\n@1,name          NVDA,Display-B                                 Always set as NVDA,Display-B\n\nAnd to calculate the properties few properties:\n\n * model\n * VRAM,totalsize\n * rom-revision\n * NVCAP\n\n\n# model\n\nTechnically cosmetic, however macOS expects this entry so we'll provide it. The format is as follows:\n\nGeForce [Device Name]\n# Example\nGeForce GT 220\n\n\n\n# VRAM,totalsize\n\nAmount of VRAM present on your card, in hexadecimal.\n\nFor this example, lets convert 1024MB to hexadecimal:\n\n# Convert 1024MB Megabytes to Bytes\necho '1024 * 1024 * 1024' | bc\n 1073741824\n\n# Convert from decimal to hexadecimal\necho 'obase=16; ibase=10; 1073741824' | bc\n 40000000\n\n# Hexswap so it can be injected correctly\n# ie. swap in pairs\n40000000 -> 40 00 00 00 -> 00 00 00 40\n\n# Pad the value to 8 bytes with 00 at the end\n00 00 00 40 00 00 00 00\n\n# And you're done\nVRAM,totalsize = 0000004000000000\n\n\n\n# rom-revision\n\nSimply can be any value, however the property must exist as some GPUs fail to initialize without it(ex. GT 220's)\n\nrom-revision = Dortania\n\n\n\n# NVCAP\n\nThis is where the fun comes it, as we'll now need to calculate the NVCAP value. Thankfully for us, 1Revenger1 has created a tool to automate the process: NVCAP Calculator\n\nTo use this program, simply grab your VBIOS(TechPowerUp hosts most VBIOS) and run NVCAP-Calculator within your terminal.\n\nOnce its running, you should see the following:\n\n\n\nGive it your VBIOS and then press enter. Once it takes you to the main menu, select option 2 to take you to the NVCAP calculation page.\n\n\n\nHere you can see the connectors that NVCAP-Calculator was able to find. Each Display may represent multiple DCB Entries, such as DVI (normally represented as two entries) or duplicate DCB entries. The goal here is to assign each display to a head. Each head can only output to one display at a time. For example, if your using 2 DVI ports, each should be on their own head to have proper dual monitor support.\n\nNote that some displays may be assigned automatically. An LVDS display will be put on it's own head automatically, and TV displays will be put on the TV head automatically.\n\nTo start assigning displays, press 1. To assign a display to a head, you type the number of the display then the number of the head. For example, typing in 1 1 results in:\n\n\n\nYou can type in 1 1 again to remove the display from the head. Once you are done assigning displays, it should look something like this:\n\n\n\nOnce you are done setting up the displays, press q to return to the other NVCAP settings. You should set the rest of the NVCAP settings as follows:\n\nNVCAP VALUE                    DETAILS                                                EXAMPLE COMMAND\nVersion                        04 for 7 series and older, 05 for 8 series and newer   3 then 4\nComposite                      01 for S-Video, 00 otherwise                           4 to toggle\nScript based Power/Backlight   00 ony useful for genuine MacBook Pros                 3 to toggle\nField F (Unknown)              0F for 300 series and newer, otherwise 07              6 then 0x0f\n\nOnce done, enter in c to calculate the NVCAP value\n\n\n\nYou now have your NVCAP value!\n\nNVCAP: \n05000000 00000300 0c000000 0000000f 00000000\n\n\nFor those who are wanting a break down on how to calculate the NVCAP value:\n\nNVCAP Table\n\nInfo based off of WhateverGreen's NVCAP.bt file\n\nNVCAP BIT     NAME                           COMMENT\nByte 1        NVCAP Version                  04 for 7 series and older, 05 for 8 series and newer\nByte 2        Laptop with Lid                01 for true, 00 otherwise\nByte 3        Composite                      01 for S-Video, 00 otherwise\nByte 4        Backlight                      01 for Tesla V1 with Backlight, otherwise 00 for newer GPUs\n                                             regardless of screen type\nBytes 5+6     TVDCBMask                      00 00, relates to DCB entry 5\nBytes 7+8     Head0DCBMask                   00 00, see below\nBytes 9+10    Head1DCBMask                   00 00, see below\nBytes 11+12   Head2DCBMask                   00 00, non-applicable for Fermi and older\nBytes 13+14   Head3DCBMask                   00 00, non-applicable for Fermi and older\nByte 15       ScriptBasedPowerAndBacklight   00, only relevant for genuine MacBook Pros\nByte 16       Unknown                        0F for 300 series and newer, otherwise 07\nByte 17       EDID                           00\nByte 18       Reserved                       00\nByte 19       Reserved                       00\nByte 20       Reserved                       00\n\n\n# Cleaning up\n\nNow that we've gotten all our properties, we can now add em up and place them in our config.plist:\n\nPciRoot(0x2)/Pci(0x0,0x0)/Pci(0x0,0x0)\n\nmodel          | String | GeForce GT 220\ndevice_type    | String | NVDA,Parent\nVRAM,totalsize |  Data  | 0000004000000000\nrom-revision   | String | Dortania\nNVCAP          |  Data  | 05000000 00000300 0c000000 0000000f 00000000\n@0,compatible  | String | NVDA,NVMac\n@0,device_type | String | display\n@0,name        | String | NVDA,Display-A\n@1,compatible  | String | NVDA,NVMac\n@1,device_type | String | display\n@1,name        | String | NVDA,Display-B\n\n\nOpen your config.plist and head to DeviceProperties -> Add, next create a new child with the name of your GPU's path(ie the one with gfxutil). Then, finally add the properties as children to the PciRoot. You should end up with something similar:\n\n",normalizedContent:"# legacy nvidia patching\n\n * please note this page is more of an info dump, we won't be going to too great of detail on setup though we plan to expand this page more for it.\n\nwith legacy nvidia gpus, macos has difficulties enabling acceleration due to many missing properties. to work around this, we can inject properties into ioservice for macos to easily interpret.\n\nto start off, we'll be assuming the following:\n\n * macos has already been installed in some way\n   * we need macos installed to determine certain properties\n * your gpu is either fermi or older\n   * kepler and newer do not need device property injection\n * lilu and whatevergreen are loaded\n   * verify by running kextstat | grep -e \"lilu|whatevergreen\"\n\n\n# finding the gpu pathing\n\nfirst lets grab gfxutil and run the following:\n\npath/to/gfxutil -f display\n\n\nthis should spit out something like the following:\n\n67:00.0 10de:0a20 /pc02@0/br2a@0/gfx0@0/ = pciroot(0x2)/pci(0x0,0x0)/pci(0x0,0x0)\n\n\nwhat we care about is the pciroot section, as this is where our gpu is located and where we'll be injecting our properties:\n\npciroot(0x2)/pci(0x0,0x0)/pci(0x0,0x0)\n\n\n\n# building our deviceproperties\n\nwith nvidia gpus, there's actually not too many properties required for setup. the main ones that are recommended are the following:\n\nproperty         value                                          comment\nmodel            ex. geforce gt 220                             gpu model name, cosmetic\ndevice_type      nvda,parent                                    always set as nvda,parent\nvram,totalsize   ex. 0000004000000000                           sets vram size\nrom-revision     dortania                                       property must exist, however the value can be anything\nnvcap            ex. 0500000000000f00000000000000000f00000000   sets display properties used by macos, more info below\n@0,compatible    nvda,nvmac                                     always set as nvda,nvmac\n@0,device_type   display                                        always set as display\n@0,name          nvda,display-a                                 always set as nvda,display-a\n@1,compatible    nvda,nvmac                                     always set as nvda,nvmac\n@1,device_type   display                                        always set as display\n@1,name          nvda,display-b                                 always set as nvda,display-b\n\nand to calculate the properties few properties:\n\n * model\n * vram,totalsize\n * rom-revision\n * nvcap\n\n\n# model\n\ntechnically cosmetic, however macos expects this entry so we'll provide it. the format is as follows:\n\ngeforce [device name]\n# example\ngeforce gt 220\n\n\n\n# vram,totalsize\n\namount of vram present on your card, in hexadecimal.\n\nfor this example, lets convert 1024mb to hexadecimal:\n\n# convert 1024mb megabytes to bytes\necho '1024 * 1024 * 1024' | bc\n 1073741824\n\n# convert from decimal to hexadecimal\necho 'obase=16; ibase=10; 1073741824' | bc\n 40000000\n\n# hexswap so it can be injected correctly\n# ie. swap in pairs\n40000000 -> 40 00 00 00 -> 00 00 00 40\n\n# pad the value to 8 bytes with 00 at the end\n00 00 00 40 00 00 00 00\n\n# and you're done\nvram,totalsize = 0000004000000000\n\n\n\n# rom-revision\n\nsimply can be any value, however the property must exist as some gpus fail to initialize without it(ex. gt 220's)\n\nrom-revision = dortania\n\n\n\n# nvcap\n\nthis is where the fun comes it, as we'll now need to calculate the nvcap value. thankfully for us, 1revenger1 has created a tool to automate the process: nvcap calculator\n\nto use this program, simply grab your vbios(techpowerup hosts most vbios) and run nvcap-calculator within your terminal.\n\nonce its running, you should see the following:\n\n\n\ngive it your vbios and then press enter. once it takes you to the main menu, select option 2 to take you to the nvcap calculation page.\n\n\n\nhere you can see the connectors that nvcap-calculator was able to find. each display may represent multiple dcb entries, such as dvi (normally represented as two entries) or duplicate dcb entries. the goal here is to assign each display to a head. each head can only output to one display at a time. for example, if your using 2 dvi ports, each should be on their own head to have proper dual monitor support.\n\nnote that some displays may be assigned automatically. an lvds display will be put on it's own head automatically, and tv displays will be put on the tv head automatically.\n\nto start assigning displays, press 1. to assign a display to a head, you type the number of the display then the number of the head. for example, typing in 1 1 results in:\n\n\n\nyou can type in 1 1 again to remove the display from the head. once you are done assigning displays, it should look something like this:\n\n\n\nonce you are done setting up the displays, press q to return to the other nvcap settings. you should set the rest of the nvcap settings as follows:\n\nnvcap value                    details                                                example command\nversion                        04 for 7 series and older, 05 for 8 series and newer   3 then 4\ncomposite                      01 for s-video, 00 otherwise                           4 to toggle\nscript based power/backlight   00 ony useful for genuine macbook pros                 3 to toggle\nfield f (unknown)              0f for 300 series and newer, otherwise 07              6 then 0x0f\n\nonce done, enter in c to calculate the nvcap value\n\n\n\nyou now have your nvcap value!\n\nnvcap: \n05000000 00000300 0c000000 0000000f 00000000\n\n\nfor those who are wanting a break down on how to calculate the nvcap value:\n\nnvcap table\n\ninfo based off of whatevergreen's nvcap.bt file\n\nnvcap bit     name                           comment\nbyte 1        nvcap version                  04 for 7 series and older, 05 for 8 series and newer\nbyte 2        laptop with lid                01 for true, 00 otherwise\nbyte 3        composite                      01 for s-video, 00 otherwise\nbyte 4        backlight                      01 for tesla v1 with backlight, otherwise 00 for newer gpus\n                                             regardless of screen type\nbytes 5+6     tvdcbmask                      00 00, relates to dcb entry 5\nbytes 7+8     head0dcbmask                   00 00, see below\nbytes 9+10    head1dcbmask                   00 00, see below\nbytes 11+12   head2dcbmask                   00 00, non-applicable for fermi and older\nbytes 13+14   head3dcbmask                   00 00, non-applicable for fermi and older\nbyte 15       scriptbasedpowerandbacklight   00, only relevant for genuine macbook pros\nbyte 16       unknown                        0f for 300 series and newer, otherwise 07\nbyte 17       edid                           00\nbyte 18       reserved                       00\nbyte 19       reserved                       00\nbyte 20       reserved                       00\n\n\n# cleaning up\n\nnow that we've gotten all our properties, we can now add em up and place them in our config.plist:\n\npciroot(0x2)/pci(0x0,0x0)/pci(0x0,0x0)\n\nmodel          | string | geforce gt 220\ndevice_type    | string | nvda,parent\nvram,totalsize |  data  | 0000004000000000\nrom-revision   | string | dortania\nnvcap          |  data  | 05000000 00000300 0c000000 0000000f 00000000\n@0,compatible  | string | nvda,nvmac\n@0,device_type | string | display\n@0,name        | string | nvda,display-a\n@1,compatible  | string | nvda,nvmac\n@1,device_type | string | display\n@1,name        | string | nvda,display-b\n\n\nopen your config.plist and head to deviceproperties -> add, next create a new child with the name of your gpu's path(ie the one with gfxutil). then, finally add the properties as children to the pciroot. you should end up with something similar:\n\n",charsets:{cjk:!0}},{title:"电池状态",frontmatter:{},regularPath:"/laptop-specific/battery.html",relativePath:"laptop-specific/battery.md",key:"v-13d59a53",path:"/laptop-specific/battery.html",headers:[{level:2,title:"双电池",slug:"双电池",normalizedTitle:"双电池",charIndex:81},{level:2,title:"周期计数",slug:"周期计数",normalizedTitle:"周期计数",charIndex:552},{level:2,title:"电池信息补充",slug:"电池信息补充",normalizedTitle:"电池信息补充",charIndex:845},{level:2,title:"DSDT补丁",slug:"dsdt补丁",normalizedTitle:"dsdt补丁",charIndex:1097},{level:2,title:"电池热补丁",slug:"电池热补丁",normalizedTitle:"电池热补丁",charIndex:1360}],lastUpdated:"2/14/2023, 5:12:00 PM",lastUpdatedTimestamp:167639472e4,headersStr:"双电池 周期计数 电池信息补充 DSDT补丁 电池热补丁",content:'# 电池状态\n\n有了ECEnabler.kext，工作电池百分比不再需要ACPI补丁。如果您希望电池功能超过充电百分比(例如，循环计数，或温度/其他补充数据)或有双电池，您仍然需要创建ACPI补丁-请参阅下面的资源。\n\n * *如果电池状态即使使用ECEnabler也不能工作，请确保在OpenCore配置中启用了SMCBatteryManager VirtualSMC插件。\n\n * 某些设备，如Surface 3、Surface Pro 5、Surface Book 2和Surface Laptop(以及所有后续的Surface设备)，使用专有的嵌入式控制器(或其他类似硬件)而不是标准的ACPI电池设备和OperationRegion字段，因此如果没有设备特定的kext，电池状态无法工作。\n\n电池补丁资源\n * 注意:如果您正在使用ECEnabler kext，则不需要按照下面的指南分割EC字段。这意味着您可以直接在DSDT中使用字段名称，而不是通过实用程序方法(例如 B1B2, B1B4, RE1B, 和 RECB).\n\n\n# 双电池\n\n因为macOS不支持双电池系统，你必须在ACPI中合并两个电池。\n\n有关如何处理双电池笔记本电脑的信息，请参阅VirtualSMC文档:链接\n\n\n# 周期计数\n\n一些笔记本电脑供应商，如惠普，已经提供了供应周期计数信息。然而，他们的固件要么没有实现它，要么在_BIX方法中暴露它。在过去，Rehabman的ACPIBatteryManager采用了一种hack来支持不具有_BIX方法的固件的周期计数，然而在SMCBatteryManager中，这已不再支持。\n\n有关如何从ACPIBatteryManager周期计数hack过渡到正确的_BIX方法实现的信息，请参阅VirtualSMC文档:链接\n\n对于那些第一次实现周期计数而不是从ACPIBatteryManager周期计数hack过渡的人来说，文档可能也证明是有用的。\n\n\n# 电池信息补充\n\n虽然许多笔记本电脑在它们的EC领域提供补充的电池信息(例如制造日期和电池温度)，但传统的_BIF、_BIX和_BST ACPI方法不支持提供这些信息。因此，SMCBatteryManager支持两个ACPI方法，CBIS和CBSS来为macOS提供这些信息。\n\n有关如何实现这些方法的信息，请参阅VirtualSMC文档:链接\n\nLegacy补丁资源\n * 注意:Rehabman的指南说要使用ACPIBatteryManager，你必须使用SMCBatteryManager。\n\n\n# DSDT补丁\n\n虽然自定义DSDT注入应该避免，以防止Windows和固件更新的问题，它可以作为一个相当有帮助的起点，因为它更容易掌握和自己做:\n\nRehabman如何为工作的电池状态修补DSDT\n\n * 注意:当重新注入您的DSDT时，它应该是在config.plist中添加的ACPI ->列表中的第一个。请记住，补丁DSDT也会进入EFI/OC/ACPI\n\n * 注2:避免使用由Rehabman提供的MaciASL和iASL，它们长期被忽视，因此强烈建议从Acidanthera获取更新的变体:MaciASL\n\n\n# 电池热补丁\n\n一旦你终于让你的DSDT打上补丁并在macOS中工作，是时候创建我们自己的热补丁了。与普通的DSDT补丁不同的是，它是在DSDT中动态完成的，允许固件更新具有更大的灵活性:\n\nRehabman\'s Guide to Using Clover to "hotpatch" ACPI\n\n * 注意:具体来说，post#2提到了电池热补丁',normalizedContent:'# 电池状态\n\n有了ecenabler.kext，工作电池百分比不再需要acpi补丁。如果您希望电池功能超过充电百分比(例如，循环计数，或温度/其他补充数据)或有双电池，您仍然需要创建acpi补丁-请参阅下面的资源。\n\n * *如果电池状态即使使用ecenabler也不能工作，请确保在opencore配置中启用了smcbatterymanager virtualsmc插件。\n\n * 某些设备，如surface 3、surface pro 5、surface book 2和surface laptop(以及所有后续的surface设备)，使用专有的嵌入式控制器(或其他类似硬件)而不是标准的acpi电池设备和operationregion字段，因此如果没有设备特定的kext，电池状态无法工作。\n\n电池补丁资源\n * 注意:如果您正在使用ecenabler kext，则不需要按照下面的指南分割ec字段。这意味着您可以直接在dsdt中使用字段名称，而不是通过实用程序方法(例如 b1b2, b1b4, re1b, 和 recb).\n\n\n# 双电池\n\n因为macos不支持双电池系统，你必须在acpi中合并两个电池。\n\n有关如何处理双电池笔记本电脑的信息，请参阅virtualsmc文档:链接\n\n\n# 周期计数\n\n一些笔记本电脑供应商，如惠普，已经提供了供应周期计数信息。然而，他们的固件要么没有实现它，要么在_bix方法中暴露它。在过去，rehabman的acpibatterymanager采用了一种hack来支持不具有_bix方法的固件的周期计数，然而在smcbatterymanager中，这已不再支持。\n\n有关如何从acpibatterymanager周期计数hack过渡到正确的_bix方法实现的信息，请参阅virtualsmc文档:链接\n\n对于那些第一次实现周期计数而不是从acpibatterymanager周期计数hack过渡的人来说，文档可能也证明是有用的。\n\n\n# 电池信息补充\n\n虽然许多笔记本电脑在它们的ec领域提供补充的电池信息(例如制造日期和电池温度)，但传统的_bif、_bix和_bst acpi方法不支持提供这些信息。因此，smcbatterymanager支持两个acpi方法，cbis和cbss来为macos提供这些信息。\n\n有关如何实现这些方法的信息，请参阅virtualsmc文档:链接\n\nlegacy补丁资源\n * 注意:rehabman的指南说要使用acpibatterymanager，你必须使用smcbatterymanager。\n\n\n# dsdt补丁\n\n虽然自定义dsdt注入应该避免，以防止windows和固件更新的问题，它可以作为一个相当有帮助的起点，因为它更容易掌握和自己做:\n\nrehabman如何为工作的电池状态修补dsdt\n\n * 注意:当重新注入您的dsdt时，它应该是在config.plist中添加的acpi ->列表中的第一个。请记住，补丁dsdt也会进入efi/oc/acpi\n\n * 注2:避免使用由rehabman提供的maciasl和iasl，它们长期被忽视，因此强烈建议从acidanthera获取更新的变体:maciasl\n\n\n# 电池热补丁\n\n一旦你终于让你的dsdt打上补丁并在macos中工作，是时候创建我们自己的热补丁了。与普通的dsdt补丁不同的是，它是在dsdt中动态完成的，允许固件更新具有更大的灵活性:\n\nrehabman\'s guide to using clover to "hotpatch" acpi\n\n * 注意:具体来说，post#2提到了电池热补丁',charsets:{cjk:!0}},{title:"修复CFG锁",frontmatter:{},regularPath:"/misc/msr-lock.html",relativePath:"misc/msr-lock.md",key:"v-aaa8e5da",path:"/misc/msr-lock.html",headers:[{level:2,title:"什么是CFG-锁",slug:"什么是cfg-锁",normalizedTitle:"什么是cfg-锁",charIndex:144},{level:2,title:"检查你的固件是否支持CFG锁的解锁",slug:"检查你的固件是否支持cfg锁的解锁",normalizedTitle:"检查你的固件是否支持cfg锁的解锁",charIndex:615},{level:3,title:"通过OpenCore日志进行检查",slug:"通过opencore日志进行检查",normalizedTitle:"通过opencore日志进行检查",charIndex:770},{level:3,title:"通过ControlMsrE2进行检查",slug:"通过controlmsre2进行检查",normalizedTitle:"通过controlmsre2进行检查",charIndex:1101},{level:2,title:"禁用CFG锁",slug:"禁用cfg锁",normalizedTitle:"禁用cfg锁",charIndex:987},{level:2,title:"手动关闭CFG-Lock",slug:"手动关闭cfg-lock",normalizedTitle:"手动关闭cfg-lock",charIndex:1798}],lastUpdated:"2/14/2023, 5:12:00 PM",lastUpdatedTimestamp:167639472e4,headersStr:"什么是CFG-锁 检查你的固件是否支持CFG锁的解锁 通过OpenCore日志进行检查 通过ControlMsrE2进行检查 禁用CFG锁 手动关闭CFG-Lock",content:"# 修复CFG锁\n\n本指南只推荐给已经安装了macOS的用户，对于第一次安装的用户，请在Kernel -> Quirks中启用AppleCpuPmCfgLock 和 AppleXcpmCfgLock 。\n\n * 注意，本指南只适用于英特尔用户。AMD用户没有任何类型的CFG锁。\n\n\n# 什么是CFG-锁\n\nCFG-Lock 是 BIOS 中的一个设置，它允许写入一个特定的寄存器（在这里是 MSR 0xE2）。默认情况下，大多数主板都会锁定这个变量，许多主板甚至在GUI中直接隐藏了这个选项。我们关心的原因是macOS实际上想写这个变量，而不仅仅是macOS的一个部分。相反，内核（XNU）和AppleIntelPowerManagement都想要这个寄存器。\n\n所以要解决这个问题，我们有两个选择。\n\n# 1. 给macOS打补丁，使其与我们的硬件一起工作\n\n * 这对许多人来说会造成不稳定和不必要的修补。\n * 我们为此使用的2个补丁。\n   * AppleCpuPmCfgLock用于AppleIntelPowerManagement.kext\n   * AppleXcpmCfgLock用于内核(XNU)\n\n# 2. 给我们的固件打补丁，以支持MSR E2的编写\n\n * 非常喜欢，因为可以避免打补丁，在稳定性和操作系统升级方面有更大的灵活性。\n\n注意：基于Penyrn的机器实际上不需要担心解锁这个寄存器。\n\n\n# 检查你的固件是否支持CFG锁的解锁\n\n在进行本指南的其余部分之前，你首先需要检查你的固件是否支持CFG锁的解锁。 要检查它，你可以通过两种方式进行。\n\n 1. 使用OpenCore的DEBUG版本，检查日志中关于CFG锁的内容\n 2. 使用一个叫做ControlMsrE2的工具，它将加快整个检查过程\n\n\n# 通过OpenCore日志进行检查\n\n对于喜欢使用DEBUG版本的用户，你要启用OpenCore的DEBUG变体，将Target设置为67，然后启动OpenCore。这将为您提供一个格式为opencore-YYY-MM-DD-hhmmss.txt的文件，位于驱动器的根目录下。\n\n在这个文件中，搜索 OCCPU: EIST CFG Lock:\n\nOCCPU: EIST CFG Lock 1\n\n\n如果它返回1，那么你就按这里的指南进行。禁用CFG锁。\n\n否则（即0），没有理由继续，你可以简单地禁用 Kernel -> Quirks -> AppleCpuPmCfgLock 和 Kernel -> Quirks -> AppleXcpmCfgLock.\n\n\n# 通过ControlMsrE2进行检查\n\n首先，下载ControlMsrE2，并将该工具添加到EFI/OC/Tools和config.plist中（这可以通过ProperTree的快照功能（即Cmd+R）完成）。接下来，启动OpenCore并选择ControlMsrE2.efi条目。这应该为您提供以下信息之一。\n\n * CFG-锁已经启用。\n\nThis firmware has LOCKED MSR 0xE2 register!\n\n\n * CFG-锁被禁用。\n\nThis firmware has UNLOCKED MSR 0xE2 register!\n\n\n对于前者，请在这里继续。禁用CFG锁。\n\n对于后者，你不需要做任何CFG-Lock补丁，可以简单地禁用 Kernel -> Quirks -> AppleCpuPmCfgLock和Kernel -> Quirks -> AppleXcpmCfgLock。\n\n\n# 禁用CFG锁\n\n所以，你已经创建了EFI文件夹，但在CFG锁之前，你仍然无法启动，因为没有解锁。为了做到这一点，你将需要以下内容。\n\n在你的EFI/OC/Tools文件夹和config.plist中，添加以下工具（这可以用ProperTree的快照功能（即Cmd+R）来完成）。\n\n * 修改过的GRUB Shell\n\n还有一些应用程序来帮助我们。\n\n * UEFITool (请确保是UEFITool而不是UEFIExtract)\n * Universal-IFR-Extractor\n\n最后一个部分，从供应商的网站上抓取你的BIOS。\n\n现在是有趣的部分!\n\n\n# 手动关闭CFG-Lock\n\n请注意，只有华硕、微星和华擎的固件可以通过UEFITool直接打开。其他固件需要一个特殊的程序，我们将不直接在本指南中介绍。对于戴尔的固件，请参考dreamwhite的指南。\n\n 1. 用UEFITool打开你的固件，然后找到CFG Lock这个Unicode字符串。如果没有弹出，那么你的固件不支持 CFG Lock，否则继续下去。\n\n\n\n 1. 你会发现这个字符串是在Setup文件夹中找到的，右击并导出为Setup.bin（甚至是Setup.sct）。\n\n 2. 用ifrextract打开你的设置文件，用终端导出为.txt文件。\n    \n    path/to/ifrextract path/to/Setup.bin path/to/Setup.txt\n    \n\n 3. 打开文本文件，搜索CFG Lock, VarStoreInfo (VarOffset/VarName):并注意它后面的偏移量（如：0x43）和偏移量后面的VarStore ID（如：0x3）。\n\n 4. 搜索VarStoreId: 0x3，其中0x3被替换为你找到的VarStoreId的值，并注意它后面的名称(即：CpuSetup)\n\n\n\n 1. 运行修改后的GRUB Shell并编写以下命令，其中CpuSetup被替换为你之前提取的VarStore Name，0x43被替换为你之前提取的offset。\n    \n    setup_var_cv CpuSetup 0x43 0x01 0x00\n    \n\n在这一点上，在shell中运行reboot，或者直接重启你的机器。这样一来，你应该已经解开了 CFG锁! 为了验证，你可以运行Checking if your firmware supports CFG Lock unlocking中列出的方法来验证变量是否被正确设置，然后最后禁用Kernel -> Quirks -> AppleCpuPmCfgLock和Kernel -> Quirks -> AppleXcpmCfgLock。\n\n * 请注意，变量偏移量不仅对每块主板是唯一的，甚至对其固件版本也是唯一的。在没有检查的情况下，千万不要尝试使用偏移量。\n\n然后你就完成了! 现在你将拥有正确的CPU电源管理\n\n注意。每次你重新设置你的BIOS时，你都需要再次翻转这个位，确保把它和BIOS的版本一起写下来，以便你知道是哪一个。\n\n注2。一些 OEM（如联想）可能设置了这个变量，但如果不对 BIOS 进行物理修改就无法解锁，对于这些情况，你可能需要使用 RU 这样的工具。CFG LOCK/Unlocking - Alternative method",normalizedContent:"# 修复cfg锁\n\n本指南只推荐给已经安装了macos的用户，对于第一次安装的用户，请在kernel -> quirks中启用applecpupmcfglock 和 applexcpmcfglock 。\n\n * 注意，本指南只适用于英特尔用户。amd用户没有任何类型的cfg锁。\n\n\n# 什么是cfg-锁\n\ncfg-lock 是 bios 中的一个设置，它允许写入一个特定的寄存器（在这里是 msr 0xe2）。默认情况下，大多数主板都会锁定这个变量，许多主板甚至在gui中直接隐藏了这个选项。我们关心的原因是macos实际上想写这个变量，而不仅仅是macos的一个部分。相反，内核（xnu）和appleintelpowermanagement都想要这个寄存器。\n\n所以要解决这个问题，我们有两个选择。\n\n# 1. 给macos打补丁，使其与我们的硬件一起工作\n\n * 这对许多人来说会造成不稳定和不必要的修补。\n * 我们为此使用的2个补丁。\n   * applecpupmcfglock用于appleintelpowermanagement.kext\n   * applexcpmcfglock用于内核(xnu)\n\n# 2. 给我们的固件打补丁，以支持msr e2的编写\n\n * 非常喜欢，因为可以避免打补丁，在稳定性和操作系统升级方面有更大的灵活性。\n\n注意：基于penyrn的机器实际上不需要担心解锁这个寄存器。\n\n\n# 检查你的固件是否支持cfg锁的解锁\n\n在进行本指南的其余部分之前，你首先需要检查你的固件是否支持cfg锁的解锁。 要检查它，你可以通过两种方式进行。\n\n 1. 使用opencore的debug版本，检查日志中关于cfg锁的内容\n 2. 使用一个叫做controlmsre2的工具，它将加快整个检查过程\n\n\n# 通过opencore日志进行检查\n\n对于喜欢使用debug版本的用户，你要启用opencore的debug变体，将target设置为67，然后启动opencore。这将为您提供一个格式为opencore-yyy-mm-dd-hhmmss.txt的文件，位于驱动器的根目录下。\n\n在这个文件中，搜索 occpu: eist cfg lock:\n\noccpu: eist cfg lock 1\n\n\n如果它返回1，那么你就按这里的指南进行。禁用cfg锁。\n\n否则（即0），没有理由继续，你可以简单地禁用 kernel -> quirks -> applecpupmcfglock 和 kernel -> quirks -> applexcpmcfglock.\n\n\n# 通过controlmsre2进行检查\n\n首先，下载controlmsre2，并将该工具添加到efi/oc/tools和config.plist中（这可以通过propertree的快照功能（即cmd+r）完成）。接下来，启动opencore并选择controlmsre2.efi条目。这应该为您提供以下信息之一。\n\n * cfg-锁已经启用。\n\nthis firmware has locked msr 0xe2 register!\n\n\n * cfg-锁被禁用。\n\nthis firmware has unlocked msr 0xe2 register!\n\n\n对于前者，请在这里继续。禁用cfg锁。\n\n对于后者，你不需要做任何cfg-lock补丁，可以简单地禁用 kernel -> quirks -> applecpupmcfglock和kernel -> quirks -> applexcpmcfglock。\n\n\n# 禁用cfg锁\n\n所以，你已经创建了efi文件夹，但在cfg锁之前，你仍然无法启动，因为没有解锁。为了做到这一点，你将需要以下内容。\n\n在你的efi/oc/tools文件夹和config.plist中，添加以下工具（这可以用propertree的快照功能（即cmd+r）来完成）。\n\n * 修改过的grub shell\n\n还有一些应用程序来帮助我们。\n\n * uefitool (请确保是uefitool而不是uefiextract)\n * universal-ifr-extractor\n\n最后一个部分，从供应商的网站上抓取你的bios。\n\n现在是有趣的部分!\n\n\n# 手动关闭cfg-lock\n\n请注意，只有华硕、微星和华擎的固件可以通过uefitool直接打开。其他固件需要一个特殊的程序，我们将不直接在本指南中介绍。对于戴尔的固件，请参考dreamwhite的指南。\n\n 1. 用uefitool打开你的固件，然后找到cfg lock这个unicode字符串。如果没有弹出，那么你的固件不支持 cfg lock，否则继续下去。\n\n\n\n 1. 你会发现这个字符串是在setup文件夹中找到的，右击并导出为setup.bin（甚至是setup.sct）。\n\n 2. 用ifrextract打开你的设置文件，用终端导出为.txt文件。\n    \n    path/to/ifrextract path/to/setup.bin path/to/setup.txt\n    \n\n 3. 打开文本文件，搜索cfg lock, varstoreinfo (varoffset/varname):并注意它后面的偏移量（如：0x43）和偏移量后面的varstore id（如：0x3）。\n\n 4. 搜索varstoreid: 0x3，其中0x3被替换为你找到的varstoreid的值，并注意它后面的名称(即：cpusetup)\n\n\n\n 1. 运行修改后的grub shell并编写以下命令，其中cpusetup被替换为你之前提取的varstore name，0x43被替换为你之前提取的offset。\n    \n    setup_var_cv cpusetup 0x43 0x01 0x00\n    \n\n在这一点上，在shell中运行reboot，或者直接重启你的机器。这样一来，你应该已经解开了 cfg锁! 为了验证，你可以运行checking if your firmware supports cfg lock unlocking中列出的方法来验证变量是否被正确设置，然后最后禁用kernel -> quirks -> applecpupmcfglock和kernel -> quirks -> applexcpmcfglock。\n\n * 请注意，变量偏移量不仅对每块主板是唯一的，甚至对其固件版本也是唯一的。在没有检查的情况下，千万不要尝试使用偏移量。\n\n然后你就完成了! 现在你将拥有正确的cpu电源管理\n\n注意。每次你重新设置你的bios时，你都需要再次翻转这个位，确保把它和bios的版本一起写下来，以便你知道是哪一个。\n\n注2。一些 oem（如联想）可能设置了这个变量，但如果不对 bios 进行物理修改就无法解锁，对于这些情况，你可能需要使用 ru 这样的工具。cfg lock/unlocking - alternative method",charsets:{cjk:!0}},{title:"模拟NVRAM",frontmatter:{},regularPath:"/misc/nvram.html",relativePath:"misc/nvram.md",key:"v-c6c22d8e",path:"/misc/nvram.html",headers:[{level:2,title:"清理Clover的垃圾",slug:"清理clover的垃圾",normalizedTitle:"清理clover的垃圾",charIndex:238},{level:2,title:"验证你是否有工作的NVRAM",slug:"验证你是否有工作的nvram",normalizedTitle:"验证你是否有工作的nvram",charIndex:720},{level:2,title:"模拟NVRAM(使用nvram.plist)",slug:"模拟nvram-使用nvram-plist",normalizedTitle:"模拟nvram(使用nvram.plist)",charIndex:903}],lastUpdated:"2/14/2023, 5:12:00 PM",lastUpdatedTimestamp:167639472e4,headersStr:"清理Clover的垃圾 验证你是否有工作的NVRAM 模拟NVRAM(使用nvram.plist)",content:'# 模拟NVRAM\n\n危险\n\n这不是OpenCore 0.8.3的最新版本!\n\n所以本节是为那些没有原生NVRAM的人准备的，与macOS不兼容的原生NVRAM的最常见硬件是X99和一些X299系列芯片组。\n\n * X99\n * X299\n\n对于B360、B365、H310、H370和Z390用户，确保你在EFI/OC/ACPI和config.plist -> ACPI -> Add下都有SSDT-PMC。关于制作和编译SSDT的更多信息，请看 开始使用ACPI\n\n\n# 清理Clover的垃圾\n\n有些人可能没有注意到，但Clover可能已经在macOS中安装了RC脚本，以进行适当的NVRAM模拟。这是一个问题，因为它与OpenCore的模拟方法相冲突。\n\n要删除的文件。\n\n * /Volumes/EFI/EFI/CLOVER/drivers64UEFI/EmuVariableUefi-64.efi\n * /Volumes/EFI/nvram.plist\n * `/etc/rc.clover.lib\'\n * /etc/rc.boot.d/10.save_and_rotate_boot_log.local\n * /etc/rc.boot.d/20.mount_ESP.local\n * /etc/rc.boot.d/70.disable_sleep_proxy_client.local.disabled\n * /etc/rc.shutdown.d/80.save_nvram_plist.local\n\n如果文件夹是空的，也要删除它们。\n\n * /etc/rc.boot.d\n * /etc/rc.shutdown.d\n\n\n# 验证你是否有工作的NVRAM\n\n首先，打开终端，运行以下命令，在NVRAM中设置一个名为test的变量为当前日期和时间。\n\nsudo nvram myvar="$(date)"\n\n\n现在重新启动并运行这个命令。\n\nnvram myvar\n\n\n如果没有返回，那么你的NVRAM就没有工作。如果有一行包含myvar，然后是当前日期，那么你的NVRAM就工作了。\n\n\n# 模拟NVRAM(使用nvram.plist)\n\n如果你没有本地的NVRAM，不要着急。我们可以通过使用脚本来设置模拟NVRAM，在关机过程中将NVRAM内容保存到plist中，然后在下次启动时由OpenCore加载。\n\n要启用模拟NVRAM，你需要进行以下设置。\n\n在你的config.plist中：\n\n * Booter -> Quirks。\n   * DisableVariableWrite：设置为NO\n * Misc -> Security:\n   * ExposeSensitiveData: 设置为至少0x1\n * NVRAM:\n   * LegacyOverwrite设置为YES\n   * LegacySchema: 设置NVRAM变量（OpenCore将这些变量与nvram.plist中的变量进行比较）\n   * WriteFlash：设置为YES\n\n而在你的EFI中：\n\n * OpenVariableRuntimeDxe.efi驱动程序\n * OpenRuntime.efi 驱动程序 (这对于正确的睡眠、关机和其他服务的正常工作是必需的)\n\n确保在快照之后，确保这些驱动被列在你的config.plist中。之后，确保OpenVariableRuntimeDxe.efi和OpenRuntime.efi的LoadEarly设置为YES，并且OpenVariableRuntimeDxe.efi在你的配置中被置于OpenRuntime.efi之前。\n\n现在抓取LogoutHook文件夹(在Utilities内)并把它放在安全的地方(例如在你的用户目录内，如下所示)\n\n/Users/$(whoami)/LogoutHook/\n\n打开终端，运行以下程序（一次一个）。\n\ncd /Users/$(whoami)/LogoutHook/\n./Launchd.command install \n\n\n然后就可以了! 你有了模拟的NVRAM!',normalizedContent:'# 模拟nvram\n\n危险\n\n这不是opencore 0.8.3的最新版本!\n\n所以本节是为那些没有原生nvram的人准备的，与macos不兼容的原生nvram的最常见硬件是x99和一些x299系列芯片组。\n\n * x99\n * x299\n\n对于b360、b365、h310、h370和z390用户，确保你在efi/oc/acpi和config.plist -> acpi -> add下都有ssdt-pmc。关于制作和编译ssdt的更多信息，请看 开始使用acpi\n\n\n# 清理clover的垃圾\n\n有些人可能没有注意到，但clover可能已经在macos中安装了rc脚本，以进行适当的nvram模拟。这是一个问题，因为它与opencore的模拟方法相冲突。\n\n要删除的文件。\n\n * /volumes/efi/efi/clover/drivers64uefi/emuvariableuefi-64.efi\n * /volumes/efi/nvram.plist\n * `/etc/rc.clover.lib\'\n * /etc/rc.boot.d/10.save_and_rotate_boot_log.local\n * /etc/rc.boot.d/20.mount_esp.local\n * /etc/rc.boot.d/70.disable_sleep_proxy_client.local.disabled\n * /etc/rc.shutdown.d/80.save_nvram_plist.local\n\n如果文件夹是空的，也要删除它们。\n\n * /etc/rc.boot.d\n * /etc/rc.shutdown.d\n\n\n# 验证你是否有工作的nvram\n\n首先，打开终端，运行以下命令，在nvram中设置一个名为test的变量为当前日期和时间。\n\nsudo nvram myvar="$(date)"\n\n\n现在重新启动并运行这个命令。\n\nnvram myvar\n\n\n如果没有返回，那么你的nvram就没有工作。如果有一行包含myvar，然后是当前日期，那么你的nvram就工作了。\n\n\n# 模拟nvram(使用nvram.plist)\n\n如果你没有本地的nvram，不要着急。我们可以通过使用脚本来设置模拟nvram，在关机过程中将nvram内容保存到plist中，然后在下次启动时由opencore加载。\n\n要启用模拟nvram，你需要进行以下设置。\n\n在你的config.plist中：\n\n * booter -> quirks。\n   * disablevariablewrite：设置为no\n * misc -> security:\n   * exposesensitivedata: 设置为至少0x1\n * nvram:\n   * legacyoverwrite设置为yes\n   * legacyschema: 设置nvram变量（opencore将这些变量与nvram.plist中的变量进行比较）\n   * writeflash：设置为yes\n\n而在你的efi中：\n\n * openvariableruntimedxe.efi驱动程序\n * openruntime.efi 驱动程序 (这对于正确的睡眠、关机和其他服务的正常工作是必需的)\n\n确保在快照之后，确保这些驱动被列在你的config.plist中。之后，确保openvariableruntimedxe.efi和openruntime.efi的loadearly设置为yes，并且openvariableruntimedxe.efi在你的配置中被置于openruntime.efi之前。\n\n现在抓取logouthook文件夹(在utilities内)并把它放在安全的地方(例如在你的用户目录内，如下所示)\n\n/users/$(whoami)/logouthook/\n\n打开终端，运行以下程序（一次一个）。\n\ncd /users/$(whoami)/logouthook/\n./launchd.command install \n\n\n然后就可以了! 你有了模拟的nvram!',charsets:{cjk:!0}},{title:"修复RTC写入问题",frontmatter:{},regularPath:"/misc/rtc.html",relativePath:"misc/rtc.md",key:"v-740c98ba",path:"/misc/rtc.html",headers:[{level:2,title:"找到我们的坏RTC区域",slug:"找到我们的坏rtc区域",normalizedTitle:"找到我们的坏rtc区域",charIndex:633},{level:2,title:"使黑名单更持久",slug:"使黑名单更持久",normalizedTitle:"使黑名单更持久",charIndex:2010}],lastUpdated:"2/14/2023, 5:12:00 PM",lastUpdatedTimestamp:167639472e4,headersStr:"找到我们的坏RTC区域 使黑名单更持久",content:"# 修复RTC写入问题\n\n本节试图教授的是如何解决某些机器重启/唤醒时的RTC(CMOS)问题。最常见的是像下面的图片。\n\n\n\n这些CMOS和安全模式错误发生的原因是由于AppleRTC写到了某些硬件不支持的区域，从而导致了崩溃和错误。\n\n为了解决这个问题，我们通常用这些类型的补丁阻止所有的RTC写入，但由于许多原因，这些补丁并不理想，包括破坏Windows和Linux以及禁用潜在的支持区域，如电源管理。\n\n因此，对于OpenCore，我们有几个选项可以选择。\n\n * 给AppleRTC打上补丁，使其不能写入特定区域。\n   * 他们可能在未来的操作系统更新中被破坏\n   * 对终端用户来说，打补丁要困难得多\n   * 不处理EfiBoot对RTC的写入。\n * 省略坏区域的可写性\n   * 他们可能在未来的固件更新中被破坏\n   * 终端用户更容易打补丁\n   * 防止EfiBoot也会破坏你的系统\n\n前者实际上已经通过 DisableRtcChecksum集成到OpenCore中了，但它的缺点是只能阻止0x58-0x59区域，而且只能在内核层工作。要知道这个选项是否是最好的，最好的办法是启用它并尝试。如果这不起作用，就禁用，因为这是一个不必要的补丁。\n\n有了后者，我们就能封锁我们选择的非常具体的区域，与我们的确切型号相匹配。而且，我们能够在内核层面和固件支持休眠的情况下做到这一点。然而这需要更多的时间和RTCMemoryFixup。\n\n\n# 找到我们的坏RTC区域\n\n在本指南的其余部分，我们将假设你已经测试了选项1(DisableRtcChecksum)，但没有成功，或者你在EfiBoot写到RTC时有问题。为了开始，我们应该先介绍一些想法。\n\n * RTC将有从0到255的区域。\n * 这些区域将采用十六进制的计数系统，所以实际上是0x00-0xFF。\n * 为了省略不好的区域，我们使用启动参数rtcfx_exclude=00-FF。\n   * 用你的坏区域(或区域)替换00-FF。\n   * 提醒你，boot-args位于你的config.plist中NVRAM -> Add -> 7C436110-AB2A-4BBB-A880-FE41995C9F82下。\n   * 这也需要你在config.plist和EFI/OC/Kexts文件夹下有RTCMemoryFixup。\n * 可能有多个坏的区域\n * 为了找到坏区域，我们要把搜索分成几块。\n\n关于分块，我们要做的是省略RTC区域的分块，直到我们缩小到足够精确的坏点。你可以看看下面的内容，了解如何开始。\n\n# 1. 测试RtcMemoryFixup\n\n * 首先，你需要在启动参数中添加rtcfx_exclude=00-FF。如果重启后，RTC错误似乎解决了，这将告诉你你的CMOS错误是否与RTC有关。\n\n# 2. 将0x00-0xFF分成2个\n\n * 0x00-0x7F和0x80-0xFF\n   * 写下能解决RTC错误的排除范围，然后继续将更多的内容分成几块\n   * 例如：rtcfx_exclude=00-7F修复了RTC错误，所以你要把它分成一半，不要考虑更多的rtcfx_exclude=80-FF。\n * 测试rtcfx_exclude=00-7F和rtcfx_exclude=80-FF。\n   * 注意你也可能得到一个7F-80的坏范围，甚至是分成多个部分的坏区域（例如0x00-0x01 和 0x80-0x81）。\n   * 你可以使用rtcfx_exclude=00-01,7F-80来解决这个问题。\n\n# 3. 在测试了哪些区域是坏的之后，再缩减一下\n\n * 假设我们的坏区域在0x80-0xFF内，接下来你要把它分成两部分。\n * 0x80-0xBF和0xC0-0xFF\n   * 如果你有多个区域是坏的\n\n# 4. 而你将以这种模式继续下去，直到你缩小了坏区域的范围。请注意，你每次都需要重新启动，以测试你是否仍然得到CMOS/安全模式错误\n\n * 还要注意，最后的坏点通常是一个范围，而不是一个单一的点。\n * 例如：rtcfx_exclude=85-86而不是一个单一的值。\n\n专业提示。要找到一个介于两个区域之间的值，我建议首先将十六进制转换为十进制，然后运行以下公式。\n\n * (x + y) / 2。\n\n现在，让我们试着将此与前面的步骤1一起使用。\n\n * 0x00-0xFF -> 0-255 -> (0 + 255) / 2 = 127.5\n\n现在用127.5，你将向上和向下取整，得到你们自己的结束和开始值。\n\n * 0-127 -> 0x00-0x7F\n\n * 128-255 -> 0x80-0xFF\n\n希望这能帮助你更好地理解你是如何从第1步得到我们的数值的。\n\n\n# 使黑名单更持久\n\n一旦你找到了坏的RTC区域，你现在可以最终将其添加到OpenCore本身，并允许该区域在固件层面被列入黑名单。\n\n为此，打开你的config.plist，进入NVRAM -> Add部分。在 4D1FDA02-38C7-4A6A-9CC6-4BCCA8B30102GUID下，你要添加一个名为rtc-blacklist的新条目。\n\n接下来，你要把我们的不良RTC区域作为一个数组加入，所以rtcfx_exclude=85-86将变成rtc-blacklist | Data | 8586。这也适用于更长的范围，如85-89等，但对于rtc-blacklist，你必须包括每个条目（即<85 86 87 88 89>）。一旦你设置了rtc-blacklist，请记得删除启动参数。\n\n接下来确保你也设置了NVRAM -> Delete，因为除非明确告知，否则NVRAM变量将不会被OpenCore覆盖。\n\n完成这一切后，你应该有与下面类似的东西。\n\n",normalizedContent:"# 修复rtc写入问题\n\n本节试图教授的是如何解决某些机器重启/唤醒时的rtc(cmos)问题。最常见的是像下面的图片。\n\n\n\n这些cmos和安全模式错误发生的原因是由于applertc写到了某些硬件不支持的区域，从而导致了崩溃和错误。\n\n为了解决这个问题，我们通常用这些类型的补丁阻止所有的rtc写入，但由于许多原因，这些补丁并不理想，包括破坏windows和linux以及禁用潜在的支持区域，如电源管理。\n\n因此，对于opencore，我们有几个选项可以选择。\n\n * 给applertc打上补丁，使其不能写入特定区域。\n   * 他们可能在未来的操作系统更新中被破坏\n   * 对终端用户来说，打补丁要困难得多\n   * 不处理efiboot对rtc的写入。\n * 省略坏区域的可写性\n   * 他们可能在未来的固件更新中被破坏\n   * 终端用户更容易打补丁\n   * 防止efiboot也会破坏你的系统\n\n前者实际上已经通过 disablertcchecksum集成到opencore中了，但它的缺点是只能阻止0x58-0x59区域，而且只能在内核层工作。要知道这个选项是否是最好的，最好的办法是启用它并尝试。如果这不起作用，就禁用，因为这是一个不必要的补丁。\n\n有了后者，我们就能封锁我们选择的非常具体的区域，与我们的确切型号相匹配。而且，我们能够在内核层面和固件支持休眠的情况下做到这一点。然而这需要更多的时间和rtcmemoryfixup。\n\n\n# 找到我们的坏rtc区域\n\n在本指南的其余部分，我们将假设你已经测试了选项1(disablertcchecksum)，但没有成功，或者你在efiboot写到rtc时有问题。为了开始，我们应该先介绍一些想法。\n\n * rtc将有从0到255的区域。\n * 这些区域将采用十六进制的计数系统，所以实际上是0x00-0xff。\n * 为了省略不好的区域，我们使用启动参数rtcfx_exclude=00-ff。\n   * 用你的坏区域(或区域)替换00-ff。\n   * 提醒你，boot-args位于你的config.plist中nvram -> add -> 7c436110-ab2a-4bbb-a880-fe41995c9f82下。\n   * 这也需要你在config.plist和efi/oc/kexts文件夹下有rtcmemoryfixup。\n * 可能有多个坏的区域\n * 为了找到坏区域，我们要把搜索分成几块。\n\n关于分块，我们要做的是省略rtc区域的分块，直到我们缩小到足够精确的坏点。你可以看看下面的内容，了解如何开始。\n\n# 1. 测试rtcmemoryfixup\n\n * 首先，你需要在启动参数中添加rtcfx_exclude=00-ff。如果重启后，rtc错误似乎解决了，这将告诉你你的cmos错误是否与rtc有关。\n\n# 2. 将0x00-0xff分成2个\n\n * 0x00-0x7f和0x80-0xff\n   * 写下能解决rtc错误的排除范围，然后继续将更多的内容分成几块\n   * 例如：rtcfx_exclude=00-7f修复了rtc错误，所以你要把它分成一半，不要考虑更多的rtcfx_exclude=80-ff。\n * 测试rtcfx_exclude=00-7f和rtcfx_exclude=80-ff。\n   * 注意你也可能得到一个7f-80的坏范围，甚至是分成多个部分的坏区域（例如0x00-0x01 和 0x80-0x81）。\n   * 你可以使用rtcfx_exclude=00-01,7f-80来解决这个问题。\n\n# 3. 在测试了哪些区域是坏的之后，再缩减一下\n\n * 假设我们的坏区域在0x80-0xff内，接下来你要把它分成两部分。\n * 0x80-0xbf和0xc0-0xff\n   * 如果你有多个区域是坏的\n\n# 4. 而你将以这种模式继续下去，直到你缩小了坏区域的范围。请注意，你每次都需要重新启动，以测试你是否仍然得到cmos/安全模式错误\n\n * 还要注意，最后的坏点通常是一个范围，而不是一个单一的点。\n * 例如：rtcfx_exclude=85-86而不是一个单一的值。\n\n专业提示。要找到一个介于两个区域之间的值，我建议首先将十六进制转换为十进制，然后运行以下公式。\n\n * (x + y) / 2。\n\n现在，让我们试着将此与前面的步骤1一起使用。\n\n * 0x00-0xff -> 0-255 -> (0 + 255) / 2 = 127.5\n\n现在用127.5，你将向上和向下取整，得到你们自己的结束和开始值。\n\n * 0-127 -> 0x00-0x7f\n\n * 128-255 -> 0x80-0xff\n\n希望这能帮助你更好地理解你是如何从第1步得到我们的数值的。\n\n\n# 使黑名单更持久\n\n一旦你找到了坏的rtc区域，你现在可以最终将其添加到opencore本身，并允许该区域在固件层面被列入黑名单。\n\n为此，打开你的config.plist，进入nvram -> add部分。在 4d1fda02-38c7-4a6a-9cc6-4bcca8b30102guid下，你要添加一个名为rtc-blacklist的新条目。\n\n接下来，你要把我们的不良rtc区域作为一个数组加入，所以rtcfx_exclude=85-86将变成rtc-blacklist | data | 8586。这也适用于更长的范围，如85-89等，但对于rtc-blacklist，你必须包括每个条目（即<85 86 87 88 89>）。一旦你设置了rtc-blacklist，请记得删除启动参数。\n\n接下来确保你也设置了nvram -> delete，因为除非明确告知，否则nvram变量将不会被opencore覆盖。\n\n完成这一切后，你应该有与下面类似的东西。\n\n",charsets:{cjk:!0}},{title:"安装和使用BootCamp工具",frontmatter:{},regularPath:"/multiboot/bootcamp.html",relativePath:"multiboot/bootcamp.md",key:"v-ecd4631e",path:"/multiboot/bootcamp.html",headers:[{level:2,title:"准备工作",slug:"准备工作",normalizedTitle:"准备工作",charIndex:373},{level:2,title:"安装",slug:"安装",normalizedTitle:"安装",charIndex:2},{level:2,title:"故障排除",slug:"故障排除",normalizedTitle:"故障排除",charIndex:841},{level:2,title:"在选择器中找不到Windows/BootCamp驱动器",slug:"在选择器中找不到windows-bootcamp驱动器",normalizedTitle:"在选择器中找不到windows/bootcamp驱动器",charIndex:1806},{level:2,title:'"您不能将启动磁盘更改为所选磁盘"错误',slug:"您不能将启动磁盘更改为所选磁盘-错误",normalizedTitle:"&quot;您不能将启动磁盘更改为所选磁盘&quot;错误",charIndex:null},{level:2,title:"启动Windows会导致蓝屏或Linux崩溃",slug:"启动windows会导致蓝屏或linux崩溃",normalizedTitle:"启动windows会导致蓝屏或linux崩溃",charIndex:1860},{level:2,title:"引导Windows错误:OCB: StartImage failed - Already started",slug:"引导windows错误-ocb-startimage-failed-already-started",normalizedTitle:"引导windows错误:ocb: startimage failed - already started",charIndex:1886},{level:2,title:"Windows启动盘看不到APFS驱动器",slug:"windows启动盘看不到apfs驱动器",normalizedTitle:"windows启动盘看不到apfs驱动器",charIndex:1942}],lastUpdated:"2/14/2023, 5:12:00 PM",lastUpdatedTimestamp:167639472e4,headersStr:'准备工作 安装 故障排除 在选择器中找不到Windows/BootCamp驱动器 "您不能将启动磁盘更改为所选磁盘"错误 启动Windows会导致蓝屏或Linux崩溃 引导Windows错误:OCB: StartImage failed - Already started Windows启动盘看不到APFS驱动器',content:'# 安装和使用BootCamp工具\n\nOpenCore的一个简洁特性是能够完全避免BIOS，只使用启动盘进行多引导。当我们试图引导windows，但没有办法将引导选项设置回macOS时，问题就出现了。这就是BootCamp工具的用武之地。\n\n * 注意:本指南将不介绍Windows安装程序的创建，只介绍BootCamp驱动程序的安装。\n   * 创建Windows安装程序的例子:构建一个可引导的Windows ISO\n   * 提醒:Windows 必须基于GPT/GUID, OpenCore将不会引导legacy安装\n * 注意2:从macOS使用BootCamp工具将擦除EFI/BOOT/BOOTx64.EFI文件，这是启动OpenCore所需的。而且OpenCore本身不支持基于MBR的安装，因此该实用程序对我们毫无用处\n\n\n# 准备工作\n\n首先，我们需要以下内容:\n\n * 已经安装Windows\n   * 必须基于UEFI / GPT\n * Brigadier\n   * 下载BootCamp驱动程序\n * 设置[LauncherOption] (../multiboot/bootstrap.md)\n   * 不是必需的，但可以帮助缓解OpenCore使用的BOOTx64.efi擦除Windows时的头痛\n\n\n# 安装\n\n安装非常简单，只需获取Brigadier并运行Brigadier。Windows使用.bat， macOS使用Brigadier.command。如果你当前使用的SMBIOS有BootCamp问题，或者想下载另一个SMBIOS，你可以在末尾添加——model{SMBIOS}:\n\npath/to/Brigadier --model MacPro7,1\n\n\n * 注意:旧版本的BootCamp安装程序(6.0)不支持APFS，你需要选择一个更新的SMBIOS将它捆绑(即。iMac 19,1)或在安装后更新你的bootcamp软件。有关故障排除的更多细节请参见下面的内容:Windows启动磁盘无法看到APFS驱动器\n\n\n\n接下来你会在下面找到我们的bootcamp驱动程序:\n\n * Windows:\n\n\\Users\\{Username}\\bootcamp-{filename}\\BootCamp\n\n\n * macOS:\n\n/Users/{Username}/BootCamp-{filename}/WindowsSupport.dmg\n\n\nmacOS用户接下来需要扩展WindowsSupport.dmg，并把它放在Windows可以得到的地方。\n\n\n\n接下来，在Windows中，您有两个选择。\n\n要么导航到bootcamp-{filename}\\ bootcamp文件夹，然后运行Setup. txt文件。这需要正确的SMBIOS SystemProductName欺骗-显示为系统模型在Windows -以启动:\n\n\n\n或者，以管理员身份启动bootcamp-{filename}\\bootcamp\\Drivers\\Apple\\bootcamp.msi——例如，通过直接从管理员命令shell启动它——这将完全跳过bootcamp模型检查:\n\n\n\n一旦所有完成，你现在有BootCamp切换!在你的托盘中应该有一个小的BootCamp图标，现在你可以选择启动到哪个驱动器。\n\n * 注意:对于那些不需要BootCamp提供的额外驱动程序，你可以删除以下内容:\n   * $WinPEDriver$: 不要删除文件夹本身，只删除里面的驱动程序\n     * 苹果Wifi卡用户需要保留以下内容:\n       * $WinPEDriver$/BroadcomWireless\n       * $WinPEDriver$/BroadcomBluetooth\n       * $WinPEDriver$/AppleBluetoothBroadcom\n   * BootCamp/Drivers/...\n     * 不要 删除 BootCamp/Drivers/Apple\n     * 苹果Wifi卡用户需要保留以下内容:\n       * BootCamp/Drivers/Broadcom/BroadcomBluetooth\n\n\n# 故障排除\n\n * 在选择器中找不到Windows/BootCamp驱动器\n * "您不能将启动磁盘更改为所选磁盘"错误\n * 启动Windows会导致蓝屏或Linux崩溃\n * 引导Windows错误:OCB: StartImage failed - Already started\n * Windows启动盘看不到APFS驱动器\n\n\n# 在选择器中找不到Windows/BootCamp驱动器\n\n因此，使用OpenCore，我们必须注意，传统的Windows安装不支持，只有UEFI。现在大多数安装是基于UEFI的，但是那些由BootCamp Assistant在macOS中制作的是基于legacy的，所以你必须找到其他方法来制作安装程序(谷歌是你的朋友)。这也意味着MasterBootRecord/Hybrid分区也被破坏了，所以你需要格式化你想安装到DiskUtility的驱动器。\n\n现在开始进行故障排除:\n\n * 确保 Misc -> Security -> ScanPolicy 设置为 0 以显示所有驱动器\n\n如果Windows和OpenCore的引导加载程序在同一个驱动器上，你需要添加一个BlessOverride条目:\n\nMisc -> BlessOverride -> \\EFI\\Microsoft\\Boot\\bootmgfw.efi\n\n\n * 注:从OpenCore 0.5.9开始，这个不再需要指定。OpenCore应该会自动发现这个条目\n\n\n\n\n# "您不能将启动磁盘更改为所选磁盘"错误\n\n这通常是由以下原因引起的:\n\n * 第三方NTFS驱动程序(即。Paragon)\n * Windows驱动器的不规则分区设置，特别是EFI不是第一个分区。\n\n要修复前者，要么禁用或卸载这些工具。\n\n要解决后者，我们需要启用这个选项:\n\n * PlatformInfo -> Generic -> AdviseFeatures -> True\n\n\n\n\n# 启动Windows会导致蓝屏或Linux崩溃\n\n这是由于对齐问题，请确保在支持MATs的固件上启用了SyncRuntimePermissions。检查你的日志，你的固件是否支持内存属性表(通常在2018年或更新的固件上看到)\n\n对于Z390和更新的主板，您还需要启用ProtectUefiServices以确保正确应用OpenCore的补丁。\n\n如果你的固件很旧(通常是2013年或更老)，你需要启用ProtectMemoryRegions。\n\n由于不同厂商的固件版本不尽相同，你需要尝试一下这3种特性的组合，看看哪一种效果最好。\n\n常见的Windows错误代码:\n\n * 0xc000000d\n\n\n# 引导Windows错误:OCB: StartImage failed - Already started\n\n这是由于OpenCore在尝试引导Windows时感到困惑，并意外地认为它正在引导OpenCore。这可以通过移动Windows到它自己的驱动器或在BlessOverride下添加一个自定义驱动器路径来避免。参见Configuration.pdf和在选择器中找不到Windows/BootCamp驱动器条目了解更多详细信息。\n\n\n# Windows启动盘看不到APFS驱动器\n\n * 过时的BootCamp驱动程序(通常6.0版本会附带brigadier, macOS中的BootCamp实用程序提供了较新的版本，如ver 6.1)。你可以尝试用苹果的软件更新程序更新到最新版本，或者从brigadier(也就是苹果电脑)选择更新的SMBIOS来缓解这些问题。（如’——iMac19,1’)和跑brigadier的时候。\n\n对于后者，你需要运行以下命令(将文件名.msi替换为BootCamp安装的msi):\n\nmsiexec.exe /x "c:\\filename.msi"\n',normalizedContent:'# 安装和使用bootcamp工具\n\nopencore的一个简洁特性是能够完全避免bios，只使用启动盘进行多引导。当我们试图引导windows，但没有办法将引导选项设置回macos时，问题就出现了。这就是bootcamp工具的用武之地。\n\n * 注意:本指南将不介绍windows安装程序的创建，只介绍bootcamp驱动程序的安装。\n   * 创建windows安装程序的例子:构建一个可引导的windows iso\n   * 提醒:windows 必须基于gpt/guid, opencore将不会引导legacy安装\n * 注意2:从macos使用bootcamp工具将擦除efi/boot/bootx64.efi文件，这是启动opencore所需的。而且opencore本身不支持基于mbr的安装，因此该实用程序对我们毫无用处\n\n\n# 准备工作\n\n首先，我们需要以下内容:\n\n * 已经安装windows\n   * 必须基于uefi / gpt\n * brigadier\n   * 下载bootcamp驱动程序\n * 设置[launcheroption] (../multiboot/bootstrap.md)\n   * 不是必需的，但可以帮助缓解opencore使用的bootx64.efi擦除windows时的头痛\n\n\n# 安装\n\n安装非常简单，只需获取brigadier并运行brigadier。windows使用.bat， macos使用brigadier.command。如果你当前使用的smbios有bootcamp问题，或者想下载另一个smbios，你可以在末尾添加——model{smbios}:\n\npath/to/brigadier --model macpro7,1\n\n\n * 注意:旧版本的bootcamp安装程序(6.0)不支持apfs，你需要选择一个更新的smbios将它捆绑(即。imac 19,1)或在安装后更新你的bootcamp软件。有关故障排除的更多细节请参见下面的内容:windows启动磁盘无法看到apfs驱动器\n\n\n\n接下来你会在下面找到我们的bootcamp驱动程序:\n\n * windows:\n\n\\users\\{username}\\bootcamp-{filename}\\bootcamp\n\n\n * macos:\n\n/users/{username}/bootcamp-{filename}/windowssupport.dmg\n\n\nmacos用户接下来需要扩展windowssupport.dmg，并把它放在windows可以得到的地方。\n\n\n\n接下来，在windows中，您有两个选择。\n\n要么导航到bootcamp-{filename}\\ bootcamp文件夹，然后运行setup. txt文件。这需要正确的smbios systemproductname欺骗-显示为系统模型在windows -以启动:\n\n\n\n或者，以管理员身份启动bootcamp-{filename}\\bootcamp\\drivers\\apple\\bootcamp.msi——例如，通过直接从管理员命令shell启动它——这将完全跳过bootcamp模型检查:\n\n\n\n一旦所有完成，你现在有bootcamp切换!在你的托盘中应该有一个小的bootcamp图标，现在你可以选择启动到哪个驱动器。\n\n * 注意:对于那些不需要bootcamp提供的额外驱动程序，你可以删除以下内容:\n   * $winpedriver$: 不要删除文件夹本身，只删除里面的驱动程序\n     * 苹果wifi卡用户需要保留以下内容:\n       * $winpedriver$/broadcomwireless\n       * $winpedriver$/broadcombluetooth\n       * $winpedriver$/applebluetoothbroadcom\n   * bootcamp/drivers/...\n     * 不要 删除 bootcamp/drivers/apple\n     * 苹果wifi卡用户需要保留以下内容:\n       * bootcamp/drivers/broadcom/broadcombluetooth\n\n\n# 故障排除\n\n * 在选择器中找不到windows/bootcamp驱动器\n * "您不能将启动磁盘更改为所选磁盘"错误\n * 启动windows会导致蓝屏或linux崩溃\n * 引导windows错误:ocb: startimage failed - already started\n * windows启动盘看不到apfs驱动器\n\n\n# 在选择器中找不到windows/bootcamp驱动器\n\n因此，使用opencore，我们必须注意，传统的windows安装不支持，只有uefi。现在大多数安装是基于uefi的，但是那些由bootcamp assistant在macos中制作的是基于legacy的，所以你必须找到其他方法来制作安装程序(谷歌是你的朋友)。这也意味着masterbootrecord/hybrid分区也被破坏了，所以你需要格式化你想安装到diskutility的驱动器。\n\n现在开始进行故障排除:\n\n * 确保 misc -> security -> scanpolicy 设置为 0 以显示所有驱动器\n\n如果windows和opencore的引导加载程序在同一个驱动器上，你需要添加一个blessoverride条目:\n\nmisc -> blessoverride -> \\efi\\microsoft\\boot\\bootmgfw.efi\n\n\n * 注:从opencore 0.5.9开始，这个不再需要指定。opencore应该会自动发现这个条目\n\n\n\n\n# "您不能将启动磁盘更改为所选磁盘"错误\n\n这通常是由以下原因引起的:\n\n * 第三方ntfs驱动程序(即。paragon)\n * windows驱动器的不规则分区设置，特别是efi不是第一个分区。\n\n要修复前者，要么禁用或卸载这些工具。\n\n要解决后者，我们需要启用这个选项:\n\n * platforminfo -> generic -> advisefeatures -> true\n\n\n\n\n# 启动windows会导致蓝屏或linux崩溃\n\n这是由于对齐问题，请确保在支持mats的固件上启用了syncruntimepermissions。检查你的日志，你的固件是否支持内存属性表(通常在2018年或更新的固件上看到)\n\n对于z390和更新的主板，您还需要启用protectuefiservices以确保正确应用opencore的补丁。\n\n如果你的固件很旧(通常是2013年或更老)，你需要启用protectmemoryregions。\n\n由于不同厂商的固件版本不尽相同，你需要尝试一下这3种特性的组合，看看哪一种效果最好。\n\n常见的windows错误代码:\n\n * 0xc000000d\n\n\n# 引导windows错误:ocb: startimage failed - already started\n\n这是由于opencore在尝试引导windows时感到困惑，并意外地认为它正在引导opencore。这可以通过移动windows到它自己的驱动器或在blessoverride下添加一个自定义驱动器路径来避免。参见configuration.pdf和在选择器中找不到windows/bootcamp驱动器条目了解更多详细信息。\n\n\n# windows启动盘看不到apfs驱动器\n\n * 过时的bootcamp驱动程序(通常6.0版本会附带brigadier, macos中的bootcamp实用程序提供了较新的版本，如ver 6.1)。你可以尝试用苹果的软件更新程序更新到最新版本，或者从brigadier(也就是苹果电脑)选择更新的smbios来缓解这些问题。（如’——imac19,1’)和跑brigadier的时候。\n\n对于后者，你需要运行以下命令(将文件名.msi替换为bootcamp安装的msi):\n\nmsiexec.exe /x "c:\\filename.msi"\n',charsets:{cjk:!0}},{title:"使用启动器选项",frontmatter:{},regularPath:"/multiboot/bootstrap.html",relativePath:"multiboot/bootstrap.md",key:"v-7995a69a",path:"/multiboot/bootstrap.html",headers:[{level:2,title:"前提条件",slug:"前提条件",normalizedTitle:"前提条件",charIndex:293},{level:2,title:"引导",slug:"引导",normalizedTitle:"引导",charIndex:88},{level:2,title:"故障排除",slug:"故障排除",normalizedTitle:"故障排除",charIndex:586},{level:3,title:"验证LauncherOption条目是否适用",slug:"验证launcheroption条目是否适用",normalizedTitle:"验证launcheroption条目是否适用",charIndex:885},{level:3,title:"从BIOS中删除启动器LauncherOption",slug:"从bios中删除启动器launcheroption",normalizedTitle:"从bios中删除启动器launcheroption",charIndex:1063},{level:2,title:"在0.6.6中更新Bootstrap",slug:"在0-6-6中更新bootstrap",normalizedTitle:"在0.6.6中更新bootstrap",charIndex:1316},{level:3,title:"禁用Bootstrap",slug:"禁用bootstrap",normalizedTitle:"禁用bootstrap",charIndex:1491},{level:3,title:"启用Bootstrap",slug:"启用bootstrap",normalizedTitle:"启用bootstrap",charIndex:1598}],lastUpdated:"2/14/2023, 5:12:00 PM",lastUpdatedTimestamp:167639472e4,headersStr:"前提条件 引导 故障排除 验证LauncherOption条目是否适用 从BIOS中删除启动器LauncherOption 在0.6.6中更新Bootstrap 禁用Bootstrap 启用Bootstrap",content:"# 使用启动器选项\n\n * 注意:在OpenCore 0.6.6中，Bootstrap.efi已被LauncherOption取代。查看这里关于更新的更多信息:在0.6.6更新引导\n\n使用OpenCore 0.6.6及更新版本，我们现在可以直接从我们的固件启动OpenCore，而不需要启动器(Bootstrap efi或BOOTx64.efi)作为中介。这允许我们将OpenCore添加到主板的启动菜单中，并防止Windows或Linux试图覆盖EFI/boot/BOOTx64.EFI路径的问题，这可能在安装或更新Windows时发生，从而破坏OpenCore的启动能力。\n\n\n# 前提条件\n\n\n\n * OpenCore 0.6.6 or newer\n   * 对于0.6.5和更老的用户升级，请参见这里:在0.6.6中更新引导\n * config.plist settings:\n   * Misc -> Boot -> LauncherOption = Full\n     * 使用 Short 使用\n   * UEFI -> Quirks -> RequestBootVarRouting = True\n * OpenShell\n   * 与OpenCore绑定\n   * 记得将此添加到EFI/OC/Tools和Misc -> Tools\n   * 这主要用于故障排除\n\n\n# 引导\n\n如果一切都正确设置，第一个启动将让OpenCore在我们的BIOS中创建一个新的启动选项(指向EFI/OC/OpenCore.EFI)，未来的启动将更新条目，以确保它是正确的，并确保它仍然存在。这现在允许我们删除BOOTx64 efi，而不必担心其他操作系统会覆盖efi/BOOT/BOOTx64.efi路径。\n\n\n# 故障排除\n\n如果没有创建新的引导选项，可以按照这些故障排除步骤进行，但首先要仔细检查是否满足了前提条件。以下部分是一个迷你指南，以防启动器选项不起作用或你想手动执行。\n\n * 验证启动程序选项条目是否适用\n * 从BIOS中删除启动器选项条目\n\n\n# 验证LauncherOption条目是否适用\n\n对于那些想要验证在OpenCore中应用的条目，启用日志记录(参见OpenCore调试)并检查类似于这些条目:\n\nOCB: Have existing option 1, valid 1\nOCB: Boot order has first option as the default option\n\n\n\n# 从BIOS中删除启动器LauncherOption\n\n因为启动器选项项在重置NVRAM时是受保护的项，所以你需要先禁用LauncherOption，然后才能删除它:\n\n * Misc -> Security -> AllowNvramReset -> True\n * Misc -> Boot -> LauncherOption -> Disabled\n\n一旦这些设置完毕，您可以重新启动进入OpenCore 选择器，并选择Reset NVRAM条目以清除您的NVRAM，这将删除启动器选项条目。\n\n\n# 在0.6.6中更新Bootstrap\n\n对于那些更新到0.6.6的人，您可能已经注意到Bootstrap.efi已从OpenCore中删除。这是由于OpenCore工作方式的改变;具体来说，OpenCore现在是一个UEFI应用程序而不是驱动程序。这意味着OpenCore.efi可以直接加载，不再需要启动器(Bootstrap.efi)。\n\n\n# 禁用Bootstrap\n\n如果Bootstrap在升级到0.6.6之前就被禁用了，那么你不需要做任何更改，只需要进行通常的文件交换即可。如果之后你想尝试LauncherOption，你可以这样做没有问题。\n\n\n# 启用Bootstrap\n\n如果Bootstrap是在升级到0.6.6之前启用的，并且你的主板固件会自动检测EFI/BOOT/BOOTx64.EFI，你可以在更新之前执行以下操作:\n\n 1. 设置Misc -> Security -> AllowNvramReset为True， Misc -> Security -> BootProtect为None，然后重置NVRAM(在OpenCore外部或内部)并启动。这将删除旧的Bootstrap启动项。\n\n 2. 更新您的OpenCore设置正常，确保您从OpenCore包复制BOOTx64.efi到efi/BOOT/BOOTx64.efi，并在config.plist中将Misc -> BOOT -> LauncherOption设置为Full(或Short，如果以前使用BootstrapShort)。\n\n 3. 重新启动\n    \n    在第一次启动时，您需要从EFI/boot/BOOTx64.EFI启动，但在后续启动时，您应该看到由OpenCore直接启动OpenCore.EFI创建的LauncherOption条目。\n\n如果您的固件不能自动检测EFI/BOOT/BOOTx64.EFI，或者您由于任何原因无法将OpenCore的启动器放在那里，您有多种其他选项:\n\n * 将OpenShell.efi放在USB上，重命名并移动到efi/BOOT/BOOTx64.efi，然后按照上面的步骤操作，只是不要从启动菜单中选择BOOTx64.efi，而是引导到USB并从那里直接启动OpenCore。\n * 添加一个文件夹EFI/OC/Bootstrap，并从OpenCore包中复制并重命名BOOTx64.EFI到EFI/OC/Bootstrap/Bootstrap.EFI。然后，在更新您的OpenCore设置后，将Misc -> Boot -> LauncherOption设置为适当的选项(Full，或Short，如果以前使用BootstrapShort)并使用由Bootstrap创建的现有条目引导OpenCore。第一次启动后，您应该看到添加了一个新的OpenCore启动条目。然后你可以在OpenCore中重置NVRAM(确保启用LauncherOption，这样你就不会删除新的条目)以删除旧的Bootstrap引导条目。\n\n转换说明:\n\n0.5.8 - 0.6.5                     0.6.6+\nMisc -> Security -> BootProtect   Misc -> Boot -> LauncherOption\nBootstrap                         Full\nBootstrapShort                    Short",normalizedContent:"# 使用启动器选项\n\n * 注意:在opencore 0.6.6中，bootstrap.efi已被launcheroption取代。查看这里关于更新的更多信息:在0.6.6更新引导\n\n使用opencore 0.6.6及更新版本，我们现在可以直接从我们的固件启动opencore，而不需要启动器(bootstrap efi或bootx64.efi)作为中介。这允许我们将opencore添加到主板的启动菜单中，并防止windows或linux试图覆盖efi/boot/bootx64.efi路径的问题，这可能在安装或更新windows时发生，从而破坏opencore的启动能力。\n\n\n# 前提条件\n\n\n\n * opencore 0.6.6 or newer\n   * 对于0.6.5和更老的用户升级，请参见这里:在0.6.6中更新引导\n * config.plist settings:\n   * misc -> boot -> launcheroption = full\n     * 使用 short 使用\n   * uefi -> quirks -> requestbootvarrouting = true\n * openshell\n   * 与opencore绑定\n   * 记得将此添加到efi/oc/tools和misc -> tools\n   * 这主要用于故障排除\n\n\n# 引导\n\n如果一切都正确设置，第一个启动将让opencore在我们的bios中创建一个新的启动选项(指向efi/oc/opencore.efi)，未来的启动将更新条目，以确保它是正确的，并确保它仍然存在。这现在允许我们删除bootx64 efi，而不必担心其他操作系统会覆盖efi/boot/bootx64.efi路径。\n\n\n# 故障排除\n\n如果没有创建新的引导选项，可以按照这些故障排除步骤进行，但首先要仔细检查是否满足了前提条件。以下部分是一个迷你指南，以防启动器选项不起作用或你想手动执行。\n\n * 验证启动程序选项条目是否适用\n * 从bios中删除启动器选项条目\n\n\n# 验证launcheroption条目是否适用\n\n对于那些想要验证在opencore中应用的条目，启用日志记录(参见opencore调试)并检查类似于这些条目:\n\nocb: have existing option 1, valid 1\nocb: boot order has first option as the default option\n\n\n\n# 从bios中删除启动器launcheroption\n\n因为启动器选项项在重置nvram时是受保护的项，所以你需要先禁用launcheroption，然后才能删除它:\n\n * misc -> security -> allownvramreset -> true\n * misc -> boot -> launcheroption -> disabled\n\n一旦这些设置完毕，您可以重新启动进入opencore 选择器，并选择reset nvram条目以清除您的nvram，这将删除启动器选项条目。\n\n\n# 在0.6.6中更新bootstrap\n\n对于那些更新到0.6.6的人，您可能已经注意到bootstrap.efi已从opencore中删除。这是由于opencore工作方式的改变;具体来说，opencore现在是一个uefi应用程序而不是驱动程序。这意味着opencore.efi可以直接加载，不再需要启动器(bootstrap.efi)。\n\n\n# 禁用bootstrap\n\n如果bootstrap在升级到0.6.6之前就被禁用了，那么你不需要做任何更改，只需要进行通常的文件交换即可。如果之后你想尝试launcheroption，你可以这样做没有问题。\n\n\n# 启用bootstrap\n\n如果bootstrap是在升级到0.6.6之前启用的，并且你的主板固件会自动检测efi/boot/bootx64.efi，你可以在更新之前执行以下操作:\n\n 1. 设置misc -> security -> allownvramreset为true， misc -> security -> bootprotect为none，然后重置nvram(在opencore外部或内部)并启动。这将删除旧的bootstrap启动项。\n\n 2. 更新您的opencore设置正常，确保您从opencore包复制bootx64.efi到efi/boot/bootx64.efi，并在config.plist中将misc -> boot -> launcheroption设置为full(或short，如果以前使用bootstrapshort)。\n\n 3. 重新启动\n    \n    在第一次启动时，您需要从efi/boot/bootx64.efi启动，但在后续启动时，您应该看到由opencore直接启动opencore.efi创建的launcheroption条目。\n\n如果您的固件不能自动检测efi/boot/bootx64.efi，或者您由于任何原因无法将opencore的启动器放在那里，您有多种其他选项:\n\n * 将openshell.efi放在usb上，重命名并移动到efi/boot/bootx64.efi，然后按照上面的步骤操作，只是不要从启动菜单中选择bootx64.efi，而是引导到usb并从那里直接启动opencore。\n * 添加一个文件夹efi/oc/bootstrap，并从opencore包中复制并重命名bootx64.efi到efi/oc/bootstrap/bootstrap.efi。然后，在更新您的opencore设置后，将misc -> boot -> launcheroption设置为适当的选项(full，或short，如果以前使用bootstrapshort)并使用由bootstrap创建的现有条目引导opencore。第一次启动后，您应该看到添加了一个新的opencore启动条目。然后你可以在opencore中重置nvram(确保启用launcheroption，这样你就不会删除新的条目)以删除旧的bootstrap引导条目。\n\n转换说明:\n\n0.5.8 - 0.6.5                     0.6.6+\nmisc -> security -> bootprotect   misc -> boot -> launcheroption\nbootstrap                         full\nbootstrapshort                    short",charsets:{cjk:!0}},{title:"修复AppleALC的音频",frontmatter:{},regularPath:"/universal/audio.html",relativePath:"universal/audio.md",key:"v-561f93b3",path:"/universal/audio.html",headers:[{level:2,title:"找到你的 layout ID",slug:"找到你的-layout-id",normalizedTitle:"找到你的 layout id",charIndex:241},{level:2,title:"测试你的布局",slug:"测试你的布局",normalizedTitle:"测试你的布局",charIndex:908},{level:2,title:"使 Layout ID 更永久",slug:"使-layout-id-更永久",normalizedTitle:"使 layout id 更永久",charIndex:1220},{level:2,title:"各种各样的问题",slug:"各种各样的问题",normalizedTitle:"各种各样的问题",charIndex:2008},{level:3,title:"AMD上没有麦克风",slug:"amd上没有麦克风",normalizedTitle:"amd上没有麦克风",charIndex:2020},{level:3,title:"来自Clover的相同布局ID在OpenCore上不起作用",slug:"来自clover的相同布局id在opencore上不起作用",normalizedTitle:"来自clover的相同布局id在opencore上不起作用",charIndex:2159},{level:3,title:"10.15中电源状态改变时的内核崩溃",slug:"_10-15中电源状态改变时的内核崩溃",normalizedTitle:"10.15中电源状态改变时的内核崩溃",charIndex:2353},{level:2,title:"故障诊断",slug:"故障诊断",normalizedTitle:"故障诊断",charIndex:2478},{level:3,title:"检查是否有正确的kext",slug:"检查是否有正确的kext",normalizedTitle:"检查是否有正确的kext",charIndex:2637},{level:3,title:"检查AppleALC是否正确打补丁",slug:"检查applealc是否正确打补丁",normalizedTitle:"检查applealc是否正确打补丁",charIndex:3415},{level:3,title:"检查AppleHDA是否正常",slug:"检查applehda是否正常",normalizedTitle:"检查applehda是否正常",charIndex:4170},{level:3,title:"AppleALC工作不一致",slug:"applealc工作不一致",normalizedTitle:"applealc工作不一致",charIndex:2569},{level:3,title:"AppleALC不能正确处理多个声卡",slug:"applealc不能正确处理多个声卡",normalizedTitle:"applealc不能正确处理多个声卡",charIndex:4667},{level:3,title:"重启Windows后AppleALC无法正常工作",slug:"重启windows后applealc无法正常工作",normalizedTitle:"重启windows后applealc无法正常工作",charIndex:5592}],lastUpdated:"2/14/2023, 5:12:00 PM",lastUpdatedTimestamp:167639472e4,headersStr:"找到你的 layout ID 测试你的布局 使 Layout ID 更永久 各种各样的问题 AMD上没有麦克风 来自Clover的相同布局ID在OpenCore上不起作用 10.15中电源状态改变时的内核崩溃 故障诊断 检查是否有正确的kext 检查AppleALC是否正确打补丁 检查AppleHDA是否正常 AppleALC工作不一致 AppleALC不能正确处理多个声卡 重启Windows后AppleALC无法正常工作",content:"# 修复AppleALC的音频\n\n首先，我们假设你已经安装了Lilu和AppleALC，如果你不确定它们是否被正确加载，你可以在终端中运行以下命令(这也会检查AppleHDA是否被加载，因为没有这个AppleALC就没有什么可以打补丁):\n\nkextstat | grep -E \"AppleHDA|AppleALC|Lilu\"\n\n\n如果3个都出现了，你就可以开始了。并确保VoodooHDA 不存在。否则这将与AppleALC冲突。\n\n如果您遇到问题，请参阅故障排除部分\n\n\n# 找到你的 layout ID\n\n在这个例子中，我们假设你的编解码器是ALC1220。要验证你的选择，你有两个选择:\n\n * 检查主板规格页和说明书\n * 检查Windows中的设备管理器\n * 在Windows中检查HWInfo64\n   * 打开时，请确保取消选择“仅限摘要”和“仅限传感器”\n * 在Windows中检查AIDA64 Extreme\n * 在Linux终端中运行cat\n   * cat /proc/asound/card0/codec#0 | less\n\n现在有了编解码器，我们需要将它与AppleALC支持的编解码器列表进行交叉引用:\n\n * AppleALC支持的编解码器\n\n使用ALC1220，我们得到以下结果:\n\n0x100003, layout 1, 2, 3, 5, 7, 11, 13, 15, 16, 21, 27, 28, 29, 34\n\n\n所以从这它告诉我们两件事:\n\n * 支持哪个硬件版本(0x100003)，仅当以不同布局列出多个版本时相关\n * 编解码器支持的各种布局id(layout 1, 2, 3, 5, 7, 11, 13, 15, 16, 21, 27, 28, 29, 34)\n\n现在有了一个受支持的布局id列表，我们准备进行一些尝试\n\n注意:如果你的音频编解码器是ALC 3XXX，这很可能是错误的，只是重新命名的控制器，请进行研究，看看实际的控制器是什么。\n\n * 一个这样的例子是ALC3601，但是当我们加载Linux时，真实的名称显示为:ALC 671\n\n\n# 测试你的布局\n\n为了测试我们的布局id，我们将使用引导参数alcid=xxx，其中xxx是你的布局。请记住，一次只尝试一个布局id。不要添加多个ID或alcid在boot-args中, 如果一个不工作，然后尝试下一个ID等\n\nconfig.plist\n├── NVRAM\n  ├── Add\n    ├── 7C436110-AB2A-4BBB-A880-FE41995C9F82\n          ├── boot-args | String | alcid=11\n\n\n如果没有布局ID工作，尝试为您的系统创建 SSDT-HPET fixes 这些在笔记本电脑和一些台式机上是必需的，以便AppleHDA工作。\n\n\n# 使 Layout ID 更永久\n\n一旦你找到了一个与你的黑苹果有效的布局ID，我们可以创建一个更永久的解决方案，更接近真实的mac如何设置他们的布局ID。\n\n在AppleALC中，有一个优先级层次结构来区分属性的优先级:\n\n 1. alcid=xxx 引导参数，用于调试和覆盖所有其他值\n 2. alc-layout-id 中的' alc-layout-id '， 只能在苹果硬件上使用\n 3. layout-id 中的' layout-id '， 应该在苹果和非苹果硬件上使用\n\n首先，我们需要找到音频控制器在PCI地图上的位置。为此，我们将使用一个名为 gfxutil 的方便工具，然后与macOS终端一起使用:\n\npath/to/gfxutil -f HDEF\n\n\n\n\n然后将这个带有子元素layout-id的PciRoot添加到配置中。\n\n\n\n注意AppleALC可以接受十进制/Number和十六进制/Data，通常最好的方法是十六进制，因为你可以避免任何不必要的转换。你可以使用一个简单的十进制到十六进制计算器 来找到你的答案。 printf '%x\\n' DECI_VAL:\n\n\n\n所以在这个例子中，alcid=11会变成:\n\n * layout-id | Data | <0B000000>\n * layout-id | Number | <11>\n\n请注意，最终的十六进制/数据值总共应该是4个字节。0B 00 00 00)，对于超过255的布局id (FF 00 00 00)需要记住字节是交换的。所以256会变成00 01 00 00\n\n * 使用Decimal/Number方法可以完全忽略十六进制交换和数据大小\n\n提醒:你必须删除引导参数，因为它总是优先级最高的，所以AppleALC会忽略所有其他条目，比如DeviceProperties\n\n\n# 各种各样的问题\n\n\n# AMD上没有麦克风\n\n * 这是AMD运行AppleALC时常见的问题，特别是没有补丁来支持Mic输入。目前“最好”的解决方案是购买USB DAC/Mic或使用VoodooHDA.kext方法。众所周知，VoodooHDA的问题是不稳定，音频质量比AppleALC更差\n\n\n# 来自Clover的相同布局ID在OpenCore上不起作用\n\n这可能会对IRQ冲突造成影响，在Clover上有一整套自动应用的ACPI热补丁。修复这个有点痛苦，但SSDTTime的 FixHPET 选项可以处理大多数情况。\n\n对于RTC和HPET从USB和音频等其他设备获取irq的奇怪情况，您可以参考trashOS仓库中的HP Compaq DC7900 ACPI 补丁 示例\n\n\n# 10.15中电源状态改变时的内核崩溃\n\n * 在config.plist中启用 PowerTimeoutKernelPanic\n   * Kernel -> Quirks -> PowerTimeoutKernelPanic -> True\n\n\n# 故障诊断\n\n对于故障诊断,我们需要复习几件事:\n\n * 检查你是否有正确的kexts\n * 检查AppleALC是否打补丁正确\n * 检查AppleHDA是否为vanilla\n * AppleALC工作不一致\n * AppleALC不能正确地使用多个声卡\n * AppleALC在Windows重启后不能工作\n\n\n# 检查是否有正确的kext\n\n首先，我们假设你已经安装了Lilu和AppleALC，如果你不确定它们是否被正确加载，你可以在终端中运行以下命令(这也会检查AppleHDA是否被加载，因为没有这个AppleALC就没有什么可以打补丁):\n\nkextstat | grep -E \"AppleHDA|AppleALC|Lilu\"\n\n\n如果3个都出现了，你就可以开始了。确保VoodooHDA 不存在。否则这将与AppleALC冲突。确保系统中没有的其他kext:\n\n * RealtekALC.kext\n * CloverALC.kext\n * VoodooHDA.kext\n * HDA Blocker.kext\n * HDAEnabler#.kext(# 可以是1、2或3)\n\n> 嘿，Lilu和/或AppleALC没有出现\n\n一般来说，最好的开始是通过查看你的OpenCore日志，看看Lilu和AppleALC是否正确注入:\n\n14:354 00:020 OC: Prelink injection Lilu.kext () - Success\n14:367 00:012 OC: Prelink injection AppleALC.kext () - Success\n\n\n如果它说注入失败:\n\n15:448 00:007 OC: Prelink injection AppleALC.kext () - Invalid Parameter\n\n\n你可以查看的主要地方是:\n\n * 注入顺序:确保Lilu在kext顺序上高于AppleALC\n * 所有的kext都是最新版本:对于Lilu插件尤其重要，因为不匹配的kext可能会导致问题\n\nNote: To setup file logging, see OpenCore Debugging.\n\n\n# 检查AppleALC是否正确打补丁\n\n所以对于AppleALC，检查补丁是否正确的最简单的事情之一是检查你的音频控制器是否被正确重命名。获取 IORegistryExplorer ，看看你是否有一个HDEF设备:\n\n\n\n正如你从上面的图像中看到的，我们有以下几点:\n\n * HDEF Device意味着我们的重命名完成了这项工作\n * AppleHDAController连接意味着Apple的音频kext连接成功\n * alc-layout-id是一个属性，表明我们的boot-arg/DeviceProperty注入成功\n   * 注意:layout-id | Data | 07000000是默认布局，alc-layout-id将覆盖它并成为AppleHDA使用的布局\n\n注意:不要手动重命名你的音频控制器，这可能会导致问题，因为AppleALC正在尝试打补丁。让AppleALC做它的工作。\n\nMore examples:\n\nCORRECT LAYOUT-ID   INCORRECT LAYOUT-ID\n                    \n\nAs you can see from the above 2, the right image is missing a lot of AppleHDAInput devices, meaning that AppleALC can't match up your physical ports to something it can understand and output to. This means you've got some work to find the right layout ID for your system.\n\n\n# 检查AppleHDA是否正常\n\n本节主要针对那些用定制AppleHDA替换了库里AppleHDA的人，这将验证你的AppleHDA是否为正品:\n\nsudo kextcache -i / && sudo kextcache -u /\n\n\n这将检查签名对AppleHDA是否有效，如果无效，则需要为你的系统获取AppleHDA的原始副本并替换它，或者更新macOS(更新时kext将被清除)。只有手动打过补丁的AppleHDA才会出现这种情况，所以如果是新安装，你的签名不太可能出现问题。\n\n\n# AppleALC工作不一致\n\n有时会出现一些罕见的情况，比如你的硬件没有及时初始化AppleHDAController，从而导致没有声音输出。要解决这个问题，你可以:\n\n在boot-args中指定延迟:\n\nalcdelay=1000\n\n\n或通过DeviceProperties(在你的HDEF设备中)指定:\n\nalc-delay | Number | 1000\n\n\n上面的引导参数/属性将使AppleHDAController延迟1000 ms(1秒)，注意ALC延迟不能超过3000 ms\n\n\n# AppleALC不能正确处理多个声卡\n\n在极少数情况下，你有2个声卡(例如内置Realtek和一个外部PCIe卡)，你可能想要避免使用你不使用或不需要补丁的AppleALC补丁设备(如本机PCIe卡)。如果你发现当外部音频控制器存在时，AppleALC不会给你的板载音频控制器打补丁，这一点尤其重要。\n\n为了解决这个问题，我们首先需要确定我们的音频控制器的位置。最简单的方法是运行 gfxutil并搜索PCI id:\n\n/path/to/gfxutil\n\n\n现在有了这个大输出，你需要找到你的PciRoot路径，例如，让我们使用创造性的Sound-Blaster AE-9PE PCIe声卡。为此，我们知道PCI ID是1102:0010。因此，查看我们的gfxutil输出，我们得到以下结果:\n\n66:00.0 1102:0010 /PC02@0/BR2A@0/SL05@0 = PciRoot(0x32)/Pci(0x0,0x0)/Pci(0x0,0x0)\n\n\n从这里，我们可以清楚地看到我们的PciRoot路径是:\n\nPciRoot(0x32)/Pci(0x0,0x0)/Pci(0x0,0x0)\n\n\n * 注意:这将假设您知道外部声卡的供应商和设备ID。作为参考，这些是常见的供应商id:\n   * Creative Labs: 1102\n   * AsusTek: 1043\n * 注意2:您的ACPI和PciRoot路径看起来不同，因此请注意您的 gfxutil输出\n\n现在我们有了我们的PciRoot路径，我们终于可以打开config.plist并添加我们的补丁。\n\n在DeviceProperties -> Add下，您将添加您的PciRoot(作为一个字典)与名为external-audio的子进程:\n\nDeviceProperties\n| --- > Add\n | --- > PciRoot(0x32)/Pci(0x0,0x0)/Pci(0x0,0x0)\n  | ----\x3e external-audio | Data | 01\n\n\n\n\n完成这些后，你可以重新启动，AppleALC现在应该会忽略你的外部音频控制器!\n\n\n# 重启Windows后AppleALC无法正常工作\n\n如果你发现从Windows重新启动到macOS中断了音频，我们建议在boot-args中添加alctcsel=1，或者在DeviceProperties中将此属性添加到你的音频设备:\n\nDeviceProperties\n| --- > Add\n | --- > PciRoot(0x32)/Pci(0x0,0x0)/Pci(0x0,0x0)(Adjust to your device)\n  | ----\x3e alctcsel | Data | 01000000\n",normalizedContent:"# 修复applealc的音频\n\n首先，我们假设你已经安装了lilu和applealc，如果你不确定它们是否被正确加载，你可以在终端中运行以下命令(这也会检查applehda是否被加载，因为没有这个applealc就没有什么可以打补丁):\n\nkextstat | grep -e \"applehda|applealc|lilu\"\n\n\n如果3个都出现了，你就可以开始了。并确保voodoohda 不存在。否则这将与applealc冲突。\n\n如果您遇到问题，请参阅故障排除部分\n\n\n# 找到你的 layout id\n\n在这个例子中，我们假设你的编解码器是alc1220。要验证你的选择，你有两个选择:\n\n * 检查主板规格页和说明书\n * 检查windows中的设备管理器\n * 在windows中检查hwinfo64\n   * 打开时，请确保取消选择“仅限摘要”和“仅限传感器”\n * 在windows中检查aida64 extreme\n * 在linux终端中运行cat\n   * cat /proc/asound/card0/codec#0 | less\n\n现在有了编解码器，我们需要将它与applealc支持的编解码器列表进行交叉引用:\n\n * applealc支持的编解码器\n\n使用alc1220，我们得到以下结果:\n\n0x100003, layout 1, 2, 3, 5, 7, 11, 13, 15, 16, 21, 27, 28, 29, 34\n\n\n所以从这它告诉我们两件事:\n\n * 支持哪个硬件版本(0x100003)，仅当以不同布局列出多个版本时相关\n * 编解码器支持的各种布局id(layout 1, 2, 3, 5, 7, 11, 13, 15, 16, 21, 27, 28, 29, 34)\n\n现在有了一个受支持的布局id列表，我们准备进行一些尝试\n\n注意:如果你的音频编解码器是alc 3xxx，这很可能是错误的，只是重新命名的控制器，请进行研究，看看实际的控制器是什么。\n\n * 一个这样的例子是alc3601，但是当我们加载linux时，真实的名称显示为:alc 671\n\n\n# 测试你的布局\n\n为了测试我们的布局id，我们将使用引导参数alcid=xxx，其中xxx是你的布局。请记住，一次只尝试一个布局id。不要添加多个id或alcid在boot-args中, 如果一个不工作，然后尝试下一个id等\n\nconfig.plist\n├── nvram\n  ├── add\n    ├── 7c436110-ab2a-4bbb-a880-fe41995c9f82\n          ├── boot-args | string | alcid=11\n\n\n如果没有布局id工作，尝试为您的系统创建 ssdt-hpet fixes 这些在笔记本电脑和一些台式机上是必需的，以便applehda工作。\n\n\n# 使 layout id 更永久\n\n一旦你找到了一个与你的黑苹果有效的布局id，我们可以创建一个更永久的解决方案，更接近真实的mac如何设置他们的布局id。\n\n在applealc中，有一个优先级层次结构来区分属性的优先级:\n\n 1. alcid=xxx 引导参数，用于调试和覆盖所有其他值\n 2. alc-layout-id 中的' alc-layout-id '， 只能在苹果硬件上使用\n 3. layout-id 中的' layout-id '， 应该在苹果和非苹果硬件上使用\n\n首先，我们需要找到音频控制器在pci地图上的位置。为此，我们将使用一个名为 gfxutil 的方便工具，然后与macos终端一起使用:\n\npath/to/gfxutil -f hdef\n\n\n\n\n然后将这个带有子元素layout-id的pciroot添加到配置中。\n\n\n\n注意applealc可以接受十进制/number和十六进制/data，通常最好的方法是十六进制，因为你可以避免任何不必要的转换。你可以使用一个简单的十进制到十六进制计算器 来找到你的答案。 printf '%x\\n' deci_val:\n\n\n\n所以在这个例子中，alcid=11会变成:\n\n * layout-id | data | <0b000000>\n * layout-id | number | <11>\n\n请注意，最终的十六进制/数据值总共应该是4个字节。0b 00 00 00)，对于超过255的布局id (ff 00 00 00)需要记住字节是交换的。所以256会变成00 01 00 00\n\n * 使用decimal/number方法可以完全忽略十六进制交换和数据大小\n\n提醒:你必须删除引导参数，因为它总是优先级最高的，所以applealc会忽略所有其他条目，比如deviceproperties\n\n\n# 各种各样的问题\n\n\n# amd上没有麦克风\n\n * 这是amd运行applealc时常见的问题，特别是没有补丁来支持mic输入。目前“最好”的解决方案是购买usb dac/mic或使用voodoohda.kext方法。众所周知，voodoohda的问题是不稳定，音频质量比applealc更差\n\n\n# 来自clover的相同布局id在opencore上不起作用\n\n这可能会对irq冲突造成影响，在clover上有一整套自动应用的acpi热补丁。修复这个有点痛苦，但ssdttime的 fixhpet 选项可以处理大多数情况。\n\n对于rtc和hpet从usb和音频等其他设备获取irq的奇怪情况，您可以参考trashos仓库中的hp compaq dc7900 acpi 补丁 示例\n\n\n# 10.15中电源状态改变时的内核崩溃\n\n * 在config.plist中启用 powertimeoutkernelpanic\n   * kernel -> quirks -> powertimeoutkernelpanic -> true\n\n\n# 故障诊断\n\n对于故障诊断,我们需要复习几件事:\n\n * 检查你是否有正确的kexts\n * 检查applealc是否打补丁正确\n * 检查applehda是否为vanilla\n * applealc工作不一致\n * applealc不能正确地使用多个声卡\n * applealc在windows重启后不能工作\n\n\n# 检查是否有正确的kext\n\n首先，我们假设你已经安装了lilu和applealc，如果你不确定它们是否被正确加载，你可以在终端中运行以下命令(这也会检查applehda是否被加载，因为没有这个applealc就没有什么可以打补丁):\n\nkextstat | grep -e \"applehda|applealc|lilu\"\n\n\n如果3个都出现了，你就可以开始了。确保voodoohda 不存在。否则这将与applealc冲突。确保系统中没有的其他kext:\n\n * realtekalc.kext\n * cloveralc.kext\n * voodoohda.kext\n * hda blocker.kext\n * hdaenabler#.kext(# 可以是1、2或3)\n\n> 嘿，lilu和/或applealc没有出现\n\n一般来说，最好的开始是通过查看你的opencore日志，看看lilu和applealc是否正确注入:\n\n14:354 00:020 oc: prelink injection lilu.kext () - success\n14:367 00:012 oc: prelink injection applealc.kext () - success\n\n\n如果它说注入失败:\n\n15:448 00:007 oc: prelink injection applealc.kext () - invalid parameter\n\n\n你可以查看的主要地方是:\n\n * 注入顺序:确保lilu在kext顺序上高于applealc\n * 所有的kext都是最新版本:对于lilu插件尤其重要，因为不匹配的kext可能会导致问题\n\nnote: to setup file logging, see opencore debugging.\n\n\n# 检查applealc是否正确打补丁\n\n所以对于applealc，检查补丁是否正确的最简单的事情之一是检查你的音频控制器是否被正确重命名。获取 ioregistryexplorer ，看看你是否有一个hdef设备:\n\n\n\n正如你从上面的图像中看到的，我们有以下几点:\n\n * hdef device意味着我们的重命名完成了这项工作\n * applehdacontroller连接意味着apple的音频kext连接成功\n * alc-layout-id是一个属性，表明我们的boot-arg/deviceproperty注入成功\n   * 注意:layout-id | data | 07000000是默认布局，alc-layout-id将覆盖它并成为applehda使用的布局\n\n注意:不要手动重命名你的音频控制器，这可能会导致问题，因为applealc正在尝试打补丁。让applealc做它的工作。\n\nmore examples:\n\ncorrect layout-id   incorrect layout-id\n                    \n\nas you can see from the above 2, the right image is missing a lot of applehdainput devices, meaning that applealc can't match up your physical ports to something it can understand and output to. this means you've got some work to find the right layout id for your system.\n\n\n# 检查applehda是否正常\n\n本节主要针对那些用定制applehda替换了库里applehda的人，这将验证你的applehda是否为正品:\n\nsudo kextcache -i / && sudo kextcache -u /\n\n\n这将检查签名对applehda是否有效，如果无效，则需要为你的系统获取applehda的原始副本并替换它，或者更新macos(更新时kext将被清除)。只有手动打过补丁的applehda才会出现这种情况，所以如果是新安装，你的签名不太可能出现问题。\n\n\n# applealc工作不一致\n\n有时会出现一些罕见的情况，比如你的硬件没有及时初始化applehdacontroller，从而导致没有声音输出。要解决这个问题，你可以:\n\n在boot-args中指定延迟:\n\nalcdelay=1000\n\n\n或通过deviceproperties(在你的hdef设备中)指定:\n\nalc-delay | number | 1000\n\n\n上面的引导参数/属性将使applehdacontroller延迟1000 ms(1秒)，注意alc延迟不能超过3000 ms\n\n\n# applealc不能正确处理多个声卡\n\n在极少数情况下，你有2个声卡(例如内置realtek和一个外部pcie卡)，你可能想要避免使用你不使用或不需要补丁的applealc补丁设备(如本机pcie卡)。如果你发现当外部音频控制器存在时，applealc不会给你的板载音频控制器打补丁，这一点尤其重要。\n\n为了解决这个问题，我们首先需要确定我们的音频控制器的位置。最简单的方法是运行 gfxutil并搜索pci id:\n\n/path/to/gfxutil\n\n\n现在有了这个大输出，你需要找到你的pciroot路径，例如，让我们使用创造性的sound-blaster ae-9pe pcie声卡。为此，我们知道pci id是1102:0010。因此，查看我们的gfxutil输出，我们得到以下结果:\n\n66:00.0 1102:0010 /pc02@0/br2a@0/sl05@0 = pciroot(0x32)/pci(0x0,0x0)/pci(0x0,0x0)\n\n\n从这里，我们可以清楚地看到我们的pciroot路径是:\n\npciroot(0x32)/pci(0x0,0x0)/pci(0x0,0x0)\n\n\n * 注意:这将假设您知道外部声卡的供应商和设备id。作为参考，这些是常见的供应商id:\n   * creative labs: 1102\n   * asustek: 1043\n * 注意2:您的acpi和pciroot路径看起来不同，因此请注意您的 gfxutil输出\n\n现在我们有了我们的pciroot路径，我们终于可以打开config.plist并添加我们的补丁。\n\n在deviceproperties -> add下，您将添加您的pciroot(作为一个字典)与名为external-audio的子进程:\n\ndeviceproperties\n| --- > add\n | --- > pciroot(0x32)/pci(0x0,0x0)/pci(0x0,0x0)\n  | ----\x3e external-audio | data | 01\n\n\n\n\n完成这些后，你可以重新启动，applealc现在应该会忽略你的外部音频控制器!\n\n\n# 重启windows后applealc无法正常工作\n\n如果你发现从windows重新启动到macos中断了音频，我们建议在boot-args中添加alctcsel=1，或者在deviceproperties中将此属性添加到你的音频设备:\n\ndeviceproperties\n| --- > add\n | --- > pciroot(0x32)/pci(0x0,0x0)/pci(0x0,0x0)(adjust to your device)\n  | ----\x3e alctcsel | data | 01000000\n",charsets:{cjk:!0}},{title:"修复DRM支持和iGPU性能",frontmatter:{},regularPath:"/universal/drm.html",relativePath:"universal/drm.md",key:"v-74fe7b93",path:"/universal/drm.html",headers:[{level:2,title:"测试硬件加速和解码",slug:"测试硬件加速和解码",normalizedTitle:"测试硬件加速和解码",charIndex:446},{level:2,title:"测试DRM",slug:"测试drm",normalizedTitle:"测试drm",charIndex:1766},{level:2,title:"修复DRM",slug:"修复drm",normalizedTitle:"修复drm",charIndex:2}],lastUpdated:"2/14/2023, 5:12:00 PM",lastUpdatedTimestamp:167639472e4,headersStr:"测试硬件加速和解码 测试DRM 修复DRM",content:'# 修复DRM支持和iGPU性能\n\n * 注意:Safari 14和macOS 11, Big Sur目前不受WhateverGreen的DRM补丁支持。不过，在卡特琳娜及更老版本的Safari 13支持得还不错。\n * 注2:浏览器不使用基于硬件的DRM (ie Mozilla Firefox或基于Chrome的浏览器，如谷歌Chrome和Microsoft Edge)将有工作的DRM，而无需在igpu和dgpu上进行任何工作。以下指南是使用基于硬件的DRM Safari和其他应用程序。\n\n关于DRM，我们有几点需要提一下:\n\n * DRM需要支持的dGPU\n   * 有关支持的卡，请参阅GPU购买者指南\n * 仅igpu系统的DRM损坏\n   * 这个问题可以在10.12.2之前用Shiki(现在的WhateverGreen)修复，但在10.12.3时被破坏了\n   * 这是由于我们的igpu不支持苹果的固件，我们的管理引擎 没有苹果的证书\n * 工作硬件加速和解码\n\n\n# 测试硬件加速和解码\n\n因此，在我们开始修复DRM之前，我们需要确保您的硬件是工作的。最好的检查方法是运行 VDADecoderChecker:\n\n\n\n如果你在这一点上失败了，你可以检查以下几点:\n\n * 确保您的硬件支持\n   * 参见GPU购买指南\n * 确保你正在运行的SMBIOS与你的硬件匹配\n   * 例如，不要在台式机上使用Mac Mini SMBIOS，因为Mac Mini运行的是移动硬件，所以macOS也会有同样的要求\n * 确保iGPU在BIOS中是启用的，并且具有正确的设置属性(AAPL,ig-platform-id，如果需要，device-id)\n   * 您可以查看指南中的DeviceProperties部分或WhateverGreen的手册\n * 避免不必要的ACPI重命名，所有重要的重命名都由WhateverGreen处理\n   * change GFX0 to IGPU\n   * change PEG0 to GFX0\n   * change HECI to IMEI\n   * 等\n * 确保Lilu和WhateverGreen已加载\n   * 确保没有任何遗留的图形补丁，因为它们已经被合并到WhateverGreen中:\n     * IntelGraphicsFixup.kext\n     * NvidiaGraphicsFixup.kext\n     * Shiki.kext\n\n检查Lilu和WhateverGreen是否正确加载:\n\nkextstat | grep -E "Lilu|WhateverGreen"\n\n\n> 这些kext中的一个或多个没有出现\n\n一般来说，最好的开始是通过查看你的OpenCore日志，看看Lilu和WhateverGreen是否正确注入:\n\n14:354 00:020 OC: Prelink injection Lilu.kext () - Success\n14:367 00:012 OC: Prelink injection WhateverGreen.kext () - Success\n\n\n如果它说注射失败:\n\n15:448 00:007 OC: Prelink injection WhateverGreen.kext () - Invalid Parameter\n\n\n你可以查看的主要地方是:\n\n * 注射顺序:确保Lilu在WhateverGreen上面\n * 所有的kext都是最新版本:对于Lilu插件尤其重要，因为不匹配的kext可能会导致问题\n\n注意:要设置文件日志，请参阅 OpenCore 调试.\n\n注:在macOS 10.15及更新版本上，AppleGVA调试默认是关闭的，如果你在运行VDADecoderChecker时得到一个通用错误，你可以使用以下命令打开调试:\n\ndefaults write com.apple.AppleGVA enableSyslog -boolean true\n\n\n并撤销此操作:\n\ndefaults delete com.apple.AppleGVA enableSyslog\n\n\n\n# 测试DRM\n\n因此，在我们深入讨论之前，我们需要回顾一些事情，主要是你将在现实中看到的DRM类型:\n\nFairPlay 1.x: 基于软件的DRM，可以更好地支持legacy mac\n\n * 最简单的测试方法是播放iTunes电影: FairPlay 1.x test\n   * FairPlay 1.x预告片将在任何配置上工作，如果WhateverGreen被正确设置-包括只有igpu的配置。然而，FairPlay 1.x 电影将只在仅支持igpu的配置上播放大约3-5秒，之后会误以为HDCP不支持。\n\nFairPlay 2.x/3.x: 基于硬件的DRM，可以在Netflix、Amazon Prime中找到\n\n * 有几个方法测试:\n   * 在Netflix或Amazon Prime上播放节目\n   * 播放 Amazon Prime 预告片: 蜘蛛侠: 英雄远征\n     * 预告片本身并不使用DRM，但亚马逊仍然会在播放前进行检查\n * 注意:需要更新的AMD GPU才能工作(Polaris+)\n\nFairPlay 4.x: 混合DRM，在AppleTV+上找到\n\n * 您可以打开TV.app，选择TV+ ->免费Apple TV+首映，然后点击任何一集进行测试，无需任何试用(您需要一个iCloud帐户)\n * 如果你想使用Apple TV+，也可以免费试用\n * 注意:需要没有iGPU (Xeon)或更新的AMD GPU工作(Polaris+)\n   * 当iGPU不存在时，可以强制FairPlay 1.x\n\n如果在这些测试中一切正常，则无需继续!否则,继续。\n\n\n# 修复DRM\n\n因此，要修复DRM，我们主要可以走一条路:为DRM打补丁，使用软件或AMD解码。Vit为不同的硬件配置制作了一个很棒的小图表:\n\n * WhateverGreen的DRM图标\n\n那么如何使用它呢?首先，确定你在图表中有什么配置(AMD代表GPU，而不是CPU)。列出的SMBIOS (IM = iMac, MM = Mac Mini, IMP = iMac Pro, MP = Mac Pro)是你应该使用的，如果你匹配硬件配置。如果你没有匹配图表中的任何配置，你就不走运了。\n\n接下来，确定你需要使用什么Shiki模式。如果您的设置有两种配置，它们将在使用的Shiki标志上有所不同。通常，硬件解码比软件解码更重要。如果mode列为空，则操作完成。否则，你应该使用DeviceProperties > add将shikigva作为属性添加到任何GPU。例如，如果我们需要使用的模式是shikigva=80:\n\n\n\n你也可以使用启动参数——它位于mode列中。\n\n这里有一个例子。如果我们有一个Intel i9-9900K和一个RX 560，配置将是“AMD+IGPU”，我们应该使用iMac或Mac Mini SMBIOS(对于这个特定的配置，iMac19,1)。然后我们看到配置有两个选项:一个是模式为shikigva=16，另一个是shikigva=80。我们在“Prime预告片”和“Prime/Netflix”中看到了区别。我们希望Netflix能正常工作，所以我们选择shikigva=80选项。然后将类型为数字/整数和值为80的shikigva注入到我们的iGPU或dGPU中，重新启动，DRM应该可以工作了。\n\n这是另一个例子。这次，我们有一个Ryzen 3700X和一个RX 480。在这种情况下，我们的配置只有“AMD”，我们应该使用iMac Pro或Mac Pro SMBIOS。同样，有两个选项:不设置shiki参数，以及设置shikigva=128。我们更喜欢硬件解码而不是软件解码，因此我们将选择shikigva=128选项，并再次将shikigva注入我们的dGPU，这次的值为128。重新启动后DRM开始工作。\n\n注意:\n\n * 你可以使用gfxutil找到iGPU/dGPU的路径。\n   \n   * path/to/gfxutil -f GFX0\n   * GFX0: 表示dGPUs，如果安装了多个，请检查IORegistryExplorer中AMD卡的名称\n   * IGPU: 表示IGPU\n\n * 如果你使用DeviceProperties注入shikigva，请确保只对一个GPU执行此操作，否则WhateverGreen将使用它首先找到的任何内容，并且不能保证一致性。\n\n * IQSV代表英特尔快速同步视频:这仅在iGPU存在并启用并正确设置时有效。\n\n * 特殊配置(如Haswell + AMD dGPU和iMac SMBIOS，但iGPU是禁用的)不在图表中。你必须自己做研究。\n\n * Shiki 来源 有助于理解标志的作用以及何时使用它们，并可能有助于特殊配置。\n\n * 对于Big Sur下的 VDADecoderCreate failed. err: -12473 错误,强制使用AMD解码器(在适用的系统上)可以帮助解决这个问题:\n   \n   defaults write com.apple.AppleGVA gvaForceAMDAVCDecode -boolean yes\n   ',normalizedContent:'# 修复drm支持和igpu性能\n\n * 注意:safari 14和macos 11, big sur目前不受whatevergreen的drm补丁支持。不过，在卡特琳娜及更老版本的safari 13支持得还不错。\n * 注2:浏览器不使用基于硬件的drm (ie mozilla firefox或基于chrome的浏览器，如谷歌chrome和microsoft edge)将有工作的drm，而无需在igpu和dgpu上进行任何工作。以下指南是使用基于硬件的drm safari和其他应用程序。\n\n关于drm，我们有几点需要提一下:\n\n * drm需要支持的dgpu\n   * 有关支持的卡，请参阅gpu购买者指南\n * 仅igpu系统的drm损坏\n   * 这个问题可以在10.12.2之前用shiki(现在的whatevergreen)修复，但在10.12.3时被破坏了\n   * 这是由于我们的igpu不支持苹果的固件，我们的管理引擎 没有苹果的证书\n * 工作硬件加速和解码\n\n\n# 测试硬件加速和解码\n\n因此，在我们开始修复drm之前，我们需要确保您的硬件是工作的。最好的检查方法是运行 vdadecoderchecker:\n\n\n\n如果你在这一点上失败了，你可以检查以下几点:\n\n * 确保您的硬件支持\n   * 参见gpu购买指南\n * 确保你正在运行的smbios与你的硬件匹配\n   * 例如，不要在台式机上使用mac mini smbios，因为mac mini运行的是移动硬件，所以macos也会有同样的要求\n * 确保igpu在bios中是启用的，并且具有正确的设置属性(aapl,ig-platform-id，如果需要，device-id)\n   * 您可以查看指南中的deviceproperties部分或whatevergreen的手册\n * 避免不必要的acpi重命名，所有重要的重命名都由whatevergreen处理\n   * change gfx0 to igpu\n   * change peg0 to gfx0\n   * change heci to imei\n   * 等\n * 确保lilu和whatevergreen已加载\n   * 确保没有任何遗留的图形补丁，因为它们已经被合并到whatevergreen中:\n     * intelgraphicsfixup.kext\n     * nvidiagraphicsfixup.kext\n     * shiki.kext\n\n检查lilu和whatevergreen是否正确加载:\n\nkextstat | grep -e "lilu|whatevergreen"\n\n\n> 这些kext中的一个或多个没有出现\n\n一般来说，最好的开始是通过查看你的opencore日志，看看lilu和whatevergreen是否正确注入:\n\n14:354 00:020 oc: prelink injection lilu.kext () - success\n14:367 00:012 oc: prelink injection whatevergreen.kext () - success\n\n\n如果它说注射失败:\n\n15:448 00:007 oc: prelink injection whatevergreen.kext () - invalid parameter\n\n\n你可以查看的主要地方是:\n\n * 注射顺序:确保lilu在whatevergreen上面\n * 所有的kext都是最新版本:对于lilu插件尤其重要，因为不匹配的kext可能会导致问题\n\n注意:要设置文件日志，请参阅 opencore 调试.\n\n注:在macos 10.15及更新版本上，applegva调试默认是关闭的，如果你在运行vdadecoderchecker时得到一个通用错误，你可以使用以下命令打开调试:\n\ndefaults write com.apple.applegva enablesyslog -boolean true\n\n\n并撤销此操作:\n\ndefaults delete com.apple.applegva enablesyslog\n\n\n\n# 测试drm\n\n因此，在我们深入讨论之前，我们需要回顾一些事情，主要是你将在现实中看到的drm类型:\n\nfairplay 1.x: 基于软件的drm，可以更好地支持legacy mac\n\n * 最简单的测试方法是播放itunes电影: fairplay 1.x test\n   * fairplay 1.x预告片将在任何配置上工作，如果whatevergreen被正确设置-包括只有igpu的配置。然而，fairplay 1.x 电影将只在仅支持igpu的配置上播放大约3-5秒，之后会误以为hdcp不支持。\n\nfairplay 2.x/3.x: 基于硬件的drm，可以在netflix、amazon prime中找到\n\n * 有几个方法测试:\n   * 在netflix或amazon prime上播放节目\n   * 播放 amazon prime 预告片: 蜘蛛侠: 英雄远征\n     * 预告片本身并不使用drm，但亚马逊仍然会在播放前进行检查\n * 注意:需要更新的amd gpu才能工作(polaris+)\n\nfairplay 4.x: 混合drm，在appletv+上找到\n\n * 您可以打开tv.app，选择tv+ ->免费apple tv+首映，然后点击任何一集进行测试，无需任何试用(您需要一个icloud帐户)\n * 如果你想使用apple tv+，也可以免费试用\n * 注意:需要没有igpu (xeon)或更新的amd gpu工作(polaris+)\n   * 当igpu不存在时，可以强制fairplay 1.x\n\n如果在这些测试中一切正常，则无需继续!否则,继续。\n\n\n# 修复drm\n\n因此，要修复drm，我们主要可以走一条路:为drm打补丁，使用软件或amd解码。vit为不同的硬件配置制作了一个很棒的小图表:\n\n * whatevergreen的drm图标\n\n那么如何使用它呢?首先，确定你在图表中有什么配置(amd代表gpu，而不是cpu)。列出的smbios (im = imac, mm = mac mini, imp = imac pro, mp = mac pro)是你应该使用的，如果你匹配硬件配置。如果你没有匹配图表中的任何配置，你就不走运了。\n\n接下来，确定你需要使用什么shiki模式。如果您的设置有两种配置，它们将在使用的shiki标志上有所不同。通常，硬件解码比软件解码更重要。如果mode列为空，则操作完成。否则，你应该使用deviceproperties > add将shikigva作为属性添加到任何gpu。例如，如果我们需要使用的模式是shikigva=80:\n\n\n\n你也可以使用启动参数——它位于mode列中。\n\n这里有一个例子。如果我们有一个intel i9-9900k和一个rx 560，配置将是“amd+igpu”，我们应该使用imac或mac mini smbios(对于这个特定的配置，imac19,1)。然后我们看到配置有两个选项:一个是模式为shikigva=16，另一个是shikigva=80。我们在“prime预告片”和“prime/netflix”中看到了区别。我们希望netflix能正常工作，所以我们选择shikigva=80选项。然后将类型为数字/整数和值为80的shikigva注入到我们的igpu或dgpu中，重新启动，drm应该可以工作了。\n\n这是另一个例子。这次，我们有一个ryzen 3700x和一个rx 480。在这种情况下，我们的配置只有“amd”，我们应该使用imac pro或mac pro smbios。同样，有两个选项:不设置shiki参数，以及设置shikigva=128。我们更喜欢硬件解码而不是软件解码，因此我们将选择shikigva=128选项，并再次将shikigva注入我们的dgpu，这次的值为128。重新启动后drm开始工作。\n\n注意:\n\n * 你可以使用gfxutil找到igpu/dgpu的路径。\n   \n   * path/to/gfxutil -f gfx0\n   * gfx0: 表示dgpus，如果安装了多个，请检查ioregistryexplorer中amd卡的名称\n   * igpu: 表示igpu\n\n * 如果你使用deviceproperties注入shikigva，请确保只对一个gpu执行此操作，否则whatevergreen将使用它首先找到的任何内容，并且不能保证一致性。\n\n * iqsv代表英特尔快速同步视频:这仅在igpu存在并启用并正确设置时有效。\n\n * 特殊配置(如haswell + amd dgpu和imac smbios，但igpu是禁用的)不在图表中。你必须自己做研究。\n\n * shiki 来源 有助于理解标志的作用以及何时使用它们，并可能有助于特殊配置。\n\n * 对于big sur下的 vdadecodercreate failed. err: -12473 错误,强制使用amd解码器(在适用的系统上)可以帮助解决这个问题:\n   \n   defaults write com.apple.applegva gvaforceamdavcdecode -boolean yes\n   ',charsets:{cjk:!0}},{title:"GPU Patching",frontmatter:{},regularPath:"/universal/gpu-patches.html",relativePath:"universal/gpu-patches.md",key:"v-b798945a",path:"/universal/gpu-patches.html",headers:[{level:2,title:"Converting a clover fakeID to OpenCore",slug:"converting-a-clover-fakeid-to-opencore",normalizedTitle:"converting a clover fakeid to opencore",charIndex:248},{level:2,title:"iGPU BusID Patching",slug:"igpu-busid-patching",normalizedTitle:"igpu busid patching",charIndex:324},{level:3,title:"Mapping video ports",slug:"mapping-video-ports",normalizedTitle:"mapping video ports",charIndex:2748},{level:3,title:"Adding to your config.plist",slug:"adding-to-your-config-plist",normalizedTitle:"adding to your config.plist",charIndex:3460}],lastUpdated:"2/14/2023, 5:12:00 PM",lastUpdatedTimestamp:167639472e4,headersStr:"Converting a clover fakeID to OpenCore iGPU BusID Patching Mapping video ports Adding to your config.plist",content:"# GPU Patching\n\nThis little section is for those who need more than what is provided by simple framebuffer patching and WhateverGreen's auto-patches:\n\n * Applying a fakeID for unsupported GPUs\n * iGPU BusID patching for 300 series motherboards\n\n\n# Converting a clover fakeID to OpenCore\n\nGuide moved here: Renaming GPUs\n\n\n# iGPU BusID Patching\n\nThis section is for users running \"true\" 300 series motherboards( B360, B365, H310, H370, Z390) who are having issues setting up their iGPU as a display out.\n\nSo to get started I'll assume you've already done basic framebuffer patches in your config from the Coffee Lake portion of the guide, it should look something like this:\n\n\n\n * Note: With macOS 10.15.5, there seems to be a lot of issues with black screen using 07009B3E, if you get similar issues try swapping to 00009B3E\n\nNow that we're prepped, we can start looking into busID patching. Checking the dumps at the official WhateverGreen repository shows us this for the 3E9B0007 ID(Desktop UHD 630):\n\nID: 3E9B0007, STOLEN: 57 MB, FBMEM: 0 bytes, VRAM: 1536 MB, Flags: 0x00801302\nTOTAL STOLEN: 58 MB, TOTAL CURSOR: 1 MB (1572864 bytes), MAX STOLEN: 172 MB, MAX OVERALL: 173 MB (181940224 bytes)\nGPU Name: Intel UHD Graphics 630\nModel Name(s):\nCamelia: Disabled\nMobile: 0, PipeCount: 3, PortCount: 3, FBMemoryCount: 3\n[1] busId: 0x05, pipe: 9, type: 0x00000400, flags: 0x000003C7 - DP\n[2] busId: 0x04, pipe: 10, type: 0x00000400, flags: 0x000003C7 - DP\n[3] busId: 0x06, pipe: 8, type: 0x00000400, flags: 0x000003C7 - DP\n01050900 00040000 C7030000\n02040A00 00040000 C7030000\n03060800 00040000 C7030000\n\n\nLooking at all this can be quite overwhelming, but we'll break it down to be a bit simpler. For use we care about this:\n\n[1] busId: 0x05, pipe: 9, type: 0x00000400, flags: 0x000003C7 - DP\n[2] busId: 0x04, pipe: 10, type: 0x00000400, flags: 0x000003C7 - DP\n[3] busId: 0x06, pipe: 8, type: 0x00000400, flags: 0x000003C7 - DP\n01050900 00040000 C7030000\n02040A00 00040000 C7030000\n03060800 00040000 C7030000\n\n\nThese are your iGPUs ports by default, lets go through port 1 and see what each section is used for:\n\nThe first port:\n\n01050900 00040000 C7030000\n\n\nPort: 01\n\n * 01050900 00040000 C7030000\n\nbusId: 0x05\n\n * 01050900 00040000 C7030000\n\nPipe Number 9 (little endian):\n\n * 01050900 00040000 C7030000\n\nConnector type: DisplayPort\n\n * 01050900 00040000 C7030000\n\nFlags - We leave it as default:\n\n * 01050900 00040000 C7030000\n\nThings to note:\n\n * You cannot use the same busId twice, having 2 in use will create conflicts\n * Pipe number and flags don't need to changed\n\nList of connector types:\n\n * 00 04 00 00 - DisplayPort\n * 00 08 00 00 - HDMI\n * 04 00 00 00 - Digital DVI\n * 02 00 00 00 - LVDS (for laptops)\n * 01 00 00 00 - Dummy port\n\n\n# Mapping video ports\n\n 1. Plug display into HDMI port\n\n 2. Set Port 1 to the HDMI connector type:\n    \n    * 01xx0900 00080000 C7030000\n\n 3. Disable ports 2 and 3 with busid=00:\n    \n    * 02000A00 00040000 C7030000\n    * 03000800 00040000 C7030000\n\n 4. Walk through busids for Port 1 if the previous didn't work(yup you gotta do a shit ton of reboots). The maximum busid on most platforms is 0x06\n    \n    * 01010900 00080000 C7030000\n    * 01020900 00080000 C7030000\n    * 01030900 00080000 C7030000\n    * etc\n\nIf you still get no output, set port 1's busid to 00 and start going through busids for port 2 and so on\n\n * 01000900 00040000 C7030000\n * 02xx0A00 00080000 C7030000\n * 03000800 00040000 C7030000\n\n\n# Adding to your config.plist\n\nSo adding these patches are simple though a bunch of entries are required:\n\n * framebuffer-con0-enable = 01000000\n * framebuffer-con1-enable = 01000000\n * framebuffer-con2-enable = 01000000\n * framebuffer-con0-alldata = port 1\n * framebuffer-con1-alldata = port 2\n * framebuffer-con2-alldata = port 3\n\nSo when adding the patches, port 1 will actually become con0 as the ports start at 0. These are also all data types when entering your values.\n\nA finished config should look something like this:\n\n\n\nSource for iGPU BusID patching: CorpNewt's Brain",normalizedContent:"# gpu patching\n\nthis little section is for those who need more than what is provided by simple framebuffer patching and whatevergreen's auto-patches:\n\n * applying a fakeid for unsupported gpus\n * igpu busid patching for 300 series motherboards\n\n\n# converting a clover fakeid to opencore\n\nguide moved here: renaming gpus\n\n\n# igpu busid patching\n\nthis section is for users running \"true\" 300 series motherboards( b360, b365, h310, h370, z390) who are having issues setting up their igpu as a display out.\n\nso to get started i'll assume you've already done basic framebuffer patches in your config from the coffee lake portion of the guide, it should look something like this:\n\n\n\n * note: with macos 10.15.5, there seems to be a lot of issues with black screen using 07009b3e, if you get similar issues try swapping to 00009b3e\n\nnow that we're prepped, we can start looking into busid patching. checking the dumps at the official whatevergreen repository shows us this for the 3e9b0007 id(desktop uhd 630):\n\nid: 3e9b0007, stolen: 57 mb, fbmem: 0 bytes, vram: 1536 mb, flags: 0x00801302\ntotal stolen: 58 mb, total cursor: 1 mb (1572864 bytes), max stolen: 172 mb, max overall: 173 mb (181940224 bytes)\ngpu name: intel uhd graphics 630\nmodel name(s):\ncamelia: disabled\nmobile: 0, pipecount: 3, portcount: 3, fbmemorycount: 3\n[1] busid: 0x05, pipe: 9, type: 0x00000400, flags: 0x000003c7 - dp\n[2] busid: 0x04, pipe: 10, type: 0x00000400, flags: 0x000003c7 - dp\n[3] busid: 0x06, pipe: 8, type: 0x00000400, flags: 0x000003c7 - dp\n01050900 00040000 c7030000\n02040a00 00040000 c7030000\n03060800 00040000 c7030000\n\n\nlooking at all this can be quite overwhelming, but we'll break it down to be a bit simpler. for use we care about this:\n\n[1] busid: 0x05, pipe: 9, type: 0x00000400, flags: 0x000003c7 - dp\n[2] busid: 0x04, pipe: 10, type: 0x00000400, flags: 0x000003c7 - dp\n[3] busid: 0x06, pipe: 8, type: 0x00000400, flags: 0x000003c7 - dp\n01050900 00040000 c7030000\n02040a00 00040000 c7030000\n03060800 00040000 c7030000\n\n\nthese are your igpus ports by default, lets go through port 1 and see what each section is used for:\n\nthe first port:\n\n01050900 00040000 c7030000\n\n\nport: 01\n\n * 01050900 00040000 c7030000\n\nbusid: 0x05\n\n * 01050900 00040000 c7030000\n\npipe number 9 (little endian):\n\n * 01050900 00040000 c7030000\n\nconnector type: displayport\n\n * 01050900 00040000 c7030000\n\nflags - we leave it as default:\n\n * 01050900 00040000 c7030000\n\nthings to note:\n\n * you cannot use the same busid twice, having 2 in use will create conflicts\n * pipe number and flags don't need to changed\n\nlist of connector types:\n\n * 00 04 00 00 - displayport\n * 00 08 00 00 - hdmi\n * 04 00 00 00 - digital dvi\n * 02 00 00 00 - lvds (for laptops)\n * 01 00 00 00 - dummy port\n\n\n# mapping video ports\n\n 1. plug display into hdmi port\n\n 2. set port 1 to the hdmi connector type:\n    \n    * 01xx0900 00080000 c7030000\n\n 3. disable ports 2 and 3 with busid=00:\n    \n    * 02000a00 00040000 c7030000\n    * 03000800 00040000 c7030000\n\n 4. walk through busids for port 1 if the previous didn't work(yup you gotta do a shit ton of reboots). the maximum busid on most platforms is 0x06\n    \n    * 01010900 00080000 c7030000\n    * 01020900 00080000 c7030000\n    * 01030900 00080000 c7030000\n    * etc\n\nif you still get no output, set port 1's busid to 00 and start going through busids for port 2 and so on\n\n * 01000900 00040000 c7030000\n * 02xx0a00 00080000 c7030000\n * 03000800 00040000 c7030000\n\n\n# adding to your config.plist\n\nso adding these patches are simple though a bunch of entries are required:\n\n * framebuffer-con0-enable = 01000000\n * framebuffer-con1-enable = 01000000\n * framebuffer-con2-enable = 01000000\n * framebuffer-con0-alldata = port 1\n * framebuffer-con1-alldata = port 2\n * framebuffer-con2-alldata = port 3\n\nso when adding the patches, port 1 will actually become con0 as the ports start at 0. these are also all data types when entering your values.\n\na finished config should look something like this:\n\n\n\nsource for igpu busid patching: corpnewt's brain",charsets:{}},{title:"使用OpenCore修复iMessage和其他服务",frontmatter:{},regularPath:"/universal/iservices.html",relativePath:"universal/iservices.md",key:"v-7a42fe5a",path:"/universal/iservices.html",headers:[{level:2,title:"使用GenSMBIOS",slug:"使用gensmbios",normalizedTitle:"使用gensmbios",charIndex:527},{level:2,title:"使用macserial",slug:"使用macserial",normalizedTitle:"使用macserial",charIndex:658},{level:2,title:"选择MAC地址",slug:"选择mac地址",normalizedTitle:"选择mac地址",charIndex:1272},{level:2,title:"获得相应的ROM值",slug:"获得相应的rom值",normalizedTitle:"获得相应的rom值",charIndex:1480},{level:2,title:"生成UUID",slug:"生成uuid",normalizedTitle:"生成uuid",charIndex:1582},{level:2,title:"序列号有效期",slug:"序列号有效期",normalizedTitle:"序列号有效期",charIndex:2435},{level:2,title:"修复 en0",slug:"修复-en0",normalizedTitle:"修复 en0",charIndex:3032},{level:3,title:"如果我根本没有En0怎么办?",slug:"如果我根本没有en0怎么办",normalizedTitle:"如果我根本没有en0怎么办?",charIndex:3235},{level:3,title:"使en0显示为内置",slug:"使en0显示为内置",normalizedTitle:"使en0显示为内置",charIndex:3600},{level:2,title:"修复ROM",slug:"修复rom",normalizedTitle:"修复rom",charIndex:3153},{level:2,title:"验证NVRAM",slug:"验证nvram",normalizedTitle:"验证nvram",charIndex:4241},{level:2,title:"清除旧的尝试",slug:"清除旧的尝试",normalizedTitle:"清除旧的尝试",charIndex:4450},{level:2,title:"最后一次验证你的工作",slug:"最后一次验证你的工作",normalizedTitle:"最后一次验证你的工作",charIndex:5436},{level:2,title:"清理你的AppleID",slug:"清理你的appleid",normalizedTitle:"清理你的appleid",charIndex:5543},{level:2,title:"客户代码错误",slug:"客户代码错误",normalizedTitle:"客户代码错误",charIndex:6088}],lastUpdated:"2/14/2023, 5:12:00 PM",lastUpdatedTimestamp:167639472e4,headersStr:"使用GenSMBIOS 使用macserial 选择MAC地址 获得相应的ROM值 生成UUID 序列号有效期 修复 en0 如果我根本没有En0怎么办? 使en0显示为内置 修复ROM 验证NVRAM 清除旧的尝试 最后一次验证你的工作 清理你的AppleID 客户代码错误",content:'# 使用OpenCore修复iMessage和其他服务\n\n这个页面是为那些有iMessage和其他iServices问题的人准备的，这是一个非常基本的指南，所以不会像其他一些指南那样深入讨论这些问题。本指南是对AppleLife修复服务指南的翻译和重新解释: Как завести сервисы Apple - iMessage, FaceTime, iCloud.\n\n你的Apple ID是使用iServices最具影响力的因素\n\n如果你的账户中有现有的苹果产品，比如iPhone，那么使用生成的串行集应该不会有任何问题。但是，如果你最近创建了一个账户，没有任何现有的苹果硬件或应用商店购买，你可能需要在尝试登录后打电话给苹果。\n\n下面将创建以下项目，这是使用iServices所必需的:\n\n * MLB\n * ROM*\n * SystemProductName\n * SystemSerialNumber\n * SystemUUID\n\n提示\n\n对于ROM，我们使用网络接口的MAC地址，小写，不含:。\n\n注意:你和你自己对你的AppleID负责，仔细阅读指南，如果你搞砸了，承担全部责任。Dortania和其他指南不会对你做的事情负责。\n\n\n# 使用GenSMBIOS\n\n下载GenSMBIOS并选择选项1下载MacSerial，选择下一个选项3生成一些新的series。我们要找的是一个没有注册购买日的有效序列号。\n\n提示: iMacPro1,1 10 将输出10个串行，这将节省您生成的时间\n\n\n\n\n# 使用macserial\n\n这是针对Linux用户的，也是使用GenSMBIOS的另一种选择。\n\n为你的型号生成一个新的 Serial 和 Board Serial (MLB)。\n\n要生成它，你需要macserial。\n\n您可以从这里下载OpenCorePkg的最新版本\n\n或者从源代码编译开发macserial\n\ngit clone --depth 1 https://github.com/acidanthera/OpenCorePkg.git\ncd ./OpenCorePkg/Utilities/macserial/\nmake\nchmod +x ./macserial\n\n\n在你的config.plist文件中找到你的SystemProductName。那是你的型号。\n\n用config.plist中的SystemProductName替换下面的"iMacPro1,1"。\n\n./macserial --num 1 --model "iMacPro1,1" \n\n\n示例输出:\n\n$ ./macserial \\\n        --model "iMacPro1,1" \nWarning: arc4random is not available!\nC02V7UYGHX87 | C02733401J9JG36A8\n\n\n左边的值是你的Serial number。 右边的值是你的Board Serial (MLB)。\n\n\n# 选择MAC地址\n\n选择一个具有组织唯一标识符(OUI)的MAC地址，该标识符对应于真实的Apple, Inc.接口。\n\n请看下面的列表:\n\nhttps://gitlab.com/wireshark/wireshark/-/raw/master/manuf\n\n例如:\n\n00:16:CB    Apple   Apple, Inc.\n\n\n组成最后3个八进制。\n\n例如:\n\n00:16:CB:00:11:22\n\n\n\n# 获得相应的ROM值\n\nROM是从你的MAC地址计算出来的。\n\nROM是从你的MAC地址计算出来的。\n\n例如:\n\nMAC: 00:16:CB:00:11:22\n\nROM: 0016cb001122\n\n\n# 生成UUID\n\n在终端中输入uuidgen\n\n$ uuidgen\n976AA603-75FC-456B-BC6D-9011BFB4968E\n\n\n然后简单地在config.plist中替换这些值:\n\nKEY                  DATA\nMLB                  C02733401J9JG36A8\nMac Address          00:16:CB:00:11:22\nROM                  0016cb001122\nSystemProductName    iMacPro1,1\nSystemSerialNumber   C02V7UYGHX87\nSystemUUID           976AA603-75FC-456B-BC6D-9011BFB4968E\n\n它应该看起来像这样:\n\n    <key>MLB</key>\n    <string>C02733401J9JG36A8</string>\n    <key>ROM</key>\n    <data>0016cb001122</data>\n    <key>SpoofVendor</key>\n    <true/>\n    <key>SystemProductName</key>\n    <string>iMacPro1,1</string>\n    <key>SystemSerialNumber</key>\n    <string>C02V7UYGHX87</string>\n    <key>SystemUUID</key>\n    <string>976AA603-75FC-456B-BC6D-9011BFB4968E</string>\n\n\n注意:如果你在使用App Store时有问题，你可能需要修复En0，这取决于你的硬件设置。\n\n全新的Apple ID几乎肯定无法使用。在你的账户中有其他真正的设备几乎总是有效的。\n\n如果您看到一个支持警告，请参见下面。\n\n\n# 序列号有效期\n\n现在将串行输入苹果检查覆盖页面，你将得到3个答复之一:\n\n很抱歉，我们无法查询这个序列号的覆盖范围。   有效的购买日期   购买日期未验证\n                                  \n\n提示\n\n复制并粘贴序列号，因为无效格式的序列号也将返回“我们很抱歉，我们无法检查这个序列号的覆盖范围。”\n\n第一个是我们想要的(你也可以使用第三个，但不建议使用，因为可能会与实际的Mac发生冲突)。现在我们可以将其余的值转换为config.plist -> PlatformInfo -> Generic:\n\n * Type = SystemProductName\n * Serial = SystemSerialNumber\n * Board Serial = MLB\n * SmUUID = SystemUUID\n\n注意\n\n虽然第一个选项适用于大多数情况，但请注意，如果你在Apple/iServices上有糟糕的记录，你可能需要一个“购买日期未验证”的选项。否则就会产生怀疑\n\n警告\n\n使用“购买日期未验证:”系列可能会在同一系列的另一台机器被激活时引起问题。对于初始设置，它可以帮助缓解您的帐户问题，但从长远来看，无效的串行可能是一个更安全的选择。\n\n提示\n\n检查太多的序列可能会导致速率受限。要绕过此限制，您可以尝试清除cookie或更改IP。\n\n\n# 修复 en0\n\n首先，获取Hackintool并前往系统 ->外设(信息 -> 杂项 在旧版本的Hackintool)\n\n在网络接口(网卡图标)下，在“BSD”下查找“en0”，并检查设备是否在“内置”下有复选标记。如果有一个复选标记，跳过到修复ROM部分，否则继续阅读。\n\n * 注意:en0可以是Wifi、ethernet甚至Thunderbolt。类型并不重要，只要它存在并标记为内置即可。\n\n\n# 如果我根本没有En0怎么办?\n\n好吧，我们要重置macOS的网络设置，这样它就可以重新构建界面;打开终端并运行以下命令:\n\nsudo rm /Library/Preferences/SystemConfiguration/NetworkInterfaces.plist\nsudo rm /Library/Preferences/SystemConfiguration/preferences.plist\n\n\n一旦完成，重启并再次检查。\n\n如果这不起作用，添加NullEthernet.kext和ssdt-rmne.aml分别到您的EFI和config.plist下的Kernel -> add和ACPI -> add。SSDT是预编译的，因此不需要额外的工作，提醒编译后的文件具有.aml扩展名，.dsl可以视为源代码。\n\n\n# 使en0显示为内置\n\n\n\n现在，在Hackintool的PCI选项卡下，导出PCI DeviceProperties，这将在桌面上创建一个pcidevices.plist\n\n\n\n现在搜索pcidevices.plist,找到你的PciRoot以太网控制器。对我们来说，这将是PciRoot(0x0)/Pci(0x1f,0x6)\n\n\n\n现在有了PciRoot，进入你的config plist -> DeviceProperties ->添加并应用built属性，类型为Data，值为01\n\n\n\n\n# 修复ROM\n\nT这是一个很多人可能已经忘记的部分，但它可以在你的 config.plist 文件 PlatformInfo -> Generic -> ROM 下看到\n\n要找到实际的MAC地址/ROM值，你可以在以下几个地方找到:\n\n * BIOS\n\n * macOS: 系统首选项—>网络—>以太网—>高级—>硬件—> MAC地址\n\n * Windows: 设置->网络和互联网->以太网->以太网->物理MAC地址\n\n * 注意:en0可以是Wifi、以太网甚至Thunderbolt，根据你的情况调整上面的例子。\n\n有些用户甚至使用真实的MAC地址转储来配置，在本指南中我们将使用真实的MAC地址，但请注意，这是另一种选择。\n\n当将其添加到你的配置中时，c0:7e:bf:c3:af:ff应该被转换为c07ebfc3afff，因为Data类型不能接受冒号(:)。\n\n\n\n\n# 验证NVRAM\n\n许多人忘记了NVRAM对iServices的正确工作至关重要，原因是iMessage密钥等都存储在NVRAM中。如果没有NVRAM, iMessage既不能看到也不能存储密钥。\n\n因此，我们需要验证NVRAM是否可以工作，不管它是否“应该工作”，因为某些固件可能比其他固件更麻烦。\n\n请参阅OpenCore指南的模拟NVRAM部分，以进行测试(如果您有可用的NVRAM)和模拟(如果没有)。\n\n\n# 清除旧的尝试\n\n对于那些尝试设置iMessage但失败的人来说，这很重要，首先要确保你的NVRAM已被清除。您可以在config plist -> Misc -> Security -> AllowNvramReset下启用AllowNvramReset选项。\n\n打开终端，运行如下命令:\n\nbash\nsudo rm -rf ~/Library/Caches/com.apple.iCloudHelper*\nsudo rm -rf ~/Library/Caches/com.apple.Messages*\nsudo rm -rf ~/Library/Caches/com.apple.imfoundation.IMRemoteURLConnectionAgent*\nsudo rm -rf ~/Library/Preferences/com.apple.iChat*\nsudo rm -rf ~/Library/Preferences/com.apple.icloud*\nsudo rm -rf ~/Library/Preferences/com.apple.imagent*\nsudo rm -rf ~/Library/Preferences/com.apple.imessage*\nsudo rm -rf ~/Library/Preferences/com.apple.imservice*\nsudo rm -rf ~/Library/Preferences/com.apple.ids.service*\nsudo rm -rf ~/Library/Preferences/com.apple.madrid.plist*\nsudo rm -rf ~/Library/Preferences/com.apple.imessage.bag.plist*\nsudo rm -rf ~/Library/Preferences/com.apple.identityserviced*\nsudo rm -rf ~/Library/Preferences/com.apple.ids.service*\nsudo rm -rf ~/Library/Preferences/com.apple.security*\nsudo rm -rf ~/Library/Messages\n\n\n\n# 最后一次验证你的工作\n\n从最新的OpenCore版本抓取macserial并运行以下命令:\n\npath/to/macserial -s\n\n\n这将为我们提供系统的完整概要，验证所呈现的内容与您的工作相匹配。\n\n\n# 清理你的AppleID\n\n * 从你的AppleID中删除所有设备:管理你的设备\n * 启用2 Factor-Auth\n * 从Keychain中删除所有iServices，例如:\n\nids: identity-rsa-key-pair-signature-v1\nids: identity-rsa-private-key\nids: identity-rsa-public-key\nids: message-protection-key\nids: message-protection-public-data-registered\nids: personal-public-key-cache\niMessage Encryption Key\niMessage Signing Key\ncom.apple.facetime: registrationV1\n等 ...\n\n\n最后一层预防措施是创建一个新的AppleID，以确保如果你最终将自己的账户列入黑名单，它不是你的主要账户。\n\n提示\n\n给账户加一张支付卡，有足够的购买量也会有所帮助。虽然不是具体的，但你可以把AppleID看作一个信用评分，你是一个越好的苹果用户，他们就越有可能不会出现激活问题，或者更容易获得苹果支持\n\n::\n\n\n# 客户代码错误\n\n好吧，伙计，你做到了。你的AppleID列入黑名单。解决方法很简单，但并不漂亮，你必须打电话给苹果。否则，除了使用新帐户之外，没有任何其他程序。在打电话之前添加一张支付卡可以帮助使账户合法化，这样它看起来就不那么像一个机器人了。\n\n\n\n * 苹果联系方式有两种\n   * Apple打电话给你:Apple Support。你必须点击Apple ID，然后选择iCloud、Facetime和Messages。现在，你应该点击“立即与苹果通话”并输入你的电话号码\n   * 您也可以联系苹果公司寻求支持和服务，在列表中查找您的国家，然后拨打电话:苹果支持电话号码',normalizedContent:'# 使用opencore修复imessage和其他服务\n\n这个页面是为那些有imessage和其他iservices问题的人准备的，这是一个非常基本的指南，所以不会像其他一些指南那样深入讨论这些问题。本指南是对applelife修复服务指南的翻译和重新解释: как завести сервисы apple - imessage, facetime, icloud.\n\n你的apple id是使用iservices最具影响力的因素\n\n如果你的账户中有现有的苹果产品，比如iphone，那么使用生成的串行集应该不会有任何问题。但是，如果你最近创建了一个账户，没有任何现有的苹果硬件或应用商店购买，你可能需要在尝试登录后打电话给苹果。\n\n下面将创建以下项目，这是使用iservices所必需的:\n\n * mlb\n * rom*\n * systemproductname\n * systemserialnumber\n * systemuuid\n\n提示\n\n对于rom，我们使用网络接口的mac地址，小写，不含:。\n\n注意:你和你自己对你的appleid负责，仔细阅读指南，如果你搞砸了，承担全部责任。dortania和其他指南不会对你做的事情负责。\n\n\n# 使用gensmbios\n\n下载gensmbios并选择选项1下载macserial，选择下一个选项3生成一些新的series。我们要找的是一个没有注册购买日的有效序列号。\n\n提示: imacpro1,1 10 将输出10个串行，这将节省您生成的时间\n\n\n\n\n# 使用macserial\n\n这是针对linux用户的，也是使用gensmbios的另一种选择。\n\n为你的型号生成一个新的 serial 和 board serial (mlb)。\n\n要生成它，你需要macserial。\n\n您可以从这里下载opencorepkg的最新版本\n\n或者从源代码编译开发macserial\n\ngit clone --depth 1 https://github.com/acidanthera/opencorepkg.git\ncd ./opencorepkg/utilities/macserial/\nmake\nchmod +x ./macserial\n\n\n在你的config.plist文件中找到你的systemproductname。那是你的型号。\n\n用config.plist中的systemproductname替换下面的"imacpro1,1"。\n\n./macserial --num 1 --model "imacpro1,1" \n\n\n示例输出:\n\n$ ./macserial \\\n        --model "imacpro1,1" \nwarning: arc4random is not available!\nc02v7uyghx87 | c02733401j9jg36a8\n\n\n左边的值是你的serial number。 右边的值是你的board serial (mlb)。\n\n\n# 选择mac地址\n\n选择一个具有组织唯一标识符(oui)的mac地址，该标识符对应于真实的apple, inc.接口。\n\n请看下面的列表:\n\nhttps://gitlab.com/wireshark/wireshark/-/raw/master/manuf\n\n例如:\n\n00:16:cb    apple   apple, inc.\n\n\n组成最后3个八进制。\n\n例如:\n\n00:16:cb:00:11:22\n\n\n\n# 获得相应的rom值\n\nrom是从你的mac地址计算出来的。\n\nrom是从你的mac地址计算出来的。\n\n例如:\n\nmac: 00:16:cb:00:11:22\n\nrom: 0016cb001122\n\n\n# 生成uuid\n\n在终端中输入uuidgen\n\n$ uuidgen\n976aa603-75fc-456b-bc6d-9011bfb4968e\n\n\n然后简单地在config.plist中替换这些值:\n\nkey                  data\nmlb                  c02733401j9jg36a8\nmac address          00:16:cb:00:11:22\nrom                  0016cb001122\nsystemproductname    imacpro1,1\nsystemserialnumber   c02v7uyghx87\nsystemuuid           976aa603-75fc-456b-bc6d-9011bfb4968e\n\n它应该看起来像这样:\n\n    <key>mlb</key>\n    <string>c02733401j9jg36a8</string>\n    <key>rom</key>\n    <data>0016cb001122</data>\n    <key>spoofvendor</key>\n    <true/>\n    <key>systemproductname</key>\n    <string>imacpro1,1</string>\n    <key>systemserialnumber</key>\n    <string>c02v7uyghx87</string>\n    <key>systemuuid</key>\n    <string>976aa603-75fc-456b-bc6d-9011bfb4968e</string>\n\n\n注意:如果你在使用app store时有问题，你可能需要修复en0，这取决于你的硬件设置。\n\n全新的apple id几乎肯定无法使用。在你的账户中有其他真正的设备几乎总是有效的。\n\n如果您看到一个支持警告，请参见下面。\n\n\n# 序列号有效期\n\n现在将串行输入苹果检查覆盖页面，你将得到3个答复之一:\n\n很抱歉，我们无法查询这个序列号的覆盖范围。   有效的购买日期   购买日期未验证\n                                  \n\n提示\n\n复制并粘贴序列号，因为无效格式的序列号也将返回“我们很抱歉，我们无法检查这个序列号的覆盖范围。”\n\n第一个是我们想要的(你也可以使用第三个，但不建议使用，因为可能会与实际的mac发生冲突)。现在我们可以将其余的值转换为config.plist -> platforminfo -> generic:\n\n * type = systemproductname\n * serial = systemserialnumber\n * board serial = mlb\n * smuuid = systemuuid\n\n注意\n\n虽然第一个选项适用于大多数情况，但请注意，如果你在apple/iservices上有糟糕的记录，你可能需要一个“购买日期未验证”的选项。否则就会产生怀疑\n\n警告\n\n使用“购买日期未验证:”系列可能会在同一系列的另一台机器被激活时引起问题。对于初始设置，它可以帮助缓解您的帐户问题，但从长远来看，无效的串行可能是一个更安全的选择。\n\n提示\n\n检查太多的序列可能会导致速率受限。要绕过此限制，您可以尝试清除cookie或更改ip。\n\n\n# 修复 en0\n\n首先，获取hackintool并前往系统 ->外设(信息 -> 杂项 在旧版本的hackintool)\n\n在网络接口(网卡图标)下，在“bsd”下查找“en0”，并检查设备是否在“内置”下有复选标记。如果有一个复选标记，跳过到修复rom部分，否则继续阅读。\n\n * 注意:en0可以是wifi、ethernet甚至thunderbolt。类型并不重要，只要它存在并标记为内置即可。\n\n\n# 如果我根本没有en0怎么办?\n\n好吧，我们要重置macos的网络设置，这样它就可以重新构建界面;打开终端并运行以下命令:\n\nsudo rm /library/preferences/systemconfiguration/networkinterfaces.plist\nsudo rm /library/preferences/systemconfiguration/preferences.plist\n\n\n一旦完成，重启并再次检查。\n\n如果这不起作用，添加nullethernet.kext和ssdt-rmne.aml分别到您的efi和config.plist下的kernel -> add和acpi -> add。ssdt是预编译的，因此不需要额外的工作，提醒编译后的文件具有.aml扩展名，.dsl可以视为源代码。\n\n\n# 使en0显示为内置\n\n\n\n现在，在hackintool的pci选项卡下，导出pci deviceproperties，这将在桌面上创建一个pcidevices.plist\n\n\n\n现在搜索pcidevices.plist,找到你的pciroot以太网控制器。对我们来说，这将是pciroot(0x0)/pci(0x1f,0x6)\n\n\n\n现在有了pciroot，进入你的config plist -> deviceproperties ->添加并应用built属性，类型为data，值为01\n\n\n\n\n# 修复rom\n\nt这是一个很多人可能已经忘记的部分，但它可以在你的 config.plist 文件 platforminfo -> generic -> rom 下看到\n\n要找到实际的mac地址/rom值，你可以在以下几个地方找到:\n\n * bios\n\n * macos: 系统首选项—>网络—>以太网—>高级—>硬件—> mac地址\n\n * windows: 设置->网络和互联网->以太网->以太网->物理mac地址\n\n * 注意:en0可以是wifi、以太网甚至thunderbolt，根据你的情况调整上面的例子。\n\n有些用户甚至使用真实的mac地址转储来配置，在本指南中我们将使用真实的mac地址，但请注意，这是另一种选择。\n\n当将其添加到你的配置中时，c0:7e:bf:c3:af:ff应该被转换为c07ebfc3afff，因为data类型不能接受冒号(:)。\n\n\n\n\n# 验证nvram\n\n许多人忘记了nvram对iservices的正确工作至关重要，原因是imessage密钥等都存储在nvram中。如果没有nvram, imessage既不能看到也不能存储密钥。\n\n因此，我们需要验证nvram是否可以工作，不管它是否“应该工作”，因为某些固件可能比其他固件更麻烦。\n\n请参阅opencore指南的模拟nvram部分，以进行测试(如果您有可用的nvram)和模拟(如果没有)。\n\n\n# 清除旧的尝试\n\n对于那些尝试设置imessage但失败的人来说，这很重要，首先要确保你的nvram已被清除。您可以在config plist -> misc -> security -> allownvramreset下启用allownvramreset选项。\n\n打开终端，运行如下命令:\n\nbash\nsudo rm -rf ~/library/caches/com.apple.icloudhelper*\nsudo rm -rf ~/library/caches/com.apple.messages*\nsudo rm -rf ~/library/caches/com.apple.imfoundation.imremoteurlconnectionagent*\nsudo rm -rf ~/library/preferences/com.apple.ichat*\nsudo rm -rf ~/library/preferences/com.apple.icloud*\nsudo rm -rf ~/library/preferences/com.apple.imagent*\nsudo rm -rf ~/library/preferences/com.apple.imessage*\nsudo rm -rf ~/library/preferences/com.apple.imservice*\nsudo rm -rf ~/library/preferences/com.apple.ids.service*\nsudo rm -rf ~/library/preferences/com.apple.madrid.plist*\nsudo rm -rf ~/library/preferences/com.apple.imessage.bag.plist*\nsudo rm -rf ~/library/preferences/com.apple.identityserviced*\nsudo rm -rf ~/library/preferences/com.apple.ids.service*\nsudo rm -rf ~/library/preferences/com.apple.security*\nsudo rm -rf ~/library/messages\n\n\n\n# 最后一次验证你的工作\n\n从最新的opencore版本抓取macserial并运行以下命令:\n\npath/to/macserial -s\n\n\n这将为我们提供系统的完整概要，验证所呈现的内容与您的工作相匹配。\n\n\n# 清理你的appleid\n\n * 从你的appleid中删除所有设备:管理你的设备\n * 启用2 factor-auth\n * 从keychain中删除所有iservices，例如:\n\nids: identity-rsa-key-pair-signature-v1\nids: identity-rsa-private-key\nids: identity-rsa-public-key\nids: message-protection-key\nids: message-protection-public-data-registered\nids: personal-public-key-cache\nimessage encryption key\nimessage signing key\ncom.apple.facetime: registrationv1\n等 ...\n\n\n最后一层预防措施是创建一个新的appleid，以确保如果你最终将自己的账户列入黑名单，它不是你的主要账户。\n\n提示\n\n给账户加一张支付卡，有足够的购买量也会有所帮助。虽然不是具体的，但你可以把appleid看作一个信用评分，你是一个越好的苹果用户，他们就越有可能不会出现激活问题，或者更容易获得苹果支持\n\n::\n\n\n# 客户代码错误\n\n好吧，伙计，你做到了。你的appleid列入黑名单。解决方法很简单，但并不漂亮，你必须打电话给苹果。否则，除了使用新帐户之外，没有任何其他程序。在打电话之前添加一张支付卡可以帮助使账户合法化，这样它看起来就不那么像一个机器人了。\n\n\n\n * 苹果联系方式有两种\n   * apple打电话给你:apple support。你必须点击apple id，然后选择icloud、facetime和messages。现在，你应该点击“立即与苹果通话”并输入你的电话号码\n   * 您也可以联系苹果公司寻求支持和服务，在列表中查找您的国家，然后拨打电话:苹果支持电话号码',charsets:{cyrillic:!0,cjk:!0}},{title:"修复MacPro7,1内存错误",frontmatter:{},regularPath:"/universal/memory.html",relativePath:"universal/memory.md",key:"v-ac0e9e56",path:"/universal/memory.html",headers:[{level:2,title:"映射我们的内存",slug:"映射我们的内存",normalizedTitle:"映射我们的内存",charIndex:242},{level:3,title:"DataWidth",slug:"datawidth",normalizedTitle:"datawidth",charIndex:439},{level:3,title:"ErrorCorrection",slug:"errorcorrection",normalizedTitle:"errorcorrection",charIndex:452},{level:3,title:"FormFactor",slug:"formfactor",normalizedTitle:"formfactor",charIndex:471},{level:3,title:"MaxCapacity",slug:"maxcapacity",normalizedTitle:"maxcapacity",charIndex:485},{level:3,title:"TotalWidth",slug:"totalwidth",normalizedTitle:"totalwidth",charIndex:500},{level:3,title:"Type",slug:"type",normalizedTitle:"type",charIndex:514},{level:3,title:"TypeDetail",slug:"typedetail",normalizedTitle:"typedetail",charIndex:522},{level:3,title:"Devices",slug:"devices",normalizedTitle:"devices",charIndex:536},{level:2,title:"清理",slug:"清理",normalizedTitle:"清理",charIndex:6449}],lastUpdated:"2/14/2023, 5:12:00 PM",lastUpdatedTimestamp:167639472e4,headersStr:"映射我们的内存 DataWidth ErrorCorrection FormFactor MaxCapacity TotalWidth Type TypeDetail Devices 清理",content:'# 修复MacPro7,1内存错误\n\n在macOS Catalina和更新版本上，MacPro7,1 SMBIOS的用户在每次引导时都会遇到以下错误:\n\n通知错误   关于此MAC错误\n       \n\n这个错误的确切原因有点未知，但是解决这个错误的方法是可行的。最常见的消除错误的方法是使用RestrictEvents，我们强烈建议所有用户使用这个kext。\n\n对于那些希望尝试传统映射方式的人，请参阅下面的指南。注意，这需要您手动映射所有内存，因此这将是一个耗时的过程。\n\n\n# 映射我们的内存\n\n首先，我们要获取以下文件:\n\n * CustomMemory.plist\n   * 在OpenCore使用CustomMemory的示例设置\n * dmidecode\n   * 在OpenCore使用CustomMemory的示例设置\n\n这是一个已经为你设置了属性的预制文件，一旦你打开它，你应该看到以下内容:\n\n\n\n从这里我们可以看到许多属性，让我们尝试将其分解:\n\n * DataWidth\n * ErrorCorrection\n * FormFactor\n * MaxCapacity\n * TotalWidth\n * Type\n * TypeDetail\n * Devices\n   * AssetTag\n   * BankLocator\n   * DeviceLocator\n   * Manufacturer\n   * PartNumber\n   * SerialNumber\n   * Size\n   * Speed\n * Cleaning up\n\n\n# DataWidth\n\n指定内存的数据宽度，以位为单位。数据宽度为0，总宽度为8，表示设备仅用于提供8个纠错位。\n\n要确定数据宽度，运行以下命令:\n\npath/to/dmidecode -t memory | grep "Data Width:"\n# 示例输出\n Data Width: 64 bits\n Data Width: Unknown\n Data Width: 64 bits\n Data Width: Unknown\n Data Width: 64 bits\n Data Width: Unknown\n Data Width: 64 bits\n Data Width: Unknown\n# 最终值\nDataWidth = 64\n\n\n\n# ErrorCorrection\n\n指定ECC支持:\n\n1 — Other\n2 — Unknown\n3 — None\n4 — Parity\n5 — Single-bit ECC\n6 — Multi-bit ECC\n7 — CRC\n\n\n运行下面的命令来确定错误修正:\n\npath/to/dmidecode -t memory | grep "Error Correction Type:"\n# 示例输出\n Error Correction Type: None\n# 最终值\nErrorCorrection = 3\n\n\n\n# FormFactor\n\n指定内存形式\n\n1  — Other\n2  — Unknown\n9  — DIMM\n13 — SODIMM\n15 — FB-DIMM\n\n\n运行如下命令来确定FormFactor:\n\npath/to/dmidecode -t memory | grep "Form Factor:"\n# 示例输出\n Form Factor: DIMM\n Form Factor: DIMM\n Form Factor: DIMM\n Form Factor: DIMM\n Form Factor: DIMM\n Form Factor: DIMM\n Form Factor: DIMM\n Form Factor: DIMM\n# 最终值\nFormFactor = 9\n\n\n\n# MaxCapacity\n\n指定系统中支持的最大内存\n\nType: Bytes\n\n8GB   - 8589934592\n16GB  - 17179869184\n32GB  - 34359738368\n64GB  - 68719476736\n128GB - 137438953472\n256GB - 274877906944\n\n\n\n# TotalWidth\n\n指定内存的总宽度(以位为单位)，包括任何检查或纠错位。如果没有纠错位，该值应该等于数据宽度。以上翻译结果来自有道神经网络翻译（YNMT）· 通用领域\n\n要确定TotalWidth，运行以下命令:\n\npath/to/dmidecode -t memory | grep "Total Width:"\n# 示例输出\n Total Width: 72 bits\n Total Width: Unknown\n Total Width: 72 bits\n Total Width: Unknown\n Total Width: 72 bits\n Total Width: Unknown\n Total Width: 72 bits\n Total Width: Unknown\n# 最终值\nTotalWidth = 72\n\n\n\n# Type\n\n指定内存类型\n\n1  — Other\n2  — Unknown\n15 — SDRAM\n18 — DDR\n19 — DDR2\n20 — DDR2 FB-DIMM\n24 — DDR3\n26 — DDR4\n27 — LPDDR\n28 — LPDDR2\n29 — LPDDR3\n30 — LPDDR4\n\n\n要确定Type，执行以下命令:\n\npath/to/dmidecode -t memory | grep "Type:"\n# 示例输出\n Type: DDR4\n Type: Unknown\n Type: DDR4\n Type: Unknown\n Type: DDR4\n Type: Unknown\n Type: DDR4\n Type: Unknown\n# 最终值\nType = 26\n\n\n\n# TypeDetail\n\n指定其他内存类型信息\n\nBit 0 — Reserved, set to 0\nBit 1 — Other\nBit 2 — Unknown\nBit 7 — Synchronous\nBit 13 — Registered (buffered)\nBit 14 — Unbuffered (unregistered)\n\n\n把所有适用的组合起来，例如:\n\nBit 13 — Registered (buffered)\nBit 14 — Unbuffered (unregistered)\n-----------------------------------\n27 = TypeDetail\n\n\n要确定TypeDetail，运行以下命令:\n\npath/to/dmidecode -t memory | grep "Type Detail:"\n# 示例输出\n Type Detail: Synchronous\n Type Detail: Synchronous\n Type Detail: Synchronous\n Type Detail: Synchronous\n Type Detail: Synchronous\n Type Detail: Synchronous\n Type Detail: Synchronous\n Type Detail: Synchronous\n# 最终值\nTypeDetail = 7\n\n\n\n# Devices\n\n存储设备的数组，我们在这里施展魔法来修复错误。在我提供的示例CustomMemory.plist中，我们在这里列出了12个插槽。然后，在macOS中打开System Profiler并查看Memory选项卡:\n\n\n\n在这里，我们可以看到哪些槽被内存填充了，哪些是空的。对于填充的插槽，只需阅读下面关于如何获取信息的内容。然而，对于空槽，你需要添加一些空白信息，以为macOS已经填充了设备。确保到最后，总共有12个插槽装满了设备。\n\n填充槽和假槽的例子:\n\n\n\n我们建议将Size和Speed都设置为1，以确保从内存中提取的应用程序不会混淆，因为您拥有的内存超过了应该使用的内存。\n\n接下来让我们分解属性:\n\n * AssetTag\n * BankLocator\n * DeviceLocator\n * Manufacturer\n * PartNumber\n * SerialNumber\n * Size\n * Speed\n\n# AssetTag\n\n要确定AssetTag，运行以下命令:\n\npath/to/dmidecode -t memory | grep "Asset Tag:"\n#示例输出\n\n# 最终值\n\n\n * 如果dmidecode打印出Not Specified，你可以将这个条目留空\n\n# BankLocator\n\nTo determine BankLocator, run the following:\n\npath/to/dmidecode -t memory | grep "Bank Locator:"\n#示例输出\n\n# 最终值\n\n\n * 如果dmidecode打印出Not Specified，你可以将这个条目留空\n\n# DeviceLocator\n\n要确定DeviceLocator，运行以下命令:\n\npath/to/dmidecode -t memory | grep "Locator:"\n#示例输出\n Locator: DIMM_A1\n Locator: DIMM_A2\n Locator: DIMM_B1\n Locator: DIMM_B2\n Locator: DIMM_C1\n Locator: DIMM_C2\n Locator: DIMM_D1\n Locator: DIMM_D2\n# 最终值\nEntry 1:  DIMM_A1\nEntry 2:  DIMM_A2\nEntry 3:  DIMM_B1\nEntry 4:  DIMM_B2\nEntry 5:  DIMM_C1\nEntry 6:  DIMM_C2\nEntry 7:  DIMM_D1\nEntry 8:  DIMM_D2\nEntry 9:  DIMM_EMPTY\nEntry 10: DIMM_EMPTY\nEntry 11: DIMM_EMPTY\nEntry 12: DIMM_EMPTY\n\n\n# Manufacturer\n\n要确定Manufacturer，运行以下命令:\n\npath/to/dmidecode -t memory | grep "Manufacturer:"\n#示例输出\n\n# 最终值\n\n\n# PartNumber\n\n要确定PartNumber，执行以下命令:\n\npath/to/dmidecode -t memory | grep "Part Number:"\n#示例输出\n Part Number: KHX2666C16/8G\n Part Number: NO DIMM\n Part Number: KHX2666C16/8G\n Part Number: NO DIMM\n Part Number: KHX2666C16/8G\n Part Number: NO DIMM\n Part Number: KHX2666C15D4/8G\n Part Number: NO DIMM\n# 最终值\nEntry 1:  KHX2666C16/8G\nEntry 2:  EmptyDIMM\nEntry 3:  KHX2666C16/8G\nEntry 4:  EmptyDIMM\nEntry 5:  KHX2666C16/8G\nEntry 6:  EmptyDIMM\nEntry 7:  KHX2666C15D4/8G\nEntry 8:  EmptyDIMM\nEntry 9:  EmptyDIMM\nEntry 10: EmptyDIMM\nEntry 11: EmptyDIMM\nEntry 12: EmptyDIMM\n\n\n# SerialNumber\n\n要确定SerialNumber，运行如下命令:\n\npath/to/dmidecode -t memory | grep "Serial Number:"\n#示例输出\n Serial Number: 0F095257\n Serial Number: NO DIMM\n Serial Number: 0C099A57\n Serial Number: NO DIMM\n Serial Number: 752EDED8\n Serial Number: NO DIMM\n Serial Number: A2032E84\n Serial Number: NO DIMM\n# 最终值\nEntry 1:  0F095257\nEntry 2:  EmptyDIMM\nEntry 3:  0C099A57\nEntry 4:  EmptyDIMM\nEntry 5:  752EDED8\nEntry 6:  EmptyDIMM\nEntry 7:  A2032E84\nEntry 8:  EmptyDIMM\nEntry 9:  EmptyDIMM\nEntry 10: EmptyDIMM\nEntry 11: EmptyDIMM\nEntry 12: EmptyDIMM\n\n\n# Size\n\n单个内存棒的大小(以MB为单位)\n\n1GB  - 1024\n2GB  - 2048\n4GB  - 4096\n8GB  - 8192\n16GB - 16384\n32GB - 32768\n64GB - 65536\n12GB - 131072\n\n\n要确定Size，运行以下命令:\n\npath/to/dmidecode -t memory | grep "Size:"\n#示例输出\n Size: 8 GB\n Size: No Module Installed\n Size: 8 GB\n Size: No Module Installed\n Size: 8 GB\n Size: No Module Installed\n Size: 8 GB\n Size: No Module Installed\n# 最终值\nEntry 1:  8192\nEntry 2:  1\nEntry 3:  8192\nEntry 4:  1\nEntry 5:  8192\nEntry 6:  1\nEntry 7:  8192\nEntry 8:  1\nEntry 9:  1\nEntry 10: 1\nEntry 11: 1\nEntry 12: 1\n\n\n# Speed\n\n以兆赫为单位的内存速度\n\nex: 3000Mhz\n\n要确定Speed，运行以下命令:\n\npath/to/dmidecode -t memory | grep "Speed:"\n#示例输出\n Speed: 2666 MT/s\n Speed: Unknown\n Speed: 2666 MT/s\n Speed: Unknown\n Speed: 2666 MT/s\n Speed: Unknown\n Speed: 2666 MT/s\n Speed: Unknown\n# 最终值\nEntry 1:  2666\nEntry 2:  1\nEntry 3:  2666\nEntry 4:  1\nEntry 5:  2666\nEntry 6:  1\nEntry 7:  2666\nEntry 8:  1\nEntry 9:  1\nEntry 10: 1\nEntry 11: 1\nEntry 12: 1\n\n\n\n# 清理\n\n现在已经构建了表，现在可以将它合并到config.plist中。\n\n只需从CustomMemory.plist复制你的工作并粘贴到platformminfo:\n\n\n\n复制完成后，启用PlatformInfo -> CustomMemory并重启。现在错误应该不会再出现了!\n\n提醒你必须用内存填充所有的12个槽，否则错误将不会消失:\n\n修复系统分析   修复关于此MAC\n         ',normalizedContent:'# 修复macpro7,1内存错误\n\n在macos catalina和更新版本上，macpro7,1 smbios的用户在每次引导时都会遇到以下错误:\n\n通知错误   关于此mac错误\n       \n\n这个错误的确切原因有点未知，但是解决这个错误的方法是可行的。最常见的消除错误的方法是使用restrictevents，我们强烈建议所有用户使用这个kext。\n\n对于那些希望尝试传统映射方式的人，请参阅下面的指南。注意，这需要您手动映射所有内存，因此这将是一个耗时的过程。\n\n\n# 映射我们的内存\n\n首先，我们要获取以下文件:\n\n * custommemory.plist\n   * 在opencore使用custommemory的示例设置\n * dmidecode\n   * 在opencore使用custommemory的示例设置\n\n这是一个已经为你设置了属性的预制文件，一旦你打开它，你应该看到以下内容:\n\n\n\n从这里我们可以看到许多属性，让我们尝试将其分解:\n\n * datawidth\n * errorcorrection\n * formfactor\n * maxcapacity\n * totalwidth\n * type\n * typedetail\n * devices\n   * assettag\n   * banklocator\n   * devicelocator\n   * manufacturer\n   * partnumber\n   * serialnumber\n   * size\n   * speed\n * cleaning up\n\n\n# datawidth\n\n指定内存的数据宽度，以位为单位。数据宽度为0，总宽度为8，表示设备仅用于提供8个纠错位。\n\n要确定数据宽度，运行以下命令:\n\npath/to/dmidecode -t memory | grep "data width:"\n# 示例输出\n data width: 64 bits\n data width: unknown\n data width: 64 bits\n data width: unknown\n data width: 64 bits\n data width: unknown\n data width: 64 bits\n data width: unknown\n# 最终值\ndatawidth = 64\n\n\n\n# errorcorrection\n\n指定ecc支持:\n\n1 — other\n2 — unknown\n3 — none\n4 — parity\n5 — single-bit ecc\n6 — multi-bit ecc\n7 — crc\n\n\n运行下面的命令来确定错误修正:\n\npath/to/dmidecode -t memory | grep "error correction type:"\n# 示例输出\n error correction type: none\n# 最终值\nerrorcorrection = 3\n\n\n\n# formfactor\n\n指定内存形式\n\n1  — other\n2  — unknown\n9  — dimm\n13 — sodimm\n15 — fb-dimm\n\n\n运行如下命令来确定formfactor:\n\npath/to/dmidecode -t memory | grep "form factor:"\n# 示例输出\n form factor: dimm\n form factor: dimm\n form factor: dimm\n form factor: dimm\n form factor: dimm\n form factor: dimm\n form factor: dimm\n form factor: dimm\n# 最终值\nformfactor = 9\n\n\n\n# maxcapacity\n\n指定系统中支持的最大内存\n\ntype: bytes\n\n8gb   - 8589934592\n16gb  - 17179869184\n32gb  - 34359738368\n64gb  - 68719476736\n128gb - 137438953472\n256gb - 274877906944\n\n\n\n# totalwidth\n\n指定内存的总宽度(以位为单位)，包括任何检查或纠错位。如果没有纠错位，该值应该等于数据宽度。以上翻译结果来自有道神经网络翻译（ynmt）· 通用领域\n\n要确定totalwidth，运行以下命令:\n\npath/to/dmidecode -t memory | grep "total width:"\n# 示例输出\n total width: 72 bits\n total width: unknown\n total width: 72 bits\n total width: unknown\n total width: 72 bits\n total width: unknown\n total width: 72 bits\n total width: unknown\n# 最终值\ntotalwidth = 72\n\n\n\n# type\n\n指定内存类型\n\n1  — other\n2  — unknown\n15 — sdram\n18 — ddr\n19 — ddr2\n20 — ddr2 fb-dimm\n24 — ddr3\n26 — ddr4\n27 — lpddr\n28 — lpddr2\n29 — lpddr3\n30 — lpddr4\n\n\n要确定type，执行以下命令:\n\npath/to/dmidecode -t memory | grep "type:"\n# 示例输出\n type: ddr4\n type: unknown\n type: ddr4\n type: unknown\n type: ddr4\n type: unknown\n type: ddr4\n type: unknown\n# 最终值\ntype = 26\n\n\n\n# typedetail\n\n指定其他内存类型信息\n\nbit 0 — reserved, set to 0\nbit 1 — other\nbit 2 — unknown\nbit 7 — synchronous\nbit 13 — registered (buffered)\nbit 14 — unbuffered (unregistered)\n\n\n把所有适用的组合起来，例如:\n\nbit 13 — registered (buffered)\nbit 14 — unbuffered (unregistered)\n-----------------------------------\n27 = typedetail\n\n\n要确定typedetail，运行以下命令:\n\npath/to/dmidecode -t memory | grep "type detail:"\n# 示例输出\n type detail: synchronous\n type detail: synchronous\n type detail: synchronous\n type detail: synchronous\n type detail: synchronous\n type detail: synchronous\n type detail: synchronous\n type detail: synchronous\n# 最终值\ntypedetail = 7\n\n\n\n# devices\n\n存储设备的数组，我们在这里施展魔法来修复错误。在我提供的示例custommemory.plist中，我们在这里列出了12个插槽。然后，在macos中打开system profiler并查看memory选项卡:\n\n\n\n在这里，我们可以看到哪些槽被内存填充了，哪些是空的。对于填充的插槽，只需阅读下面关于如何获取信息的内容。然而，对于空槽，你需要添加一些空白信息，以为macos已经填充了设备。确保到最后，总共有12个插槽装满了设备。\n\n填充槽和假槽的例子:\n\n\n\n我们建议将size和speed都设置为1，以确保从内存中提取的应用程序不会混淆，因为您拥有的内存超过了应该使用的内存。\n\n接下来让我们分解属性:\n\n * assettag\n * banklocator\n * devicelocator\n * manufacturer\n * partnumber\n * serialnumber\n * size\n * speed\n\n# assettag\n\n要确定assettag，运行以下命令:\n\npath/to/dmidecode -t memory | grep "asset tag:"\n#示例输出\n\n# 最终值\n\n\n * 如果dmidecode打印出not specified，你可以将这个条目留空\n\n# banklocator\n\nto determine banklocator, run the following:\n\npath/to/dmidecode -t memory | grep "bank locator:"\n#示例输出\n\n# 最终值\n\n\n * 如果dmidecode打印出not specified，你可以将这个条目留空\n\n# devicelocator\n\n要确定devicelocator，运行以下命令:\n\npath/to/dmidecode -t memory | grep "locator:"\n#示例输出\n locator: dimm_a1\n locator: dimm_a2\n locator: dimm_b1\n locator: dimm_b2\n locator: dimm_c1\n locator: dimm_c2\n locator: dimm_d1\n locator: dimm_d2\n# 最终值\nentry 1:  dimm_a1\nentry 2:  dimm_a2\nentry 3:  dimm_b1\nentry 4:  dimm_b2\nentry 5:  dimm_c1\nentry 6:  dimm_c2\nentry 7:  dimm_d1\nentry 8:  dimm_d2\nentry 9:  dimm_empty\nentry 10: dimm_empty\nentry 11: dimm_empty\nentry 12: dimm_empty\n\n\n# manufacturer\n\n要确定manufacturer，运行以下命令:\n\npath/to/dmidecode -t memory | grep "manufacturer:"\n#示例输出\n\n# 最终值\n\n\n# partnumber\n\n要确定partnumber，执行以下命令:\n\npath/to/dmidecode -t memory | grep "part number:"\n#示例输出\n part number: khx2666c16/8g\n part number: no dimm\n part number: khx2666c16/8g\n part number: no dimm\n part number: khx2666c16/8g\n part number: no dimm\n part number: khx2666c15d4/8g\n part number: no dimm\n# 最终值\nentry 1:  khx2666c16/8g\nentry 2:  emptydimm\nentry 3:  khx2666c16/8g\nentry 4:  emptydimm\nentry 5:  khx2666c16/8g\nentry 6:  emptydimm\nentry 7:  khx2666c15d4/8g\nentry 8:  emptydimm\nentry 9:  emptydimm\nentry 10: emptydimm\nentry 11: emptydimm\nentry 12: emptydimm\n\n\n# serialnumber\n\n要确定serialnumber，运行如下命令:\n\npath/to/dmidecode -t memory | grep "serial number:"\n#示例输出\n serial number: 0f095257\n serial number: no dimm\n serial number: 0c099a57\n serial number: no dimm\n serial number: 752eded8\n serial number: no dimm\n serial number: a2032e84\n serial number: no dimm\n# 最终值\nentry 1:  0f095257\nentry 2:  emptydimm\nentry 3:  0c099a57\nentry 4:  emptydimm\nentry 5:  752eded8\nentry 6:  emptydimm\nentry 7:  a2032e84\nentry 8:  emptydimm\nentry 9:  emptydimm\nentry 10: emptydimm\nentry 11: emptydimm\nentry 12: emptydimm\n\n\n# size\n\n单个内存棒的大小(以mb为单位)\n\n1gb  - 1024\n2gb  - 2048\n4gb  - 4096\n8gb  - 8192\n16gb - 16384\n32gb - 32768\n64gb - 65536\n12gb - 131072\n\n\n要确定size，运行以下命令:\n\npath/to/dmidecode -t memory | grep "size:"\n#示例输出\n size: 8 gb\n size: no module installed\n size: 8 gb\n size: no module installed\n size: 8 gb\n size: no module installed\n size: 8 gb\n size: no module installed\n# 最终值\nentry 1:  8192\nentry 2:  1\nentry 3:  8192\nentry 4:  1\nentry 5:  8192\nentry 6:  1\nentry 7:  8192\nentry 8:  1\nentry 9:  1\nentry 10: 1\nentry 11: 1\nentry 12: 1\n\n\n# speed\n\n以兆赫为单位的内存速度\n\nex: 3000mhz\n\n要确定speed，运行以下命令:\n\npath/to/dmidecode -t memory | grep "speed:"\n#示例输出\n speed: 2666 mt/s\n speed: unknown\n speed: 2666 mt/s\n speed: unknown\n speed: 2666 mt/s\n speed: unknown\n speed: 2666 mt/s\n speed: unknown\n# 最终值\nentry 1:  2666\nentry 2:  1\nentry 3:  2666\nentry 4:  1\nentry 5:  2666\nentry 6:  1\nentry 7:  2666\nentry 8:  1\nentry 9:  1\nentry 10: 1\nentry 11: 1\nentry 12: 1\n\n\n\n# 清理\n\n现在已经构建了表，现在可以将它合并到config.plist中。\n\n只需从custommemory.plist复制你的工作并粘贴到platformminfo:\n\n\n\n复制完成后，启用platforminfo -> custommemory并重启。现在错误应该不会再出现了!\n\n提醒你必须用内存填充所有的12个槽，否则错误将不会消失:\n\n修复系统分析   修复关于此mac\n         ',charsets:{cjk:!0}},{title:"将OpenCore从USB移动到macOS驱动器",frontmatter:{},regularPath:"/universal/oc2hdd.html",relativePath:"universal/oc2hdd.md",key:"v-b82dfbfa",path:"/universal/oc2hdd.html",headers:[{level:2,title:"从USB中抓取OpenCore",slug:"从usb中抓取opencore",normalizedTitle:"从usb中抓取opencore",charIndex:31},{level:2,title:"给老用户的特别提示",slug:"给老用户的特别提示",normalizedTitle:"给老用户的特别提示",charIndex:637}],lastUpdated:"2/14/2023, 5:12:00 PM",lastUpdatedTimestamp:167639472e4,headersStr:"从USB中抓取OpenCore 给老用户的特别提示",content:"# 将OpenCore从USB移动到macOS驱动器\n\n\n# 从USB中抓取OpenCore\n\n首先，我们要从安装程序中抓取OpenCore。为此，我们将使用CorpNewt提供的一个名为MountEFI的工具。\n\n在这个例子中，我们假设你的USB名为Install macOS Catalina:\n\n\n\n一旦EFI挂载完毕，我们就需要把EFI文件夹放在那里并保存在一个安全的地方。然后我们要弹出USB驱动器的EFI，因为挂载多个EFI有时会混淆macOS，最佳实践是一次只挂载一个EFI(你可以只弹出EFI，不需要删除驱动器本身)。\n\n注:在Windows上使用gibMacOS的MakeInstall bat制作的安装程序将默认到主引导记录(MBR)分区映射，这意味着没有专用的EFI分区，而是在macOS中默认挂载的Boot分区。\n\n\n\n现在完成这些，让我们挂载macOS驱动器。使用macOS Catalina, macOS实际上被划分为2个卷:系统分区和用户分区。这意味着MountEFI可以在它的选择器中报告多个驱动器，但每个分区仍然共享相同的EFI(UEFI规范只允许每个驱动器一个EFI)。你可以判断它和磁盘XsY是否是同一个驱动器(Y表示它是哪个分区)\n\n\n\n当你挂载主驱动器的EFI时，你可能会看到一个名为APPLE的文件夹，这是用于在真正的mac上更新固件，但对我们的硬件没有影响。你可以擦除EFI分区上的所有东西，用USB上找到的那个替换它\n\n\n# 给老用户的特别提示\n\n当传输EFI时，仍然有引导扇区需要写入，以便您的非uefi BIOS能够找到它。所以不要忘记在你的macOS上重新运行 BootInstallARCH.tool",normalizedContent:"# 将opencore从usb移动到macos驱动器\n\n\n# 从usb中抓取opencore\n\n首先，我们要从安装程序中抓取opencore。为此，我们将使用corpnewt提供的一个名为mountefi的工具。\n\n在这个例子中，我们假设你的usb名为install macos catalina:\n\n\n\n一旦efi挂载完毕，我们就需要把efi文件夹放在那里并保存在一个安全的地方。然后我们要弹出usb驱动器的efi，因为挂载多个efi有时会混淆macos，最佳实践是一次只挂载一个efi(你可以只弹出efi，不需要删除驱动器本身)。\n\n注:在windows上使用gibmacos的makeinstall bat制作的安装程序将默认到主引导记录(mbr)分区映射，这意味着没有专用的efi分区，而是在macos中默认挂载的boot分区。\n\n\n\n现在完成这些，让我们挂载macos驱动器。使用macos catalina, macos实际上被划分为2个卷:系统分区和用户分区。这意味着mountefi可以在它的选择器中报告多个驱动器，但每个分区仍然共享相同的efi(uefi规范只允许每个驱动器一个efi)。你可以判断它和磁盘xsy是否是同一个驱动器(y表示它是哪个分区)\n\n\n\n当你挂载主驱动器的efi时，你可能会看到一个名为apple的文件夹，这是用于在真正的mac上更新固件，但对我们的硬件没有影响。你可以擦除efi分区上的所有东西，用usb上找到的那个替换它\n\n\n# 给老用户的特别提示\n\n当传输efi时，仍然有引导扇区需要写入，以便您的非uefi bios能够找到它。所以不要忘记在你的macos上重新运行 bootinstallarch.tool",charsets:{cjk:!0}},{title:"优化电源管理",frontmatter:{},regularPath:"/universal/pm.html",relativePath:"universal/pm.md",key:"v-75168346",path:"/universal/pm.html",headers:[{level:2,title:"启用X86PlatformPlugin",slug:"启用x86platformplugin",normalizedTitle:"启用x86platformplugin",charIndex:13},{level:2,title:"手动修改电源管理数据",slug:"手动修改电源管理数据",normalizedTitle:"手动修改电源管理数据",charIndex:1175},{level:3,title:"使用CPUFriend",slug:"使用cpufriend",normalizedTitle:"使用cpufriend",charIndex:1284},{level:3,title:"LFM: 低频模式",slug:"lfm-低频模式",normalizedTitle:"lfm: 低频模式",charIndex:1543},{level:3,title:"EPP: 能源性能偏好",slug:"epp-能源性能偏好",normalizedTitle:"epp: 能源性能偏好",charIndex:2408},{level:3,title:"性能偏差",slug:"性能偏差",normalizedTitle:"性能偏差",charIndex:2689},{level:3,title:"清理",slug:"清理",normalizedTitle:"清理",charIndex:2769},{level:2,title:"Sandy 和 Ivy Bridge 电源管理",slug:"sandy-和-ivy-bridge-电源管理",normalizedTitle:"sandy 和 ivy bridge 电源管理",charIndex:146},{level:3,title:"ssdtPRgen故障诊断",slug:"ssdtprgen故障诊断",normalizedTitle:"ssdtprgen故障诊断",charIndex:5014},{level:3,title:"BIOS故障诊断",slug:"bios故障诊断",normalizedTitle:"bios故障诊断",charIndex:5893},{level:2,title:"AMD CPU电源管理",slug:"amd-cpu电源管理",normalizedTitle:"amd cpu电源管理",charIndex:5993}],lastUpdated:"2/14/2023, 5:12:00 PM",lastUpdatedTimestamp:167639472e4,headersStr:"启用X86PlatformPlugin 手动修改电源管理数据 使用CPUFriend LFM: 低频模式 EPP: 能源性能偏好 性能偏差 清理 Sandy 和 Ivy Bridge 电源管理 ssdtPRgen故障诊断 BIOS故障诊断 AMD CPU电源管理",content:'# 优化电源管理\n\n\n# 启用X86PlatformPlugin\n\n因此，在我们根据自己的喜好微调电源管理之前，我们需要首先确保加载了Apple的XCPM核心。请注意，仅在Haswell和更新的上支持**，Sandy, Ivy Bridge和AMD cpu的消费者应该参考以下内容:\n\n * Sandy 和 Ivy Bridge 电源管理\n * AMD CPU 电源管理\n\nIvy Bridge 和 Ivy Bridge-E 说明\n\n苹果在macOS Sierra上放弃了对XCPM的支持，所以XCPM只在10.8.5到10.11.6之间被支持。您仍然需要ssdtPRgen。\n\n要在10.11或更早的版本中启用XCPM，只需在引导参数中添加-xcpm。\n\n首先，抓取IORegistryExplorer并查找AppleACPICPU(注意，如果你使用搜索，IORegistryExplorer不会显示任何找到的子服务。一旦你找到了条目，请确保清除搜索框):\n\nXCPM 发现   XCPM 缺失\n          \n\n从左边的图片中可以看到，我们附加了X86PlatformPlugin。这意味着苹果的CPU电源管理驱动程序正在工作(CPU的名称并不重要)。如果您看到与右侧图像类似的内容，则可能存在问题。请务必检查以下内容:\n\n * SSDT-PLUG.aml 在你的config.plist和EFI/OC/ACPI中是否同时存在和启用\n   * 如果你没有这个，请前往开始使用ACPI了解如何制作它\n * 将SSDT-PLUG设置为CPU的第一个线程。你可以通过选择列出的第一个CPU(在我们的例子中是CP00)来进行检查，并确保你在属性中看到这一点:\n\n提示\n\nmacOS 12.3及以上版本不需要SSDT-PLUG。\n\nplugin-type | Number | 0x1\n\n\nX99 说明\n\nXCPM不支持Haswell-E和Broadwell-E，这意味着我们需要将CPU ID伪造成一个支持XCPM的模型:\n\n * Haswell-E:\n   \n   * Kernel -> Emulate:\n     * Cpuid1Data: C3060300 00000000 00000000 00000000\n     * Cpuid1Mask: FFFFFFFF 00000000 00000000 00000000\n\n * Broadwell-E:\n   \n   * Kernel -> Emulate:\n     * Cpuid1Data: D4060300 00000000 00000000 00000000\n     * Cpuid1Mask: FFFFFFFF 00000000 00000000 00000000\n\n\n# 手动修改电源管理数据\n\n在大多数情况下，macOS自带的CPU电源管理数据可以直接使用。如果您遇到问题，将SMBIOS更改为更适合您的系统的内容将提供不同的数据，并且可能更适合您的用例。在需要手动调优的情况下，大家可以使用CPUFriend注入修改过的电源管理数据，但如果不知道自己在做什么，可能会严重破坏电源管理。\n\n警告\n\n在大多数情况下，您不必这样做。请更改您的SMBIOS。\n\n提示\n\n这是一个关于如何更改部分电源管理数据的示例。要了解更多信息，请查看CPUFriend的文档.\n\n\n# 使用CPUFriend\n\n首先，我们需要一些东西:\n\n * X86PlatformPlugin 加载\n   * 这意味着Sandy Bridge和AMD cpu不支持\n * CPUFriend\n * CPUFriendFriend\n\n\n# LFM: 低频模式\n\n现在让我们运行CPUFriendFriend.command:\n\n\n\n第一次打开CPUFriendFriend时，会出现一个选择LFM值的提示。这可以看作是CPU的最低值，或者是CPU空闲的最低值。这个值可以极大地帮助睡眠正常工作，因为macOS需要能够轻松地从S3(睡眠)转换到S0(唤醒)。\n\n要确定您的LFM值，您可以:\n\n * 在英特尔的ARK网站上查找TDP-down Frequency\n   * 请注意，大多数cpu没有列出一个值，所以你需要自己确定\n * 或选择推荐值:\n\nGENERATION                              LFM VALUE   COMMENT\nBroadwell+ 笔记本                          08          相当于 800Mhz\nBroadwell+ 桌面                           0A          相当于 1000Mhz\nHaswell/Broadwell HEDT/Server(例如：X99)   0D          相当于 1300Mhz\nSkylake+ HEDT/Server(例如X299)            0C          相当于 1200Mhz\n\n * 注意:LFM值仅在Broadwell和更新的SMBIOS上可用\n * 注2:这些值并不是固定不变的，每台机器都有其独特的特性，所以你需要试验哪种最适合你的硬件\n\n对于这个例子，我们将使用i9 7920x，它具有2.9 GHz的基础时钟，但没有LFM，因此我们将选择1.3 GHz(即。1300 mhz),向上/向下,直到我们找到稳定的方式。\n\n * 请注意，LFM值只是CPU的乘数，因此您需要适当地调整值\n   * 例如。除以100，然后转换为十六进制\n\necho "obase=16; 13" | bc\n\n\n * 请注意，1.3Ghz时我们使用的是13，而不是1.3\n\n\n# EPP: 能源性能偏好\n\n\n\n接下来是能源性能偏好，EPP。这告诉macOS将CPU加速到其完整时钟的速度有多快。00会告诉macOS让CPU尽可能快地运行，而FF会告诉macOS慢慢来，让CPU在更长的一段时间内逐步上升。根据你正在做的事情和机器上的散热，你可能想要设置一个介于两者之间的东西。下面的图表可能会有所帮助:\n\nEPP         速度\n0x00-0x3F   最大性能\n0x40-0x7F   均衡性能\n0x80-0xBF   均衡功率\n0xC0-0xFF   最大节能\n\n注意:只有Skylake和更新的SMBIOS官方支持EPP\n\n\n# 性能偏差\n\n\n\n最后一项是帮助macOS确定你想从你的CPU中获得什么样的整体性能。一般的建议取决于您的具体设置，而试验确实有助于确定最适合您的设置。\n\n\n# 清理\n\n\n\n一旦完成，你将得到一个cpufrienddataprovider.kext和ssdt_data.aml。你可以根据自己的喜好选择，但我建议使用kext变体，以避免在Windows和Linux中进行数据注入时遇到麻烦。\n\n * 注意:CPUFriendDataProvider的加载顺序无关紧要，因为它是一个只有plist的kext\n * 注2:CPUFriend导致的唤醒问题可能是由于不正确的电源管理数据造成的。每个系统都是唯一的，所以你需要尝试，直到你得到一个稳定的配置。内核崩溃将显示Sleep Wake failure in efi.重用旧版本macOS的电源管理数据也会导致问题，所以如果你更新macOS，请重新创建你的数据。您可以创建多个数据并使用OpenCore的MinKernel/MaxKernel功能，以便为每个macOS版本加载不同的电源管理数据。\n * 注3:如果您选择使用ssdt_data.ml，请注意SSDT-PLUG不再需要。但是这个SSDT的设置在像X99和X299这样的HEDT平台上是有问题的，所以我们强烈推荐使用CPUFriendDataProvider的SSDT-plug.kext代替。\n\n\n# Sandy 和 Ivy Bridge 电源管理\n\n在Sandy和Ivy Bridge事件中，消费者电脑与苹果XCPM的连接出现了问题。所以为了解决这个问题我们需要创建自己的电源管理表。\n\n我们需要:\n\n * 确保CpuPm和Cpu0Ist表不会被删除\n * ssdtPRGen\n\n最初，在Ivy Bridge部分的设置中，我们建议用户删除他们的CpuPm和Cpu0Ist，以避免AppleIntelCPUPowerManagement.kext的任何问题。但删除这些表会对Windows中的turbo boost产生不利影响。因此，为了解决这个问题，我们希望保留OEM的表，但我们希望添加一个新表，以补充仅针对macOS的数据。所以一旦我们完成创建CPU-PM表,我们会重新添加OEM的CPU ssdt。\n\n首先，获取您的config.plist，然后转到ACPI -> Delete，并确保这两个部分的Enabled设置为“YES”:\n\nKEY              TYPE      VALUE\nAll              Boolean   YES\nComment          String    Drop CpuPm\nEnabled          Boolean   YES\nOemTableId       Data      437075506d000000\nTableLength      Number    0\nTableSignature   Data      53534454\nKey              Type      Value\n:---             :---      :---\nAll              Boolean   YES\nComment          String    Drop Cpu0Ist\nEnabled          Boolean   YES\nOemTableId       Data      4370753049737400\nTableLength      Number    0\nTableSignature   Data      53534454\n\n完成后，重新启动，然后获取ssdtPRGen并运行它:\n\n\n\n完成后，你将在/Users/your-name>/Library/ssdtPRGen/ssdt.dsl下得到一个SSDT.aml, 你可以用快捷键Cmd+Shift+G，然后粘贴~/Library/ssdtPRGen/找到它。\n\n\n\n记住现在将它添加到EFI/OC/ACPI和您的config.plist中，我建议将它重命名为SSDT-PM以更容易找到它。\n\n最后，我们可以禁用之前的ACPI -> Delete条目(\' Enabled \'设置为NO):\n\nKEY              TYPE      VALUE\nAll              Boolean   YES\nComment          String    Drop CpuPm\nEnabled          Boolean   NO\nOemTableId       Data      437075506d000000\nTableLength      Number    0\nTableSignature   Data      53534454\nKey              Type      Value\n:---             :---      :---\nAll              Boolean   YES\nComment          String    Drop Cpu0Ist\nEnabled          Boolean   NO\nOemTableId       Data      4370753049737400\nTableLength      Number    0\nTableSignature   Data      53534454\n\n\n# ssdtPRgen故障诊断\n\n虽然ssdtPRgen试图处理与OEM的SSDT的任何不兼容问题，但您可能会发现它在启动时仍然冲突，因为您的OEM已经在_INI或_DSM等部分声明了某些设备或方法。\n\n如果你在启动过程中发现，你会从SSDT-PM得到类似这样的错误:\n\nACPI Error: Method parse/execution failed [\\_SB._INI] , AE_ALREADY_EXIST\n\n\n这意味着存在一些冲突，为了解决这个问题，我们建议将ssdtPRgen的信息转换成如下格式:\n\nDefinitionBlock ("ssdt.aml", "SSDT", 1, "APPLE ", "CpuPm", 0x00021500)\n{\n    External (\\_PR_.CPU0, DeviceObj) // External Processor definition\n    External (\\_PR_.CPU1, DeviceObj) // External Processor definition\n\n    Scope (\\_PR_.CPU0) // Processor\'s scope\n    {\n        Name (APLF, Zero)\n        Name (APSN, 0x04)\n        Name (APSS, Package (0x20)\n        {\n            /*  … */\n        })\n\n        Method (ACST, 0, NotSerialized)\n        {\n            /*  … */\n        }\n\n        /*  … */\n    }\n\n\n请密切关注我们所做的事情:\n\n * 确保 Processor 对象被移动到 external\n * 将所有 methods 移动到 Processor\'s scope 内\n\n要编辑和重新编译SSDT-PM，请参阅这里:开始使用ACPI\n\n\n# BIOS故障诊断\n\n对于某些主板，可能需要确保为CPU电源管理设置了以下BIOS选项:\n\n * C States: True\n * P States Coordination: SW_ALL\n\n\n# AMD CPU电源管理\n\n虽然macOS可能没有正式支持AMD CPU电源管理，但社区正在努力添加它，特别是AMDRyzenCPUPowerManagement.\n\n警告:这个kext是不稳定的，如果你随机收到内核崩溃或启动问题，请记住这个kext可能是罪魁祸首。',normalizedContent:'# 优化电源管理\n\n\n# 启用x86platformplugin\n\n因此，在我们根据自己的喜好微调电源管理之前，我们需要首先确保加载了apple的xcpm核心。请注意，仅在haswell和更新的上支持**，sandy, ivy bridge和amd cpu的消费者应该参考以下内容:\n\n * sandy 和 ivy bridge 电源管理\n * amd cpu 电源管理\n\nivy bridge 和 ivy bridge-e 说明\n\n苹果在macos sierra上放弃了对xcpm的支持，所以xcpm只在10.8.5到10.11.6之间被支持。您仍然需要ssdtprgen。\n\n要在10.11或更早的版本中启用xcpm，只需在引导参数中添加-xcpm。\n\n首先，抓取ioregistryexplorer并查找appleacpicpu(注意，如果你使用搜索，ioregistryexplorer不会显示任何找到的子服务。一旦你找到了条目，请确保清除搜索框):\n\nxcpm 发现   xcpm 缺失\n          \n\n从左边的图片中可以看到，我们附加了x86platformplugin。这意味着苹果的cpu电源管理驱动程序正在工作(cpu的名称并不重要)。如果您看到与右侧图像类似的内容，则可能存在问题。请务必检查以下内容:\n\n * ssdt-plug.aml 在你的config.plist和efi/oc/acpi中是否同时存在和启用\n   * 如果你没有这个，请前往开始使用acpi了解如何制作它\n * 将ssdt-plug设置为cpu的第一个线程。你可以通过选择列出的第一个cpu(在我们的例子中是cp00)来进行检查，并确保你在属性中看到这一点:\n\n提示\n\nmacos 12.3及以上版本不需要ssdt-plug。\n\nplugin-type | number | 0x1\n\n\nx99 说明\n\nxcpm不支持haswell-e和broadwell-e，这意味着我们需要将cpu id伪造成一个支持xcpm的模型:\n\n * haswell-e:\n   \n   * kernel -> emulate:\n     * cpuid1data: c3060300 00000000 00000000 00000000\n     * cpuid1mask: ffffffff 00000000 00000000 00000000\n\n * broadwell-e:\n   \n   * kernel -> emulate:\n     * cpuid1data: d4060300 00000000 00000000 00000000\n     * cpuid1mask: ffffffff 00000000 00000000 00000000\n\n\n# 手动修改电源管理数据\n\n在大多数情况下，macos自带的cpu电源管理数据可以直接使用。如果您遇到问题，将smbios更改为更适合您的系统的内容将提供不同的数据，并且可能更适合您的用例。在需要手动调优的情况下，大家可以使用cpufriend注入修改过的电源管理数据，但如果不知道自己在做什么，可能会严重破坏电源管理。\n\n警告\n\n在大多数情况下，您不必这样做。请更改您的smbios。\n\n提示\n\n这是一个关于如何更改部分电源管理数据的示例。要了解更多信息，请查看cpufriend的文档.\n\n\n# 使用cpufriend\n\n首先，我们需要一些东西:\n\n * x86platformplugin 加载\n   * 这意味着sandy bridge和amd cpu不支持\n * cpufriend\n * cpufriendfriend\n\n\n# lfm: 低频模式\n\n现在让我们运行cpufriendfriend.command:\n\n\n\n第一次打开cpufriendfriend时，会出现一个选择lfm值的提示。这可以看作是cpu的最低值，或者是cpu空闲的最低值。这个值可以极大地帮助睡眠正常工作，因为macos需要能够轻松地从s3(睡眠)转换到s0(唤醒)。\n\n要确定您的lfm值，您可以:\n\n * 在英特尔的ark网站上查找tdp-down frequency\n   * 请注意，大多数cpu没有列出一个值，所以你需要自己确定\n * 或选择推荐值:\n\ngeneration                              lfm value   comment\nbroadwell+ 笔记本                          08          相当于 800mhz\nbroadwell+ 桌面                           0a          相当于 1000mhz\nhaswell/broadwell hedt/server(例如：x99)   0d          相当于 1300mhz\nskylake+ hedt/server(例如x299)            0c          相当于 1200mhz\n\n * 注意:lfm值仅在broadwell和更新的smbios上可用\n * 注2:这些值并不是固定不变的，每台机器都有其独特的特性，所以你需要试验哪种最适合你的硬件\n\n对于这个例子，我们将使用i9 7920x，它具有2.9 ghz的基础时钟，但没有lfm，因此我们将选择1.3 ghz(即。1300 mhz),向上/向下,直到我们找到稳定的方式。\n\n * 请注意，lfm值只是cpu的乘数，因此您需要适当地调整值\n   * 例如。除以100，然后转换为十六进制\n\necho "obase=16; 13" | bc\n\n\n * 请注意，1.3ghz时我们使用的是13，而不是1.3\n\n\n# epp: 能源性能偏好\n\n\n\n接下来是能源性能偏好，epp。这告诉macos将cpu加速到其完整时钟的速度有多快。00会告诉macos让cpu尽可能快地运行，而ff会告诉macos慢慢来，让cpu在更长的一段时间内逐步上升。根据你正在做的事情和机器上的散热，你可能想要设置一个介于两者之间的东西。下面的图表可能会有所帮助:\n\nepp         速度\n0x00-0x3f   最大性能\n0x40-0x7f   均衡性能\n0x80-0xbf   均衡功率\n0xc0-0xff   最大节能\n\n注意:只有skylake和更新的smbios官方支持epp\n\n\n# 性能偏差\n\n\n\n最后一项是帮助macos确定你想从你的cpu中获得什么样的整体性能。一般的建议取决于您的具体设置，而试验确实有助于确定最适合您的设置。\n\n\n# 清理\n\n\n\n一旦完成，你将得到一个cpufrienddataprovider.kext和ssdt_data.aml。你可以根据自己的喜好选择，但我建议使用kext变体，以避免在windows和linux中进行数据注入时遇到麻烦。\n\n * 注意:cpufrienddataprovider的加载顺序无关紧要，因为它是一个只有plist的kext\n * 注2:cpufriend导致的唤醒问题可能是由于不正确的电源管理数据造成的。每个系统都是唯一的，所以你需要尝试，直到你得到一个稳定的配置。内核崩溃将显示sleep wake failure in efi.重用旧版本macos的电源管理数据也会导致问题，所以如果你更新macos，请重新创建你的数据。您可以创建多个数据并使用opencore的minkernel/maxkernel功能，以便为每个macos版本加载不同的电源管理数据。\n * 注3:如果您选择使用ssdt_data.ml，请注意ssdt-plug不再需要。但是这个ssdt的设置在像x99和x299这样的hedt平台上是有问题的，所以我们强烈推荐使用cpufrienddataprovider的ssdt-plug.kext代替。\n\n\n# sandy 和 ivy bridge 电源管理\n\n在sandy和ivy bridge事件中，消费者电脑与苹果xcpm的连接出现了问题。所以为了解决这个问题我们需要创建自己的电源管理表。\n\n我们需要:\n\n * 确保cpupm和cpu0ist表不会被删除\n * ssdtprgen\n\n最初，在ivy bridge部分的设置中，我们建议用户删除他们的cpupm和cpu0ist，以避免appleintelcpupowermanagement.kext的任何问题。但删除这些表会对windows中的turbo boost产生不利影响。因此，为了解决这个问题，我们希望保留oem的表，但我们希望添加一个新表，以补充仅针对macos的数据。所以一旦我们完成创建cpu-pm表,我们会重新添加oem的cpu ssdt。\n\n首先，获取您的config.plist，然后转到acpi -> delete，并确保这两个部分的enabled设置为“yes”:\n\nkey              type      value\nall              boolean   yes\ncomment          string    drop cpupm\nenabled          boolean   yes\noemtableid       data      437075506d000000\ntablelength      number    0\ntablesignature   data      53534454\nkey              type      value\n:---             :---      :---\nall              boolean   yes\ncomment          string    drop cpu0ist\nenabled          boolean   yes\noemtableid       data      4370753049737400\ntablelength      number    0\ntablesignature   data      53534454\n\n完成后，重新启动，然后获取ssdtprgen并运行它:\n\n\n\n完成后，你将在/users/your-name>/library/ssdtprgen/ssdt.dsl下得到一个ssdt.aml, 你可以用快捷键cmd+shift+g，然后粘贴~/library/ssdtprgen/找到它。\n\n\n\n记住现在将它添加到efi/oc/acpi和您的config.plist中，我建议将它重命名为ssdt-pm以更容易找到它。\n\n最后，我们可以禁用之前的acpi -> delete条目(\' enabled \'设置为no):\n\nkey              type      value\nall              boolean   yes\ncomment          string    drop cpupm\nenabled          boolean   no\noemtableid       data      437075506d000000\ntablelength      number    0\ntablesignature   data      53534454\nkey              type      value\n:---             :---      :---\nall              boolean   yes\ncomment          string    drop cpu0ist\nenabled          boolean   no\noemtableid       data      4370753049737400\ntablelength      number    0\ntablesignature   data      53534454\n\n\n# ssdtprgen故障诊断\n\n虽然ssdtprgen试图处理与oem的ssdt的任何不兼容问题，但您可能会发现它在启动时仍然冲突，因为您的oem已经在_ini或_dsm等部分声明了某些设备或方法。\n\n如果你在启动过程中发现，你会从ssdt-pm得到类似这样的错误:\n\nacpi error: method parse/execution failed [\\_sb._ini] , ae_already_exist\n\n\n这意味着存在一些冲突，为了解决这个问题，我们建议将ssdtprgen的信息转换成如下格式:\n\ndefinitionblock ("ssdt.aml", "ssdt", 1, "apple ", "cpupm", 0x00021500)\n{\n    external (\\_pr_.cpu0, deviceobj) // external processor definition\n    external (\\_pr_.cpu1, deviceobj) // external processor definition\n\n    scope (\\_pr_.cpu0) // processor\'s scope\n    {\n        name (aplf, zero)\n        name (apsn, 0x04)\n        name (apss, package (0x20)\n        {\n            /*  … */\n        })\n\n        method (acst, 0, notserialized)\n        {\n            /*  … */\n        }\n\n        /*  … */\n    }\n\n\n请密切关注我们所做的事情:\n\n * 确保 processor 对象被移动到 external\n * 将所有 methods 移动到 processor\'s scope 内\n\n要编辑和重新编译ssdt-pm，请参阅这里:开始使用acpi\n\n\n# bios故障诊断\n\n对于某些主板，可能需要确保为cpu电源管理设置了以下bios选项:\n\n * c states: true\n * p states coordination: sw_all\n\n\n# amd cpu电源管理\n\n虽然macos可能没有正式支持amd cpu电源管理，但社区正在努力添加它，特别是amdryzencpupowermanagement.\n\n警告:这个kext是不稳定的，如果你随机收到内核崩溃或启动问题，请记住这个kext可能是罪魁祸首。',charsets:{cjk:!0}},{title:"安全性和FileVault",frontmatter:{},regularPath:"/universal/security.html",relativePath:"universal/security.md",key:"v-39419617",path:"/universal/security.html",lastUpdated:"2/14/2023, 5:12:00 PM",lastUpdatedTimestamp:167639472e4,headersStr:null,content:"# 安全性和FileVault\n\n所以让OpenCore真正与众不同的是它在构建时就考虑到了安全性，这在Hackintosh社区中是非常罕见的。在这里，我们将介绍并设置一些OpenCore的伟大安全功能:\n\n * FileVault\n   * 苹果内置的硬盘加密\n * Vault\n   * OpenCore的半安全引导，用于对OpenCore进行快照，以便不会发生不必要的更改\n * ScanPolicy\n   * OpenCore的驱动器策略，确定在OpenCore的启动菜单中显示什么类型的磁盘\n * OpenCore Password Setup\n   * 在OpenCore启动菜单中启用密码\n * Apple Secure Boot\n   * 苹果在macOS内核中的安全引导变种",normalizedContent:"# 安全性和filevault\n\n所以让opencore真正与众不同的是它在构建时就考虑到了安全性，这在hackintosh社区中是非常罕见的。在这里，我们将介绍并设置一些opencore的伟大安全功能:\n\n * filevault\n   * 苹果内置的硬盘加密\n * vault\n   * opencore的半安全引导，用于对opencore进行快照，以便不会发生不必要的更改\n * scanpolicy\n   * opencore的驱动器策略，确定在opencore的启动菜单中显示什么类型的磁盘\n * opencore password setup\n   * 在opencore启动菜单中启用密码\n * apple secure boot\n   * 苹果在macos内核中的安全引导变种",charsets:{cjk:!0}},{title:"苹果安全引导",frontmatter:{},regularPath:"/universal/security/applesecureboot.html",relativePath:"universal/security/applesecureboot.md",key:"v-575976af",path:"/universal/security/applesecureboot.html",headers:[{level:2,title:"什么是苹果安全引导",slug:"什么是苹果安全引导",normalizedTitle:"什么是苹果安全引导",charIndex:137},{level:2,title:"DmgLoading",slug:"dmgloading",normalizedTitle:"dmgloading",charIndex:19},{level:2,title:"SecureBootModel",slug:"securebootmodel",normalizedTitle:"securebootmodel",charIndex:31},{level:3,title:"SecureBootModel的特别注意事项",slug:"securebootmodel的特别注意事项",normalizedTitle:"securebootmodel的特别注意事项",charIndex:2634},{level:2,title:"ApECID",slug:"apecid",normalizedTitle:"apecid",charIndex:49}],lastUpdated:"2/14/2023, 5:12:00 PM",lastUpdatedTimestamp:167639472e4,headersStr:"什么是苹果安全引导 DmgLoading SecureBootModel SecureBootModel的特别注意事项 ApECID",content:"# 苹果安全引导\n\n * Note: DmgLoading, SecureBootModel 和 ApECID 需要 OpenCore 0.6.1或更新的\n * 注2:macOS Big Sur需要OpenCore 0.6.3+才能获得正确的Apple安全引导支持\n\n\n# 什么是苹果安全引导\n\n * 信息来自vit9696的线程， Apple的T2文档和Osy的安全引导页面\n\n为了更好地理解苹果的安全启动，让我们看看Macs和OpenCore中启动过程是如何在安全性方面工作的:\n\n\n\n正如我们所看到的，在Apple的Secure Boot中包含了几个信任层:\n\n * OpenCore将验证boot.efi清单(例如boot.efi.j137ap.im4m)，以确保boot.efi是由Apple签署的，并且可以用于此安全引导模型。\n   \n   * 对于非零的ApECID, OpenCore将额外验证ECID值，该值写入boot.efi清单(例如，boot.efi.j137ap. xxxxxxxx.im4m)，以确保来自具有相同安全引导模型的不同机器的受损硬盘驱动器不能在您的计算机中使用。\n\n * boot.Efi将验证内核缓存，以确保它没有被篡改\n\n * apfs.kext和AppleImage4确保您的系统卷的快照没有被篡改(仅适用于Big Sur+)\n\n并不是所有的这些验证都是必需的，但是对于那些希望获得最大安全性的人来说，它们都是可能的。目前关于基于固件的安全启动的信息还没有涵盖，但是所有的苹果安全启动选项将在下面详细介绍。\n\n\n# DmgLoading\n\n这是一个非常简单的设置，但是对于苹果安全启动来说很重要。此设置允许您使用OpenCore中的dmg设置加载策略。默认情况下，我们建议使用Signed，但为了最好的安全性，Disabled可能是首选。\n\n可能的选项 Misc -> Security -> DmgLoading:\n\nVALUE      COMMENT\nAny        允许在OpenCore中加载所有dmg，但是如果启用了Apple安全引导，此选项将导致引导失败\nSigned     只允许苹果签名的dmg，如macOS安装程序加载\nDisabled   禁用所有外部DMG加载，但是内部恢复仍然允许使用此选项\n\n\n# SecureBootModel\n\nSecureBootModel用于设置苹果安全引导硬件模型和策略，允许我们启用苹果的安全引导与任何SMBIOS，即使原来的SMBIOS不支持它(即。2017年之前的SMBIOS中没有T2)。启用SecureBootModel相当于“中等安全性”，完全安全性请参见ApECID\n\n目前，Misc -> Security -> SecureBootModel支持以下选项:\n\nVALUE       SMBIOS                                     MINIMUM MACOS VERSION\nDisabled    没有型号，安全引导将被禁用。                             N/A\nDefault     Currently set to x86legacy                 11.0.1 (20B29)\nj137        iMacPro1,1 (December 2017)                 10.13.2 (17C2111)\nj680        MacBookPro15,1 (July 2018)                 10.13.6 (17G2112)\nj132        MacBookPro15,2 (July 2018)                 10.13.6 (17G2112)\nj174        Macmini8,1 (October 2018)                  10.14 (18A2063)\nj140k       MacBookAir8,1 (October 2018)               10.14.1 (18B2084)\nj780        MacBookPro15,3 (May 2019)                  10.14.5 (18F132)\nj213        MacBookPro15,4 (July 2019)                 10.14.5 (18F2058)\nj140a       MacBookAir8,2 (July 2019)                  10.14.5 (18F2058)\nj152f       MacBookPro16,1 (November 2019)             10.15.1 (19B2093)\nj160        MacPro7,1 (December 2019)                  10.15.1 (19B88)\nj230k       MacBookAir9,1 (March 2020)                 10.15.3 (19D2064)\nj214k       MacBookPro16,2 (May 2020)                  10.15.4 (19E2269)\nj223        MacBookPro16,3 (May 2020)                  10.15.4 (19E2265)\nj215        MacBookPro16,4 (June 2020)                 10.15.5 (19F96)\nj185        iMac20,1 (August 2020)                     10.15.6 (19G2005)\nj185f       iMac20,2 (August 2020)                     10.15.6 (19G2005)\nx86legacy   Non-T2 Macs in 11.0(Recommended for VMs)   11.0.1 (20B29)\n\n\n# SecureBootModel的特别注意事项\n\n * 如果你计划在ApECID中使用Default值以获得完全的安全性，我们不建议使用它，我们建议设置一个适当的值(即最接近你的SMBIOS或你计划启动的macOS版本)，因为Default值可能在未来会更新。\n   * 此外，Default设置为x86legacy，这将破坏从High Sierra到Catalina的引导。\n   * 没有T2的普通Mac型号不需要x86legacy，支持上述任何值。\n * 缓存的驱动程序列表可能不同，导致需要更改已添加或已强制的内核驱动程序列表。\n   * 即;在这种情况下，IO80211Family不能被注入，因为它已经存在于内核缓存中\n * 无法使用无签名和几个有签名的内核驱动程序\n   * 这包括Nvidia 10.13中的Web驱动程序\n * 在像macOS 11这样具有密封功能的操作系统上，系统卷的改变可能会导致操作系统无法启动。\n   * 如果您计划禁用macOS的APFS快照，请记得禁用SecureBootModel\n * 某些引导错误更有可能在启用安全引导时被触发，而这些错误以前是不需要的\n   * 通常在某些APTIO IV系统中，它们最初可能不需要IgnoreInvalidFlexRatio和HashServices，但安全引导需要。\n * 在旧的cpu上(例如。在Sandy Bridge之前)启用Apple Secure Boot可能会导致最多1秒的加载速度稍慢\n * 在苹果安全引导登陆之前发布的操作系统(例如:macOS 10.12或更早版本)将仍然引导，直到启用UEFI安全引导。这是真的，\n   * 这是由于苹果的安全引导假设它们是不兼容的，将由固件处理，就像微软的Windows一样\n * 虚拟机需要使用x86legacy来获得安全引导支持\n   * 注意使用任何其他型号都需要启用forceecurebootscheme\n\n故障排除\n\n由于苹果端存在一个恼人的bug，某些系统可能丢失了硬盘上的安全引导文件。因此，你可能会遇到如下问题:\n\nOCB: LoadImage failed - Security Violation\n\n\n要解决此问题，请在macOS中运行以下命令:\n\n# 首先，找到Preboot卷\ndiskutil list\n\n# 从下面的列表中，我们可以看到Preboot卷是disk5s2\n/dev/disk5 (synthesized):\n   #:                       TYPE NAME                    SIZE       IDENTIFIER\n   0:      APFS Container Scheme -                      +255.7 GB   disk5\n                                 Physical Store disk4s2\n   1:                APFS Volume ⁨Big Sur HD - Data⁩       122.5 GB   disk5s1\n   2:                APFS Volume ⁨Preboot⁩                 309.4 MB   disk5s2\n   3:                APFS Volume ⁨Recovery⁩                887.8 MB   disk5s3\n   4:                APFS Volume ⁨VM⁩                      1.1 MB     disk5s4\n   5:                APFS Volume ⁨Big Sur HD⁩              16.2 GB    disk5s5\n   6:              APFS Snapshot ⁨com.apple.os.update-...⁩ 16.2 GB    disk5s5s\n# 现在挂载Preboot卷\ndiskutil mount disk5s2\n\n# CD到Preboot卷\n# 注意实际卷在macOS的/System/Volumes/Preboot目录下\n# 但是在Recovery中，它只是在/Volumes/Preboot下\ncd /System/Volumes/Preboot\n\n# 获取UUID\nls\n 46923F6E-968E-46E9-AC6D-9E6141DF52FD\n CD844C38-1A25-48D5-9388-5D62AA46CFB8\n\n# 如果多个出现(例如。双重引导macOS的多个版本),你应该这么做：\n# 需要确定哪些UUID是正确的。\n# 最简单的方法是打印.disk_label.contentDetails的值\n# 每个卷的\ncat ./46923F6E-968E-46E9-AC6D-9E6141DF52FD/System/Library/CoreServices/.disk_label.contentDetails\n Big Sur HD%\n\ncat ./CD844C38-1A25-48D5-9388-5D62AA46CFB8/System/Library/CoreServices/.disk_label.contentDetails\n Catalina HD%\n\n# 接下来让我们复制安全引导文件，恢复将需要不同的命令\n\n# macOS内部的示例命令\n# 用UUID值替换CD844C38-1A25-48D5-9388-5D62AA46CFB8\ncd ~\nsudo cp -a /usr/standalone/i386/. /System/Volumes/Preboot/CD844C38-1A25-48D5-9388-5D62AA46CFB8/System/Library/CoreServices\n\n# 恢复命令示例\n# 将Macintosh\\ HD和CD844C38-1A25-48D5-9388-5D62AA46CFB8更换为\n# 系统卷的名称和Preboot的UUID\ncp -a /Volumes/Macintosh\\ HD/usr/standalone/i386/. /Volumes/Preboot/CD844C38-1A25-48D5-9388-5D62AA46CFB8/System/Library/CoreServices\n\n\n现在您可以启用SecureBootModel并重新启动，而不出问题!由于我们没有编辑系统卷本身，我们不需要担心禁用SIP或破坏macOS快照。\n\n\n# ApECID\n\nApECID被用作Apple Enclave标识符，这意味着它允许我们使用个性化的Apple安全引导标识符，并根据Apple的安全引导页面(与SecureBootModel配对时)实现“完全安全”。\n\n要生成您自己的ApECID值，您需要某种形式的加密安全随机数生成器，它将输出一个64位整数。下面我们提供了一个可以运行的示例，如果Python 3安装在您的机器上:\n\npython3 -c 'import secrets; print(secrets.randbits(64))'\n\n\n有了这个唯一的64位整数，现在可以在config.plist中的Misc -> ApECID下输入它\n\n然而，在设置ApECID之前，有几件事我们需要注意:\n\n * 如果将ApECID设置为非零值，则需要在安装时进行网络连接以进行验证\n * SecureBootModel应该有一个已定义的值而不是Default，以避免在以后的OpenCore版本中更改值时出现问题。\n * 预先存在的安装需要对卷进行个性化设置，为此，您需要首先重新启动恢复并运行以下命令(将Macintosh HD替换为系统的卷名):\n\n# 设置ApECID值后，执行此命令\n# 在恢复过程中，您还需要一个活跃的网络连接来运行此命令\nbless --folder \"/Volumes/Macintosh HD/System/Library/CoreServices\" --bootefi --personalize\n\n\n重新安装macOS 10.15或更老版本时需要注意的是，您可能会收到“无法验证macOS”错误消息。要解决这个问题，在开始安装之前，您需要在macOS恢复终端中输入以下命令，为macOS个性化分配一个2 mb的专用RAM磁盘:\n\ndisk=$(hdiutil attach -nomount ram://4096)\ndiskutil erasevolume HFS+ SecureBoot $disk\ndiskutil unmount $disk\nmkdir /var/tmp/OSPersonalizationTemp\ndiskutil mount -mountpoint /var/tmp/OSPersonalizationTemp $disk\n",normalizedContent:"# 苹果安全引导\n\n * note: dmgloading, securebootmodel 和 apecid 需要 opencore 0.6.1或更新的\n * 注2:macos big sur需要opencore 0.6.3+才能获得正确的apple安全引导支持\n\n\n# 什么是苹果安全引导\n\n * 信息来自vit9696的线程， apple的t2文档和osy的安全引导页面\n\n为了更好地理解苹果的安全启动，让我们看看macs和opencore中启动过程是如何在安全性方面工作的:\n\n\n\n正如我们所看到的，在apple的secure boot中包含了几个信任层:\n\n * opencore将验证boot.efi清单(例如boot.efi.j137ap.im4m)，以确保boot.efi是由apple签署的，并且可以用于此安全引导模型。\n   \n   * 对于非零的apecid, opencore将额外验证ecid值，该值写入boot.efi清单(例如，boot.efi.j137ap. xxxxxxxx.im4m)，以确保来自具有相同安全引导模型的不同机器的受损硬盘驱动器不能在您的计算机中使用。\n\n * boot.efi将验证内核缓存，以确保它没有被篡改\n\n * apfs.kext和appleimage4确保您的系统卷的快照没有被篡改(仅适用于big sur+)\n\n并不是所有的这些验证都是必需的，但是对于那些希望获得最大安全性的人来说，它们都是可能的。目前关于基于固件的安全启动的信息还没有涵盖，但是所有的苹果安全启动选项将在下面详细介绍。\n\n\n# dmgloading\n\n这是一个非常简单的设置，但是对于苹果安全启动来说很重要。此设置允许您使用opencore中的dmg设置加载策略。默认情况下，我们建议使用signed，但为了最好的安全性，disabled可能是首选。\n\n可能的选项 misc -> security -> dmgloading:\n\nvalue      comment\nany        允许在opencore中加载所有dmg，但是如果启用了apple安全引导，此选项将导致引导失败\nsigned     只允许苹果签名的dmg，如macos安装程序加载\ndisabled   禁用所有外部dmg加载，但是内部恢复仍然允许使用此选项\n\n\n# securebootmodel\n\nsecurebootmodel用于设置苹果安全引导硬件模型和策略，允许我们启用苹果的安全引导与任何smbios，即使原来的smbios不支持它(即。2017年之前的smbios中没有t2)。启用securebootmodel相当于“中等安全性”，完全安全性请参见apecid\n\n目前，misc -> security -> securebootmodel支持以下选项:\n\nvalue       smbios                                     minimum macos version\ndisabled    没有型号，安全引导将被禁用。                             n/a\ndefault     currently set to x86legacy                 11.0.1 (20b29)\nj137        imacpro1,1 (december 2017)                 10.13.2 (17c2111)\nj680        macbookpro15,1 (july 2018)                 10.13.6 (17g2112)\nj132        macbookpro15,2 (july 2018)                 10.13.6 (17g2112)\nj174        macmini8,1 (october 2018)                  10.14 (18a2063)\nj140k       macbookair8,1 (october 2018)               10.14.1 (18b2084)\nj780        macbookpro15,3 (may 2019)                  10.14.5 (18f132)\nj213        macbookpro15,4 (july 2019)                 10.14.5 (18f2058)\nj140a       macbookair8,2 (july 2019)                  10.14.5 (18f2058)\nj152f       macbookpro16,1 (november 2019)             10.15.1 (19b2093)\nj160        macpro7,1 (december 2019)                  10.15.1 (19b88)\nj230k       macbookair9,1 (march 2020)                 10.15.3 (19d2064)\nj214k       macbookpro16,2 (may 2020)                  10.15.4 (19e2269)\nj223        macbookpro16,3 (may 2020)                  10.15.4 (19e2265)\nj215        macbookpro16,4 (june 2020)                 10.15.5 (19f96)\nj185        imac20,1 (august 2020)                     10.15.6 (19g2005)\nj185f       imac20,2 (august 2020)                     10.15.6 (19g2005)\nx86legacy   non-t2 macs in 11.0(recommended for vms)   11.0.1 (20b29)\n\n\n# securebootmodel的特别注意事项\n\n * 如果你计划在apecid中使用default值以获得完全的安全性，我们不建议使用它，我们建议设置一个适当的值(即最接近你的smbios或你计划启动的macos版本)，因为default值可能在未来会更新。\n   * 此外，default设置为x86legacy，这将破坏从high sierra到catalina的引导。\n   * 没有t2的普通mac型号不需要x86legacy，支持上述任何值。\n * 缓存的驱动程序列表可能不同，导致需要更改已添加或已强制的内核驱动程序列表。\n   * 即;在这种情况下，io80211family不能被注入，因为它已经存在于内核缓存中\n * 无法使用无签名和几个有签名的内核驱动程序\n   * 这包括nvidia 10.13中的web驱动程序\n * 在像macos 11这样具有密封功能的操作系统上，系统卷的改变可能会导致操作系统无法启动。\n   * 如果您计划禁用macos的apfs快照，请记得禁用securebootmodel\n * 某些引导错误更有可能在启用安全引导时被触发，而这些错误以前是不需要的\n   * 通常在某些aptio iv系统中，它们最初可能不需要ignoreinvalidflexratio和hashservices，但安全引导需要。\n * 在旧的cpu上(例如。在sandy bridge之前)启用apple secure boot可能会导致最多1秒的加载速度稍慢\n * 在苹果安全引导登陆之前发布的操作系统(例如:macos 10.12或更早版本)将仍然引导，直到启用uefi安全引导。这是真的，\n   * 这是由于苹果的安全引导假设它们是不兼容的，将由固件处理，就像微软的windows一样\n * 虚拟机需要使用x86legacy来获得安全引导支持\n   * 注意使用任何其他型号都需要启用forceecurebootscheme\n\n故障排除\n\n由于苹果端存在一个恼人的bug，某些系统可能丢失了硬盘上的安全引导文件。因此，你可能会遇到如下问题:\n\nocb: loadimage failed - security violation\n\n\n要解决此问题，请在macos中运行以下命令:\n\n# 首先，找到preboot卷\ndiskutil list\n\n# 从下面的列表中，我们可以看到preboot卷是disk5s2\n/dev/disk5 (synthesized):\n   #:                       type name                    size       identifier\n   0:      apfs container scheme -                      +255.7 gb   disk5\n                                 physical store disk4s2\n   1:                apfs volume ⁨big sur hd - data⁩       122.5 gb   disk5s1\n   2:                apfs volume ⁨preboot⁩                 309.4 mb   disk5s2\n   3:                apfs volume ⁨recovery⁩                887.8 mb   disk5s3\n   4:                apfs volume ⁨vm⁩                      1.1 mb     disk5s4\n   5:                apfs volume ⁨big sur hd⁩              16.2 gb    disk5s5\n   6:              apfs snapshot ⁨com.apple.os.update-...⁩ 16.2 gb    disk5s5s\n# 现在挂载preboot卷\ndiskutil mount disk5s2\n\n# cd到preboot卷\n# 注意实际卷在macos的/system/volumes/preboot目录下\n# 但是在recovery中，它只是在/volumes/preboot下\ncd /system/volumes/preboot\n\n# 获取uuid\nls\n 46923f6e-968e-46e9-ac6d-9e6141df52fd\n cd844c38-1a25-48d5-9388-5d62aa46cfb8\n\n# 如果多个出现(例如。双重引导macos的多个版本),你应该这么做：\n# 需要确定哪些uuid是正确的。\n# 最简单的方法是打印.disk_label.contentdetails的值\n# 每个卷的\ncat ./46923f6e-968e-46e9-ac6d-9e6141df52fd/system/library/coreservices/.disk_label.contentdetails\n big sur hd%\n\ncat ./cd844c38-1a25-48d5-9388-5d62aa46cfb8/system/library/coreservices/.disk_label.contentdetails\n catalina hd%\n\n# 接下来让我们复制安全引导文件，恢复将需要不同的命令\n\n# macos内部的示例命令\n# 用uuid值替换cd844c38-1a25-48d5-9388-5d62aa46cfb8\ncd ~\nsudo cp -a /usr/standalone/i386/. /system/volumes/preboot/cd844c38-1a25-48d5-9388-5d62aa46cfb8/system/library/coreservices\n\n# 恢复命令示例\n# 将macintosh\\ hd和cd844c38-1a25-48d5-9388-5d62aa46cfb8更换为\n# 系统卷的名称和preboot的uuid\ncp -a /volumes/macintosh\\ hd/usr/standalone/i386/. /volumes/preboot/cd844c38-1a25-48d5-9388-5d62aa46cfb8/system/library/coreservices\n\n\n现在您可以启用securebootmodel并重新启动，而不出问题!由于我们没有编辑系统卷本身，我们不需要担心禁用sip或破坏macos快照。\n\n\n# apecid\n\napecid被用作apple enclave标识符，这意味着它允许我们使用个性化的apple安全引导标识符，并根据apple的安全引导页面(与securebootmodel配对时)实现“完全安全”。\n\n要生成您自己的apecid值，您需要某种形式的加密安全随机数生成器，它将输出一个64位整数。下面我们提供了一个可以运行的示例，如果python 3安装在您的机器上:\n\npython3 -c 'import secrets; print(secrets.randbits(64))'\n\n\n有了这个唯一的64位整数，现在可以在config.plist中的misc -> apecid下输入它\n\n然而，在设置apecid之前，有几件事我们需要注意:\n\n * 如果将apecid设置为非零值，则需要在安装时进行网络连接以进行验证\n * securebootmodel应该有一个已定义的值而不是default，以避免在以后的opencore版本中更改值时出现问题。\n * 预先存在的安装需要对卷进行个性化设置，为此，您需要首先重新启动恢复并运行以下命令(将macintosh hd替换为系统的卷名):\n\n# 设置apecid值后，执行此命令\n# 在恢复过程中，您还需要一个活跃的网络连接来运行此命令\nbless --folder \"/volumes/macintosh hd/system/library/coreservices\" --bootefi --personalize\n\n\n重新安装macos 10.15或更老版本时需要注意的是，您可能会收到“无法验证macos”错误消息。要解决这个问题，在开始安装之前，您需要在macos恢复终端中输入以下命令，为macos个性化分配一个2 mb的专用ram磁盘:\n\ndisk=$(hdiutil attach -nomount ram://4096)\ndiskutil erasevolume hfs+ secureboot $disk\ndiskutil unmount $disk\nmkdir /var/tmp/ospersonalizationtemp\ndiskutil mount -mountpoint /var/tmp/ospersonalizationtemp $disk\n",charsets:{cjk:!0}},{title:"FileVault",frontmatter:{},regularPath:"/universal/security/filevault.html",relativePath:"universal/security/filevault.md",key:"v-22f73089",path:"/universal/security/filevault.html",lastUpdated:"2/14/2023, 5:12:00 PM",lastUpdatedTimestamp:167639472e4,headersStr:null,content:"# FileVault\n\nFileVault是macOS内置的驱动加密，与传统的Clover驱动程序相比，OpenCore对它的支持得到了极大的改进。\n\n首先，你需要以下 .efi 驱动程序:\n\n * OpenRuntime.efi\n   * OpenUsbKbDxe.efi 针对DuetPkg用户(未支持UEFI的系统)\n\n不要在OpenCore中使用VirtualSMC.efi，它已经内置了。不过，您仍然需要VirtualSMC.kext\n\n设置你的 config.plist:\n\n * Misc -> Boot\n   * PollAppleHotKeys 设置为 YES(虽然不需要，但可能会有所帮助)\n * Misc -> Security\n   * AuthRestart 设置为 YES(启用FileVault 2的身份验证重启，因此重启时不需要密码。可以被认为是一种安全风险，所以可选)\n * NVRAM -> Add -> 4D1EDE05-38C7-4A6A-9CC6-4BCCA8B38C14\n   * UIScale 设置为 02 用于高分辨率的小型显示器\n * UEFI -> Input\n   * KeySupport 设置为 YES(使用OpenCore内置输入时，使用OpenUsbKbDxe的用户应避免使用)\n * UEFI -> Output\n   * ProvideConsoleGop to YES\n * UEFI -> ProtocolOverrides\n   * FirmwareVolume 设置为 YES\n   * HashServices 设置为 YES 对于Broadwell和更老的(包括X99)，这对于SHA-1散列崩溃的系统是必需的\n * UEFI -> Quirks\n   * RequestBootVarRouting 设置为 YES\n   * ExitBootServicesDelay 设置为 3000-5000 如果您在Aptio IV固件(Broadwell或更老版本)上收到 Still waiting for root device\n\n有了这些，你可以像在普通mac上一样在“系统首选项->安全和隐私-> FileVault”下启用FileVault。\n\n关于UI问题，参见修复分辨率和详细信息",normalizedContent:"# filevault\n\nfilevault是macos内置的驱动加密，与传统的clover驱动程序相比，opencore对它的支持得到了极大的改进。\n\n首先，你需要以下 .efi 驱动程序:\n\n * openruntime.efi\n   * openusbkbdxe.efi 针对duetpkg用户(未支持uefi的系统)\n\n不要在opencore中使用virtualsmc.efi，它已经内置了。不过，您仍然需要virtualsmc.kext\n\n设置你的 config.plist:\n\n * misc -> boot\n   * pollapplehotkeys 设置为 yes(虽然不需要，但可能会有所帮助)\n * misc -> security\n   * authrestart 设置为 yes(启用filevault 2的身份验证重启，因此重启时不需要密码。可以被认为是一种安全风险，所以可选)\n * nvram -> add -> 4d1ede05-38c7-4a6a-9cc6-4bcca8b38c14\n   * uiscale 设置为 02 用于高分辨率的小型显示器\n * uefi -> input\n   * keysupport 设置为 yes(使用opencore内置输入时，使用openusbkbdxe的用户应避免使用)\n * uefi -> output\n   * provideconsolegop to yes\n * uefi -> protocoloverrides\n   * firmwarevolume 设置为 yes\n   * hashservices 设置为 yes 对于broadwell和更老的(包括x99)，这对于sha-1散列崩溃的系统是必需的\n * uefi -> quirks\n   * requestbootvarrouting 设置为 yes\n   * exitbootservicesdelay 设置为 3000-5000 如果您在aptio iv固件(broadwell或更老版本)上收到 still waiting for root device\n\n有了这些，你可以像在普通mac上一样在“系统首选项->安全和隐私-> filevault”下启用filevault。\n\n关于ui问题，参见修复分辨率和详细信息",charsets:{cjk:!0}},{title:"OpenCore菜单密码",frontmatter:{},regularPath:"/universal/security/password.html",relativePath:"universal/security/password.md",key:"v-7a9d2033",path:"/universal/security/password.html",lastUpdated:"2/14/2023, 5:12:00 PM",lastUpdatedTimestamp:167639472e4,headersStr:null,content:"# OpenCore菜单密码\n\n使用OpenCore 0.6.1及更新版本，用户可以设置SHA-512密码，以确保其设置的最佳安全性。这将在需要升级的任务时启用密码提示。这包括:\n\n * 显示启动菜单\n * 引导非默认操作系统和工具(例如。没有启动盘或Bootcamp实用程序)\n * 重置NVRAM\n * 启动非默认模式(例如。通过热键进入详细或安全模式)\n\n在OpenCore 0.6.7中，添加了一个名为ocpasswordgen的新工具来帮助用户生成密码。\n\n首先，让我们获取OpenCore 0.6.7或更新版本并运行Utilities/ocpasswordgen/下的ocpasswordgen二进制文件。它会提示你创建一个密码:\n\n\n\n在这个例子中，我们选择Dortania作为密码。然后ocpasswordgen弹出了我们config.plist需要的两个重要值:\n\n * PasswordHash: 密码哈希值\n * PasswordSalt: 确保2个具有完全相同密码的用户不具有相同的哈希值\n\n接下来让我们打开config.plist，并将这些值添加到Misc -> Security:\n\n * 注意:不要忘记启用EnablePassword\n\n\n\n完成这些更改后，您可以保存并重新启动机器。现在，当你进入OpenCore的菜单时，你应该会收到一个提示:\n\n\n\n输入你的密码，你应该会得到你的常规启动选项:\n\n * 注意:在输入密码和进入菜单之间，一些较旧的机器和虚拟机可能需要30秒以上才能完成验证。请耐心点\n\n",normalizedContent:"# opencore菜单密码\n\n使用opencore 0.6.1及更新版本，用户可以设置sha-512密码，以确保其设置的最佳安全性。这将在需要升级的任务时启用密码提示。这包括:\n\n * 显示启动菜单\n * 引导非默认操作系统和工具(例如。没有启动盘或bootcamp实用程序)\n * 重置nvram\n * 启动非默认模式(例如。通过热键进入详细或安全模式)\n\n在opencore 0.6.7中，添加了一个名为ocpasswordgen的新工具来帮助用户生成密码。\n\n首先，让我们获取opencore 0.6.7或更新版本并运行utilities/ocpasswordgen/下的ocpasswordgen二进制文件。它会提示你创建一个密码:\n\n\n\n在这个例子中，我们选择dortania作为密码。然后ocpasswordgen弹出了我们config.plist需要的两个重要值:\n\n * passwordhash: 密码哈希值\n * passwordsalt: 确保2个具有完全相同密码的用户不具有相同的哈希值\n\n接下来让我们打开config.plist，并将这些值添加到misc -> security:\n\n * 注意:不要忘记启用enablepassword\n\n\n\n完成这些更改后，您可以保存并重新启动机器。现在，当你进入opencore的菜单时，你应该会收到一个提示:\n\n\n\n输入你的密码，你应该会得到你的常规启动选项:\n\n * 注意:在输入密码和进入菜单之间，一些较旧的机器和虚拟机可能需要30秒以上才能完成验证。请耐心点\n\n",charsets:{cjk:!0}},{title:"扫描策略",frontmatter:{},regularPath:"/universal/security/scanpolicy.html",relativePath:"universal/security/scanpolicy.md",key:"v-f70e9c9a",path:"/universal/security/scanpolicy.html",lastUpdated:"2/14/2023, 5:12:00 PM",lastUpdatedTimestamp:167639472e4,headersStr:null,content:"# 扫描策略\n\n这个选项可以防止从不可信的来源扫描和启动。设置为0将允许所有源启动，但计算特定的ScanPolicy值将允许你拥有更大范围的灵活性和安全性。\n\n要计算ScanPolicy的值，只需将所有十六进制值相加(使用十六进制计算器，可以使用⌘+3从macOS内置计算器应用中访问)。把这些加起来之后，把这个十六进制值加到ScanPolicy(首先需要把它转换成小数，Xcode会在粘贴时自动转换它)。\n\n0x00000001 (bit 0) — OC_SCAN_FILE_SYSTEM_LOCK\n\n * 将扫描限制为仅限该策略中定义的已知文件系统。文件系统驱动程序可能不知道这个策略，为了避免装入不需要的文件系统，最好不要装入它的驱动程序。该位不影响dmg的挂载，dmg挂载可能包含任何文件系统。已知的文件系统以 OC_SCAN_ALLOW_FS_ 作为前缀。\n\n0x00000002 (bit 1) — OC_SCAN_DEVICE_LOCK\n\n * 将扫描限制为该策略中定义的已知设备类型。这并不总是能够检测到协议隧道，因此请注意，在某些系统上，例如USB hdd可能被识别为SATA。这种情况必须报告。已知的设备类型以OC_SCAN_ALLOW_DEVICE_作为前缀。\n\n0x00000100 (bit 8) — OC_SCAN_ALLOW_FS_APFS\n\n * 允许扫描APFS文件系统。\n\n0x00000200 (bit 9) — OC_SCAN_ALLOW_FS_HFS\n\n * 允许扫描HFS文件系统。\n\n0x00000400 (bit 10) — OC_SCAN_ALLOW_FS_ESP\n\n * 允许扫描EFI系统分区文件系统。\n\n0x00010000 (bit 16) — OC_SCAN_ALLOW_DEVICE_SATA\n\n * 允许扫描SATA设备。\n\n0x00020000 (bit 17) — OC_SCAN_ALLOW_DEVICE_SASEX\n\n * 允许扫描SAS和Mac NVMe设备。\n\n0x00040000 (bit 18) — OC_SCAN_ALLOW_DEVICE_SCSI\n\n * 允许扫描SCSI设备。\n\n0x00080000 (bit 19) — OC_SCAN_ALLOW_DEVICE_NVME\n\n * 允许扫描NVMe设备。\n\n0x00100000 (bit 20) — OC_SCAN_ALLOW_DEVICE_ATAPI\n\n * 允许扫描CD/DVD设备。\n\n0x00200000 (bit 21) — OC_SCAN_ALLOW_DEVICE_USB\n\n * 允许扫描USB设备。\n\n0x00400000 (bit 22) - OC_SCAN_ALLOW_DEVICE_FIREWIRE\n\n * 允许扫描FireWire设备。\n\n0x00800000 (bit 23) — OC_SCAN_ALLOW_DEVICE_SDCARD\n\n * 允许扫描读卡器设备。\n\n0x01000000 (bit 24) — OC_SCAN_ALLOW_DEVICE_PCI\n\n * 允许扫描设备直接连接到PCI总线(例如VIRTIO)。\n\n默认情况下，ScanPolicy的值是0x10F0103(17,760,515)，是以下内容的组合:\n\n * OC_SCAN_FILE_SYSTEM_LOCK\n * OC_SCAN_DEVICE_LOCK\n * OC_SCAN_ALLOW_FS_APFS\n * OC_SCAN_ALLOW_DEVICE_SATA\n * OC_SCAN_ALLOW_DEVICE_SASEX\n * OC_SCAN_ALLOW_DEVICE_SCSI\n * OC_SCAN_ALLOW_DEVICE_NVME\n * OC_SCAN_ALLOW_DEVICE_PCI\n\n假设在这个例子中，你要加上 OC_SCAN_ALLOW_DEVICE_USB:\n\n0x00200000 + 0x10F0103 = 0x12F0103\n\n把它转换成小数 19,857,667",normalizedContent:"# 扫描策略\n\n这个选项可以防止从不可信的来源扫描和启动。设置为0将允许所有源启动，但计算特定的scanpolicy值将允许你拥有更大范围的灵活性和安全性。\n\n要计算scanpolicy的值，只需将所有十六进制值相加(使用十六进制计算器，可以使用⌘+3从macos内置计算器应用中访问)。把这些加起来之后，把这个十六进制值加到scanpolicy(首先需要把它转换成小数，xcode会在粘贴时自动转换它)。\n\n0x00000001 (bit 0) — oc_scan_file_system_lock\n\n * 将扫描限制为仅限该策略中定义的已知文件系统。文件系统驱动程序可能不知道这个策略，为了避免装入不需要的文件系统，最好不要装入它的驱动程序。该位不影响dmg的挂载，dmg挂载可能包含任何文件系统。已知的文件系统以 oc_scan_allow_fs_ 作为前缀。\n\n0x00000002 (bit 1) — oc_scan_device_lock\n\n * 将扫描限制为该策略中定义的已知设备类型。这并不总是能够检测到协议隧道，因此请注意，在某些系统上，例如usb hdd可能被识别为sata。这种情况必须报告。已知的设备类型以oc_scan_allow_device_作为前缀。\n\n0x00000100 (bit 8) — oc_scan_allow_fs_apfs\n\n * 允许扫描apfs文件系统。\n\n0x00000200 (bit 9) — oc_scan_allow_fs_hfs\n\n * 允许扫描hfs文件系统。\n\n0x00000400 (bit 10) — oc_scan_allow_fs_esp\n\n * 允许扫描efi系统分区文件系统。\n\n0x00010000 (bit 16) — oc_scan_allow_device_sata\n\n * 允许扫描sata设备。\n\n0x00020000 (bit 17) — oc_scan_allow_device_sasex\n\n * 允许扫描sas和mac nvme设备。\n\n0x00040000 (bit 18) — oc_scan_allow_device_scsi\n\n * 允许扫描scsi设备。\n\n0x00080000 (bit 19) — oc_scan_allow_device_nvme\n\n * 允许扫描nvme设备。\n\n0x00100000 (bit 20) — oc_scan_allow_device_atapi\n\n * 允许扫描cd/dvd设备。\n\n0x00200000 (bit 21) — oc_scan_allow_device_usb\n\n * 允许扫描usb设备。\n\n0x00400000 (bit 22) - oc_scan_allow_device_firewire\n\n * 允许扫描firewire设备。\n\n0x00800000 (bit 23) — oc_scan_allow_device_sdcard\n\n * 允许扫描读卡器设备。\n\n0x01000000 (bit 24) — oc_scan_allow_device_pci\n\n * 允许扫描设备直接连接到pci总线(例如virtio)。\n\n默认情况下，scanpolicy的值是0x10f0103(17,760,515)，是以下内容的组合:\n\n * oc_scan_file_system_lock\n * oc_scan_device_lock\n * oc_scan_allow_fs_apfs\n * oc_scan_allow_device_sata\n * oc_scan_allow_device_sasex\n * oc_scan_allow_device_scsi\n * oc_scan_allow_device_nvme\n * oc_scan_allow_device_pci\n\n假设在这个例子中，你要加上 oc_scan_allow_device_usb:\n\n0x00200000 + 0x10f0103 = 0x12f0103\n\n把它转换成小数 19,857,667",charsets:{cjk:!0}},{title:"保险库",frontmatter:{},regularPath:"/universal/security/vault.html",relativePath:"universal/security/vault.md",key:"v-111b33de",path:"/universal/security/vault.html",lastUpdated:"2/14/2023, 5:12:00 PM",lastUpdatedTimestamp:167639472e4,headersStr:null,content:"# 保险库\n\n什么是保险库?\n\n好的保险库是基于两个东西, vault.plist 和 vault.sig:\n\n * vault.plist: 您的EFI的“快照”\n * vault.sig: vault.plist的验证\n\n这可以被视为OpenCore的安全启动，因此没有人可以在没有您的允许的情况下修改它并进入。\n\n保险库的具体特征是一个256字节的RSA-2048签名。plist将被塞进我们的OpenCore.efi。这个键可以在编译前插入OpenCoreVault.c，如果你已经编译了OpenCore efi，也可以使用sign.command。\n\n请注意，nvram plist不会被保险，因此使用模拟nvram的用户仍然有添加/删除某些nvram变量的风险\n\n设置你的config.plist:\n\n * Misc -> Security -> Vault:\n   * Basic: 只需要vault.plist，主要用于文件系统完整性验证\n   * Secure: 需要vault.plist和vault.sig，用于保险库的最佳安全性。Plist更改需要新的签名\n * Booter -> ProtectSecureBoot: YES\n   * Insyde固件需要修复安全启动密钥和报告违规行为\n\n设置升级保险:\n\n获取OpenCorePkg并打开CreateVault文件夹，在里面我们会找到以下内容:\n\n * create_vault.sh\n * RsaTool\n * sign.command\n\n最后一个是我们关心的: sign.command\n\n所以当我们运行这个命令时，它会在我们的Utilities文件夹旁边查找EFI文件夹，所以我们需要将我们的个人EFI带到OpenCorePkg文件夹中，或者将Utilities带到我们的EFI文件夹中:\n\n\n\n现在，我们准备运行sign.command:\n\n\n\n在安装后禁用保险库:\n\n如果你正在进行繁重的故障排除或需要禁用保险库，需要更改的主要内容如下:\n\n * 获取一个新的OpenCore.efi副本\n * Misc -> Security -> Vault 设置为 Optional\n * 删除 vault.plist 和 vault.sig",normalizedContent:"# 保险库\n\n什么是保险库?\n\n好的保险库是基于两个东西, vault.plist 和 vault.sig:\n\n * vault.plist: 您的efi的“快照”\n * vault.sig: vault.plist的验证\n\n这可以被视为opencore的安全启动，因此没有人可以在没有您的允许的情况下修改它并进入。\n\n保险库的具体特征是一个256字节的rsa-2048签名。plist将被塞进我们的opencore.efi。这个键可以在编译前插入opencorevault.c，如果你已经编译了opencore efi，也可以使用sign.command。\n\n请注意，nvram plist不会被保险，因此使用模拟nvram的用户仍然有添加/删除某些nvram变量的风险\n\n设置你的config.plist:\n\n * misc -> security -> vault:\n   * basic: 只需要vault.plist，主要用于文件系统完整性验证\n   * secure: 需要vault.plist和vault.sig，用于保险库的最佳安全性。plist更改需要新的签名\n * booter -> protectsecureboot: yes\n   * insyde固件需要修复安全启动密钥和报告违规行为\n\n设置升级保险:\n\n获取opencorepkg并打开createvault文件夹，在里面我们会找到以下内容:\n\n * create_vault.sh\n * rsatool\n * sign.command\n\n最后一个是我们关心的: sign.command\n\n所以当我们运行这个命令时，它会在我们的utilities文件夹旁边查找efi文件夹，所以我们需要将我们的个人efi带到opencorepkg文件夹中，或者将utilities带到我们的efi文件夹中:\n\n\n\n现在，我们准备运行sign.command:\n\n\n\n在安装后禁用保险库:\n\n如果你正在进行繁重的故障排除或需要禁用保险库，需要更改的主要内容如下:\n\n * 获取一个新的opencore.efi副本\n * misc -> security -> vault 设置为 optional\n * 删除 vault.plist 和 vault.sig",charsets:{cjk:!0}},{title:"修复睡眠",frontmatter:{},regularPath:"/universal/sleep.html",relativePath:"universal/sleep.md",key:"v-093f9953",path:"/universal/sleep.html",headers:[{level:2,title:"准备工作",slug:"准备工作",normalizedTitle:"准备工作",charIndex:527},{level:2,title:"主要罪魁祸首",slug:"主要罪魁祸首",normalizedTitle:"主要罪魁祸首",charIndex:1400},{level:3,title:"修复USB",slug:"修复usb",normalizedTitle:"修复usb",charIndex:1467},{level:3,title:"修复GPUs",slug:"修复gpus",normalizedTitle:"修复gpus",charIndex:1897},{level:3,title:"修复Thunderbolt",slug:"修复thunderbolt",normalizedTitle:"修复thunderbolt",charIndex:2900},{level:3,title:"修复网卡",slug:"修复网卡",normalizedTitle:"修复网卡",charIndex:3159},{level:3,title:"修复NVMe",slug:"修复nvme",normalizedTitle:"修复nvme",charIndex:3325},{level:3,title:"修复CPU电源管理",slug:"修复cpu电源管理",normalizedTitle:"修复cpu电源管理",charIndex:3603},{level:2,title:"其他罪魁祸首",slug:"其他罪魁祸首",normalizedTitle:"其他罪魁祸首",charIndex:3821},{level:3,title:"显示",slug:"显示",normalizedTitle:"显示",charIndex:296},{level:3,title:"NVRAM",slug:"nvram",normalizedTitle:"nvram",charIndex:302},{level:3,title:"RTC",slug:"rtc",normalizedTitle:"rtc",charIndex:311},{level:3,title:"IRQ 冲突",slug:"irq-冲突",normalizedTitle:"irq 冲突",charIndex:3854},{level:3,title:"音频",slug:"音频",normalizedTitle:"音频",charIndex:332},{level:3,title:"SMBus",slug:"smbus",normalizedTitle:"smbus",charIndex:338},{level:3,title:"TSC",slug:"tsc",normalizedTitle:"tsc",charIndex:347}],lastUpdated:"2/14/2023, 5:12:00 PM",lastUpdatedTimestamp:167639472e4,headersStr:"准备工作 主要罪魁祸首 修复USB 修复GPUs 修复Thunderbolt 修复网卡 修复NVMe 修复CPU电源管理 其他罪魁祸首 显示 NVRAM RTC IRQ 冲突 音频 SMBus TSC",content:"# 修复睡眠\n\n因此，为了理解如何解决macOS中的睡眠问题，我们需要首先看看大多数情况下是什么导致了睡眠问题:\n\n * 设备管理错误(最常见的是基于PCIe的设备)\n\n原因是当设备获得S3调用(或S0用于唤醒)时，驱动程序需要关闭设备并进入低状态模式(唤醒时则相反)。当这些设备不与驱动程序合作时，问题就会出现，这些问题的主要违反者是:\n\n * USB控制器和设备\n * GPUs\n * Thunderbolt 控制器和设备\n * 网卡(包括以太网和Wifi)\n * NVMe 驱动器\n\n还有一些其他可能导致睡眠问题的因素与PCI/e没有直接(或明显)关系:\n\n * CPU电源管理\n * 显示\n * NVRAM\n * RTC/系统时钟\n * IRQ冲突\n * 音频\n * SMBus\n * TSC\n\n很多人都忘记了一件事:\n\n * CPUs\n   * AVX经常会破坏iGPUs并损害整体稳定性\n * 坏内存(超频和不匹配的内存)\n   * 即使是糟糕/不匹配的时间也会导致严重的问题\n * 工厂GPU超频\n   * oem厂商通常在自定义VBIOS上对显卡做得有点过头\n   * 通常这些显卡会有一个物理开关，允许你选择低功耗的VBIOS\n\n\n# 准备工作\n\n在 macOS:\n\n在我们深入研究之前，我们首先要准备好我们的系统:\n\nsudo pmset autopoweroff 0\nsudo pmset powernap 0\nsudo pmset standby 0\nsudo pmset proximitywake 0\nsudo pmset tcpkeepalive 0\n\n\n这将为我们做5件事:\n\n 1. 禁用自动休眠:这是休眠的一种形式\n 2. 禁用powernap:用于定期唤醒机器以进行网络和更新(但不包括显示)\n 3. 禁用待机:用于睡眠和进入休眠之间的一段时间\n 4. 禁用iPhone/手表唤醒功能:特别是当你的iPhone或苹果手表靠近时，机器将唤醒\n 5. 关闭TCP保持激活机制，防止每2小时唤醒一次\n\n在你的 config.plist:\n\n虽然只需要最小的更改，但以下是我们关心的更改:\n\n * Misc -> Boot -> HibernateMode -> None\n   * 我们将避免使用S4的黑魔法\n * NVRAM -> Add -> 7C436110-AB2A-4BBB-A880-FE41995C9F82 -> boot-args\n   * keepsyms=1 - 确保如果内核在睡眠期间发生崩溃，我们可以从中获取所有重要的信息\n   * swd_panic=1 - 避免了睡眠导致重启的问题，这应该给我们一个内核崩溃日志\n\n在你的 BIOS:\n\n * 禁用：\n   * Wake on LAN\n   * Trusted Platform Module\n     * 请注意，如果你在Windows上使用BitLocker，禁用它将导致你所有的加密密钥丢失。如果你正在使用BitLocker，要么禁用，要么注意它可能是唤醒问题的原因。\n   * Wake on USB(某些主板实际上可能需要这个来唤醒，但大多数将获得随机唤醒调用)\n * 启用:\n   * Wake on Bluetooth(如果使用蓝牙设备像键盘一样唤醒，否则可以禁用)\n\n\n# 主要罪魁祸首\n\n * USB\n * GPUs\n * Thunderbolt\n * 网卡\n * NVMe\n * CPU电源管理\n\n\n# 修复USB\n\n这是导致黑苹果睡眠问题的首要原因，主要是因为苹果的驱动程序非常不擅长猜测端口，并且端口限制补丁会产生不稳定的不良影响。\n\n * USB 映射\n\n本指南还包括一些其他的修复，而不仅仅是映射:\n\n * 修复USB电源\n * 修复关机/重启\n * GPRW/UPRW/LANC即时唤醒补丁\n * 键盘唤醒问题\n\n使用macOS Catalina(10.15)及更新版本的USB映射:你可能会发现，即使使用USB映射，你的睡眠时间也会延长。一个可能的解决方案是将IOClass的值从AppleUSBMergeNub重命名为AppleUSBHostMergeProperties。查看这里了解更多信息:卡特琳娜USB IOClass的变化\n\n * 注意:某些USB设备在macOS中没有正确的驱动程序，可能会不幸导致睡眠问题。例如，带有USB寻址控制的海盗船水冷可以防止机器正常睡眠。对于这些情况，我们建议用户在调试睡眠问题时断开这些麻烦的设备。\n\n\n# 修复GPUs\n\n有了gpu，我们很容易就能知道是什么导致了问题。这是macOS中不支持的gpu。默认情况下，任何没有在操作系统中提供驱动程序的GPU都将运行非常基本的驱动程序，即VESA驱动程序。它们提供了最小的显示输出，但也导致了一个大问题，即macOS实际上不知道如何正确地与这些设备交互。要解决这个问题，我们需要欺骗macOS认为它是一个通用的PCIe设备(它可以更好地处理，非常适合台式机)，或者完全关闭卡(在笔记本电脑上，台式机dgpu有关机问题)\n\n * 查看更多信息:\n   * 禁用桌面显卡\n   * 禁用笔记本显卡\n\n10.15.4及更新版本iGPU用户的特别说明:\n\n * iGPU唤醒部分是由于苹果公司在真正的mac上使用applegraphicpowermanagement.kext的大量黑客行为造成的，为了解决这个问题，你可能需要igfxonln=1来强制所有显示在线。显然，首先要进行测试，以确保您有这个问题。\n * A对于桌面 Coffee Lake (UHD 630) 的用户来说，AAPL,ig-platform-id 07009B3E可能会失败，你可以试试00009B3E。0300923E有时也是有效的。\n\n其他iGPU注意事项:\n\n * 一些使用igpu的系统(例如Kaby Lake和Coffee Lake)可能会在低功耗状态下导致系统不稳定，有时会表现为NVMe内核崩溃。要解决这个问题，你可以在你的引导参数中添加forceRenderStandby=0来禁用RC6备用渲染。查看这里了解更多信息:IGP导致NVMe内核恐慌CSTS=0xffffffff#1193\n * 由于转换状态的问题，某些Ice Lake笔记本电脑也可能在“不允许DC6而不允许DC9”时出现内核崩溃。一种解决方法是在你的启动参数中使用-noDC9或-nodisplaysleepDC6\n\nAMD dgpu 4k显示器的特别注意事项:\n\n * 某些显示器可能无法随机唤醒，主要是由AGDC首选项引起的。要修复这个问题，请在DeviceProperties中将其应用到dGPU上:\n   * CFG,CFG_USE_AGDC | Data | 00\n   * 你可以通过gfxutil找到GPU的PciRoot\n     * /path/to/gfxutil -f GFX0\n\n\n\n\n# 修复Thunderbolt\n\nThunderbolt在社区中是一个非常棘手的话题，主要是由于情况的复杂性。如果你想让Thunderbolt和sleep同时工作，你真的只有两条路可走:\n\n * 在BIOS中禁用Thunderbolt 3\n * 尝试修补Thunderbolt 3:\n   * Thunderbolt 3 修复\n   * ThunderboltReset\n   * ThunderboltPkg\n\n注意:Thunderbolt可以在不需要额外工作的情况下启用，如果你不需要睡眠也没问题，反之亦然。\n\n\n# 修复网卡\n\n网卡(网络接口控制器)与睡眠很容易修复,主要是以下几点:\n\n * 在BIOS中禁用WakeOnLAN\n   * 大多数系统将进入睡眠/唤醒循环启用\n * 在macOS中禁用Wake for network access (SystemPreferences -> Power)\n   * 似乎能破解很多hack\n\n\n# 修复NVMe\n\n所以macOS对NVMe驱动非常挑剔，而且苹果的电源管理驱动仅限于苹果品牌的驱动。所以要做的主要事情是:\n\n * 确保NVMe在最新固件上(对于970 Evo Plus驱动器尤其重要)\n * 使用NVMeFix.kext来进行适当的NVMe电源管理\n\n并避免问题驱动，主要罪魁祸首:\n\n * 三星的PM981和PM991固态硬盘\n * Micron的2200S\n\n如果你的系统中有这些驱动器，最好通过SSDT禁用它们:禁用桌面dgpu。 本指南主要针对dGPU，但对NVMe驱动器的工作原理完全相同(因为它们都只是PCIe设备)。\n\n\n# 修复CPU电源管理\n\n来自 Intel:\n\n要验证您是否有工作的CPU电源管理，请参阅固定电源管理 page.\n\n还要注意，不正确的电源管理数据可能导致唤醒问题，因此请验证您正在使用正确的SMBIOS。\n\n一个常见的内核唤醒错误是:\n\nSleep Wake failure in EFI\n\n\n来自 AMD:\n\n不要着急，因为他们对你还有希望可以添加基于Ryzen cpu电源管理。仓库的README.md中解释了安装和使用方法\n\n\n# 其他罪魁祸首\n\n * 显示\n * NVRAM\n * RTC\n * IRQ 冲突\n * 音频\n * SMBus\n * TSC\n\n\n# 显示\n\n所以显示问题主要是针对笔记本电脑的盖子检测，具体来说:\n\n * 错误制作SSDT-PNLF\n * 操作系统与固件的盖子唤醒\n * 键盘垃圾从盖子唤醒它(基于PS2的键盘)\n\n前者很容易修复，参见这里:背光PNLF\n\n对于中间部分，macOS的盖子唤醒检测可能有点坏，你可能需要完全禁用它:\n\nsudo pmset lidwake 0\n\n\n并设置lidwake 1来重新启用它。\n\n后者需要更多的工作。我们要做的是试图消除在Skylake和更新的基于HPs上发生的半随机密钥垃圾邮件，尽管在其他oem中也会出现。这也将假设你的键盘是基于PS2并且正在运行VoodooPS2.\n\n要解决这个问题，请获取SSDT-HP-FixLidSleep.dsl并将ACPI路径调整到您的键盘(_CID值为PNP0303)。一旦完成，编译并放入EFI/OC/ACPI和config plist -> ACPI -> Add。\n\n对于99%的HP用户来说，这将解决随机密钥的垃圾问题。如果没有，请参阅下面的帖子:\n\n * RehabMan的亮度键指南\n\n\n# NVRAM\n\n要验证您有工作的NVRAM，请参阅[模拟NVRAM](../misc/ NVRAM. md)页面来验证您有工作的NVRAM。如果没有，则相应地打补丁。\n\n\n# RTC\n\n这主要与Intel 300系列主板(Z3xx)有关，具体来说有两个问题:\n\n * 默认RTC是禁用的(而不是使用AWAC)\n * RTC通常与macOS不兼容\n\n要解决第一个问题，请参阅这里:修复AWAC\n\n对于第二个问题，当您关闭或重新启动时，很容易告诉您有RTC问题。具体来说，你会看到一个“BIOS重启在安全模式”的错误。为了解决这个问题，我们需要防止macOS向RTC 区域写入数据导致这些问题。这里有几个修复方法:\n\n * DisableRtcChecksum: 防止写入主校验和(0x58-0x59)，适用于大多数主板\n * UEFI -> ProtoclOverride -> AppleRtcRam + NVRAM -> Add -> rtc-blacklist\n   * 在固件级别上黑名单某些区域，参见Configuration.pdf关于如何设置的更多信息\n * RTCMemoryFixup + rtcfx_exclude=\n   * 在内核级别将某些区域列入黑名单，参见README了解更多关于如何设置的信息\n\n对于一些legacy的板，你可能需要给你的RTC打补丁:Z68 RTC\n\n\n# IRQ 冲突\n\nIRQ问题通常发生在启动过程中，但有些人可能会注意到IRQ调用可以中断与睡眠，这个修复是相当容易的:\n\n * SSDTTime\n   * 首先将DSDT转储到Linux/Windows中\n   * 然后选择FixHPET选项\n\n这将为您提供SSDT- hpet.aml和patches_OC.plist，您需要将SSDT添加到EFI/OC/ACPI，并从patches_OC.plist将ACPI补丁添加到您的config.plist中\n\n\n# 音频\n\n未管理或不正确管理的音频设备也可能导致问题，要么在BIOS中禁用未使用的音频设备，要么在这里验证它们是否正常工作:\n\n * 修复音频\n\n\n# SMBus\n\n您关心SMBus的主要原因是AppleSMBus可以帮助正确管理SMBus和PCI设备，如电源状态。问题是kext通常不会自己加载，因此您需要实际创建SSDT-SMBS-MCHC。\n\n看这里关于如何使它的更多信息:修复SMBus支持\n\n\n# TSC\n\nTSC(时间戳计数器)负责确保你的硬件以正确的速度运行，问题是一些固件(主要是HEDT/服务器和华硕笔记本电脑)不会将TSC写入所有核心，从而导致问题。为了解决这个问题，我们有三个选择:\n\n * CpuTscSync\n   * 针对麻烦的笔记本电脑\n * VoodooTSCSync\n   * 用于大多数HEDT硬件\n * TSCAdjustReset\n   * 用于Skylake X/W/SP和Cascade Lake X/W/SP硬件\n\n前两个是即插即用，而后者需要一些定制:\n\n * 打开kext(在访达中显示包内容， Contents -> Info.plist)并更改Info plist -> IOKitPersonalities -> IOPropertyMatch -> IOCPUNumber为从0开始的CPU线程数(i9 7980xe 18核心将是35，因为它总共有36个线程)\n * 编译后的版本可以在这里找到:tscadjustreet .kext\n\n\n\n查看TSC问题的最常见方法:\n\n案例 1   案例 2\n       ",normalizedContent:"# 修复睡眠\n\n因此，为了理解如何解决macos中的睡眠问题，我们需要首先看看大多数情况下是什么导致了睡眠问题:\n\n * 设备管理错误(最常见的是基于pcie的设备)\n\n原因是当设备获得s3调用(或s0用于唤醒)时，驱动程序需要关闭设备并进入低状态模式(唤醒时则相反)。当这些设备不与驱动程序合作时，问题就会出现，这些问题的主要违反者是:\n\n * usb控制器和设备\n * gpus\n * thunderbolt 控制器和设备\n * 网卡(包括以太网和wifi)\n * nvme 驱动器\n\n还有一些其他可能导致睡眠问题的因素与pci/e没有直接(或明显)关系:\n\n * cpu电源管理\n * 显示\n * nvram\n * rtc/系统时钟\n * irq冲突\n * 音频\n * smbus\n * tsc\n\n很多人都忘记了一件事:\n\n * cpus\n   * avx经常会破坏igpus并损害整体稳定性\n * 坏内存(超频和不匹配的内存)\n   * 即使是糟糕/不匹配的时间也会导致严重的问题\n * 工厂gpu超频\n   * oem厂商通常在自定义vbios上对显卡做得有点过头\n   * 通常这些显卡会有一个物理开关，允许你选择低功耗的vbios\n\n\n# 准备工作\n\n在 macos:\n\n在我们深入研究之前，我们首先要准备好我们的系统:\n\nsudo pmset autopoweroff 0\nsudo pmset powernap 0\nsudo pmset standby 0\nsudo pmset proximitywake 0\nsudo pmset tcpkeepalive 0\n\n\n这将为我们做5件事:\n\n 1. 禁用自动休眠:这是休眠的一种形式\n 2. 禁用powernap:用于定期唤醒机器以进行网络和更新(但不包括显示)\n 3. 禁用待机:用于睡眠和进入休眠之间的一段时间\n 4. 禁用iphone/手表唤醒功能:特别是当你的iphone或苹果手表靠近时，机器将唤醒\n 5. 关闭tcp保持激活机制，防止每2小时唤醒一次\n\n在你的 config.plist:\n\n虽然只需要最小的更改，但以下是我们关心的更改:\n\n * misc -> boot -> hibernatemode -> none\n   * 我们将避免使用s4的黑魔法\n * nvram -> add -> 7c436110-ab2a-4bbb-a880-fe41995c9f82 -> boot-args\n   * keepsyms=1 - 确保如果内核在睡眠期间发生崩溃，我们可以从中获取所有重要的信息\n   * swd_panic=1 - 避免了睡眠导致重启的问题，这应该给我们一个内核崩溃日志\n\n在你的 bios:\n\n * 禁用：\n   * wake on lan\n   * trusted platform module\n     * 请注意，如果你在windows上使用bitlocker，禁用它将导致你所有的加密密钥丢失。如果你正在使用bitlocker，要么禁用，要么注意它可能是唤醒问题的原因。\n   * wake on usb(某些主板实际上可能需要这个来唤醒，但大多数将获得随机唤醒调用)\n * 启用:\n   * wake on bluetooth(如果使用蓝牙设备像键盘一样唤醒，否则可以禁用)\n\n\n# 主要罪魁祸首\n\n * usb\n * gpus\n * thunderbolt\n * 网卡\n * nvme\n * cpu电源管理\n\n\n# 修复usb\n\n这是导致黑苹果睡眠问题的首要原因，主要是因为苹果的驱动程序非常不擅长猜测端口，并且端口限制补丁会产生不稳定的不良影响。\n\n * usb 映射\n\n本指南还包括一些其他的修复，而不仅仅是映射:\n\n * 修复usb电源\n * 修复关机/重启\n * gprw/uprw/lanc即时唤醒补丁\n * 键盘唤醒问题\n\n使用macos catalina(10.15)及更新版本的usb映射:你可能会发现，即使使用usb映射，你的睡眠时间也会延长。一个可能的解决方案是将ioclass的值从appleusbmergenub重命名为appleusbhostmergeproperties。查看这里了解更多信息:卡特琳娜usb ioclass的变化\n\n * 注意:某些usb设备在macos中没有正确的驱动程序，可能会不幸导致睡眠问题。例如，带有usb寻址控制的海盗船水冷可以防止机器正常睡眠。对于这些情况，我们建议用户在调试睡眠问题时断开这些麻烦的设备。\n\n\n# 修复gpus\n\n有了gpu，我们很容易就能知道是什么导致了问题。这是macos中不支持的gpu。默认情况下，任何没有在操作系统中提供驱动程序的gpu都将运行非常基本的驱动程序，即vesa驱动程序。它们提供了最小的显示输出，但也导致了一个大问题，即macos实际上不知道如何正确地与这些设备交互。要解决这个问题，我们需要欺骗macos认为它是一个通用的pcie设备(它可以更好地处理，非常适合台式机)，或者完全关闭卡(在笔记本电脑上，台式机dgpu有关机问题)\n\n * 查看更多信息:\n   * 禁用桌面显卡\n   * 禁用笔记本显卡\n\n10.15.4及更新版本igpu用户的特别说明:\n\n * igpu唤醒部分是由于苹果公司在真正的mac上使用applegraphicpowermanagement.kext的大量黑客行为造成的，为了解决这个问题，你可能需要igfxonln=1来强制所有显示在线。显然，首先要进行测试，以确保您有这个问题。\n * a对于桌面 coffee lake (uhd 630) 的用户来说，aapl,ig-platform-id 07009b3e可能会失败，你可以试试00009b3e。0300923e有时也是有效的。\n\n其他igpu注意事项:\n\n * 一些使用igpu的系统(例如kaby lake和coffee lake)可能会在低功耗状态下导致系统不稳定，有时会表现为nvme内核崩溃。要解决这个问题，你可以在你的引导参数中添加forcerenderstandby=0来禁用rc6备用渲染。查看这里了解更多信息:igp导致nvme内核恐慌csts=0xffffffff#1193\n * 由于转换状态的问题，某些ice lake笔记本电脑也可能在“不允许dc6而不允许dc9”时出现内核崩溃。一种解决方法是在你的启动参数中使用-nodc9或-nodisplaysleepdc6\n\namd dgpu 4k显示器的特别注意事项:\n\n * 某些显示器可能无法随机唤醒，主要是由agdc首选项引起的。要修复这个问题，请在deviceproperties中将其应用到dgpu上:\n   * cfg,cfg_use_agdc | data | 00\n   * 你可以通过gfxutil找到gpu的pciroot\n     * /path/to/gfxutil -f gfx0\n\n\n\n\n# 修复thunderbolt\n\nthunderbolt在社区中是一个非常棘手的话题，主要是由于情况的复杂性。如果你想让thunderbolt和sleep同时工作，你真的只有两条路可走:\n\n * 在bios中禁用thunderbolt 3\n * 尝试修补thunderbolt 3:\n   * thunderbolt 3 修复\n   * thunderboltreset\n   * thunderboltpkg\n\n注意:thunderbolt可以在不需要额外工作的情况下启用，如果你不需要睡眠也没问题，反之亦然。\n\n\n# 修复网卡\n\n网卡(网络接口控制器)与睡眠很容易修复,主要是以下几点:\n\n * 在bios中禁用wakeonlan\n   * 大多数系统将进入睡眠/唤醒循环启用\n * 在macos中禁用wake for network access (systempreferences -> power)\n   * 似乎能破解很多hack\n\n\n# 修复nvme\n\n所以macos对nvme驱动非常挑剔，而且苹果的电源管理驱动仅限于苹果品牌的驱动。所以要做的主要事情是:\n\n * 确保nvme在最新固件上(对于970 evo plus驱动器尤其重要)\n * 使用nvmefix.kext来进行适当的nvme电源管理\n\n并避免问题驱动，主要罪魁祸首:\n\n * 三星的pm981和pm991固态硬盘\n * micron的2200s\n\n如果你的系统中有这些驱动器，最好通过ssdt禁用它们:禁用桌面dgpu。 本指南主要针对dgpu，但对nvme驱动器的工作原理完全相同(因为它们都只是pcie设备)。\n\n\n# 修复cpu电源管理\n\n来自 intel:\n\n要验证您是否有工作的cpu电源管理，请参阅固定电源管理 page.\n\n还要注意，不正确的电源管理数据可能导致唤醒问题，因此请验证您正在使用正确的smbios。\n\n一个常见的内核唤醒错误是:\n\nsleep wake failure in efi\n\n\n来自 amd:\n\n不要着急，因为他们对你还有希望可以添加基于ryzen cpu电源管理。仓库的readme.md中解释了安装和使用方法\n\n\n# 其他罪魁祸首\n\n * 显示\n * nvram\n * rtc\n * irq 冲突\n * 音频\n * smbus\n * tsc\n\n\n# 显示\n\n所以显示问题主要是针对笔记本电脑的盖子检测，具体来说:\n\n * 错误制作ssdt-pnlf\n * 操作系统与固件的盖子唤醒\n * 键盘垃圾从盖子唤醒它(基于ps2的键盘)\n\n前者很容易修复，参见这里:背光pnlf\n\n对于中间部分，macos的盖子唤醒检测可能有点坏，你可能需要完全禁用它:\n\nsudo pmset lidwake 0\n\n\n并设置lidwake 1来重新启用它。\n\n后者需要更多的工作。我们要做的是试图消除在skylake和更新的基于hps上发生的半随机密钥垃圾邮件，尽管在其他oem中也会出现。这也将假设你的键盘是基于ps2并且正在运行voodoops2.\n\n要解决这个问题，请获取ssdt-hp-fixlidsleep.dsl并将acpi路径调整到您的键盘(_cid值为pnp0303)。一旦完成，编译并放入efi/oc/acpi和config plist -> acpi -> add。\n\n对于99%的hp用户来说，这将解决随机密钥的垃圾问题。如果没有，请参阅下面的帖子:\n\n * rehabman的亮度键指南\n\n\n# nvram\n\n要验证您有工作的nvram，请参阅[模拟nvram](../misc/ nvram. md)页面来验证您有工作的nvram。如果没有，则相应地打补丁。\n\n\n# rtc\n\n这主要与intel 300系列主板(z3xx)有关，具体来说有两个问题:\n\n * 默认rtc是禁用的(而不是使用awac)\n * rtc通常与macos不兼容\n\n要解决第一个问题，请参阅这里:修复awac\n\n对于第二个问题，当您关闭或重新启动时，很容易告诉您有rtc问题。具体来说，你会看到一个“bios重启在安全模式”的错误。为了解决这个问题，我们需要防止macos向rtc 区域写入数据导致这些问题。这里有几个修复方法:\n\n * disablertcchecksum: 防止写入主校验和(0x58-0x59)，适用于大多数主板\n * uefi -> protocloverride -> applertcram + nvram -> add -> rtc-blacklist\n   * 在固件级别上黑名单某些区域，参见configuration.pdf关于如何设置的更多信息\n * rtcmemoryfixup + rtcfx_exclude=\n   * 在内核级别将某些区域列入黑名单，参见readme了解更多关于如何设置的信息\n\n对于一些legacy的板，你可能需要给你的rtc打补丁:z68 rtc\n\n\n# irq 冲突\n\nirq问题通常发生在启动过程中，但有些人可能会注意到irq调用可以中断与睡眠，这个修复是相当容易的:\n\n * ssdttime\n   * 首先将dsdt转储到linux/windows中\n   * 然后选择fixhpet选项\n\n这将为您提供ssdt- hpet.aml和patches_oc.plist，您需要将ssdt添加到efi/oc/acpi，并从patches_oc.plist将acpi补丁添加到您的config.plist中\n\n\n# 音频\n\n未管理或不正确管理的音频设备也可能导致问题，要么在bios中禁用未使用的音频设备，要么在这里验证它们是否正常工作:\n\n * 修复音频\n\n\n# smbus\n\n您关心smbus的主要原因是applesmbus可以帮助正确管理smbus和pci设备，如电源状态。问题是kext通常不会自己加载，因此您需要实际创建ssdt-smbs-mchc。\n\n看这里关于如何使它的更多信息:修复smbus支持\n\n\n# tsc\n\ntsc(时间戳计数器)负责确保你的硬件以正确的速度运行，问题是一些固件(主要是hedt/服务器和华硕笔记本电脑)不会将tsc写入所有核心，从而导致问题。为了解决这个问题，我们有三个选择:\n\n * cputscsync\n   * 针对麻烦的笔记本电脑\n * voodootscsync\n   * 用于大多数hedt硬件\n * tscadjustreset\n   * 用于skylake x/w/sp和cascade lake x/w/sp硬件\n\n前两个是即插即用，而后者需要一些定制:\n\n * 打开kext(在访达中显示包内容， contents -> info.plist)并更改info plist -> iokitpersonalities -> iopropertymatch -> iocpunumber为从0开始的cpu线程数(i9 7980xe 18核心将是35，因为它总共有36个线程)\n * 编译后的版本可以在这里找到:tscadjustreet .kext\n\n\n\n查看tsc问题的最常见方法:\n\n案例 1   案例 2\n       ",charsets:{cjk:!0}},{title:"更新OpenCore和macOS",frontmatter:{},regularPath:"/universal/update.html",relativePath:"universal/update.md",key:"v-df55b176",path:"/universal/update.html",headers:[{level:2,title:"更新OpenCore",slug:"更新opencore",normalizedTitle:"更新opencore",charIndex:2},{level:3,title:"1. 下载最新版OpenCore",slug:"_1-下载最新版opencore",normalizedTitle:"1. 下载最新版opencore",charIndex:200},{level:3,title:"2. 挂载你的EFI",slug:"_2-挂载你的efi",normalizedTitle:"2. 挂载你的efi",charIndex:237},{level:3,title:"3. 用刚才下载的文件替换OpenCore文件",slug:"_3-用刚才下载的文件替换opencore文件",normalizedTitle:"3. 用刚才下载的文件替换opencore文件",charIndex:479},{level:3,title:"4. 比较你的 config.plist 和新的 Sample.plist",slug:"_4-比较你的-config-plist-和新的-sample-plist",normalizedTitle:"4. 比较你的 config.plist 和新的 sample.plist",charIndex:685},{level:3,title:"5. 引导!",slug:"_5-引导",normalizedTitle:"5. 引导!",charIndex:1354},{level:2,title:"更新kext",slug:"更新kext",normalizedTitle:"更新kext",charIndex:1443},{level:2,title:"更新macOS",slug:"更新macos",normalizedTitle:"更新macos",charIndex:1595}],lastUpdated:"2/14/2023, 5:12:00 PM",lastUpdatedTimestamp:167639472e4,headersStr:"更新OpenCore 1. 下载最新版OpenCore 2. 挂载你的EFI 3. 用刚才下载的文件替换OpenCore文件 4. 比较你的 config.plist 和新的 Sample.plist 5. 引导! 更新kext 更新macOS",content:"# 更新OpenCore和macOS\n\n\n# 更新OpenCore\n\n所以更新OpenCore的主要注意事项:\n\n * Releases 在每个月的第一个星期一发布\n * Differences.pdf 会告诉你与之前的版本相比，这个OpenCore版本中添加和删除的所有内容\n * OpenCore安装指南将在标题 中有关于它支持的发布版本的说明\n\n> 那我怎么更新呢?\n\n具体过程如下:\n\n\n# 1. 下载最新版OpenCore\n\n * OpenCorePkg\n\n\n# 2. 挂载你的EFI\n\n * 因此，首先，让我们挂载硬盘的EFI，并在某个安全的地方用MountEFI做一个拷贝。我们不会一开始就更新硬盘的EFI，相反，我们会拿一个备用USB作为我们的虚拟机。这允许我们保留一个OpenCore的工作副本，以防我们的更新失败\n\n * 对于USB，必须格式化为GUID。原因是GUID会自动创建一个EFI分区，尽管默认情况下这是隐藏的，所以你需要用MountEFI挂载它。\n\n\n\n * 现在您可以将您的OpenCore EFI放在USB上\n\n\n\n\n# 3. 用刚才下载的文件替换OpenCore文件\n\n * 需要更新的重要内容:\n   \n   * EFI/BOOT/BOOTx64.efi\n   * EFI/OC/OpenCore.efi\n   * EFI/OC/Drivers/OpenRuntime.efi(不要忘记这个，OpenCore不会启动不匹配的版本)\n\n * 如果有的话，你也可以更新其他驱动程序，这些只是为了正确引导必须更新的驱动程序\n\n\n\n\n# 4. 比较你的 config.plist 和新的 Sample.plist\n\n * 有几种方法可以做到这一点:\n   \n   * OCConfigCompare 用于比较sample.plist 和你的 config.plist\n   * 在终端中输入diff (file input 1) (file input 2)\n   * Meld Merge, WinMerge，或其他您最喜欢的比较软件\n   * 根据阅读更新的OpenCore安装指南制作一个新配置\n\n\n\n * 一旦您进行了调整，以确保您的配置与OpenCore的最新版本兼容，您可以使用OpenCore实用工具ocvalidate:此工具将帮助确保您的 config.plist 与匹配构建的OpenCore规范匹配。\n   * 请注意，ocvalidate必须与使用的OpenCore版本匹配，并且可能无法检测到文件中存在的所有配置缺陷。我们建议您使用OpenCore指南再次检查您的设置，以了解设置的内容，否则请阅读Differences.pdf 以获取有关更改的更深入的文档。\n   * 要运行ocvalidate， cd进入OpenCore的utilities/ocvalidate/再运行./ocvalidate。注意，你可能需要运行chmod +x ocvalidate才能执行。\n   * 此外，更新ProperTree并执行OC快照(Ctrl/Cmd+R)，以确保您的SSDTs、驱动程序、kext等的配置条目符合OpenCore预期的格式。\n\n\n\n\n# 5. 引导!\n\n * 一旦虚拟USB正常工作，你就可以挂载EFI并将其移动到硬盘的EFI分区。记得保留一份你的旧EFI的副本，以防万一OpenCore在路上表现得很滑稽\n\n\n# 更新kext\n\n * 更新kext与更新OpenCore的过程类似，复制所有内容并在虚拟USB上更新，以防出现问题\n\n * 更新kext最简单的方法是使用以下两个工具:\n   \n   * Lilu 和 Friends 下载并编译kext\n   * Kext Extractor 合并到您的EFI\n\n\n# 更新macOS\n\n * 所以这可能是最具挑战性的部分之一，通过操作系统更新来维护您的系统。需要注意的主要事项:\n   \n   * 更新操作系统时，请确保所有内容都已更新，并且有某种形式的恢复，如TimeMachine或已知EFI良好的旧macOS安装程序\n   * 在谷歌上搜索一下，看看其他人对最新的更新是否有问题\n\n * 我还提供了更多关于macOS版本中变化的详细示意图，参见下面:\n\nmacOS Catalina:\n\n * 10.15.0\n   * 需要适当的EC\n   * 双插座和大多数AMD cpu需要 AppleMCEReporterDisabler.kext\n   * MacPro5,1的支持已经取消\n * 10.15.1\n   * 需要WhateverGreen 1.3.4+\n   * 破坏了许多gpu的DRM(参见DRM图表)\n   * 需要所有以前的修复\n * 10.15.2\n   * 修复了安装程序中的Navi支持\n   * 需要所有以前的修复\n * 10.15.3\n   * 不变\n   * 需要所有以前的修复\n * 10.15.4\n   * AMD CPU用户需要更新cpuid_set_cpufamily补丁\n   * 修正了许多基于Ellesmere的北极星gpu上的DRM\n   * 需要之前所有的修复(不包括Polaris DRM的shikigva=80)\n * 10.15.5\n   * UHD 630的framebuffer坏了，如果你收到黑屏，你可能需要从07009B3E切换到00009B3E\n   * Comet Lake不再需要欺骗CPU ID\n * 10.15.6\n   * 不变\n   * 需要10.15.5之前的所有修复\n * 10.15.7\n   * 不变\n   * 需要10.15.5之前的所有修复\n\nmacOS Big Sur:\n\n * 11.0.1\n   * 查看这里: OpenCore 和 macOS 11: Big Sur\n\nmacOS Monterey:\n\n * 12.0.1\n   * 查看这里: OpenCore 和 macOS 12: Monterey",normalizedContent:"# 更新opencore和macos\n\n\n# 更新opencore\n\n所以更新opencore的主要注意事项:\n\n * releases 在每个月的第一个星期一发布\n * differences.pdf 会告诉你与之前的版本相比，这个opencore版本中添加和删除的所有内容\n * opencore安装指南将在标题 中有关于它支持的发布版本的说明\n\n> 那我怎么更新呢?\n\n具体过程如下:\n\n\n# 1. 下载最新版opencore\n\n * opencorepkg\n\n\n# 2. 挂载你的efi\n\n * 因此，首先，让我们挂载硬盘的efi，并在某个安全的地方用mountefi做一个拷贝。我们不会一开始就更新硬盘的efi，相反，我们会拿一个备用usb作为我们的虚拟机。这允许我们保留一个opencore的工作副本，以防我们的更新失败\n\n * 对于usb，必须格式化为guid。原因是guid会自动创建一个efi分区，尽管默认情况下这是隐藏的，所以你需要用mountefi挂载它。\n\n\n\n * 现在您可以将您的opencore efi放在usb上\n\n\n\n\n# 3. 用刚才下载的文件替换opencore文件\n\n * 需要更新的重要内容:\n   \n   * efi/boot/bootx64.efi\n   * efi/oc/opencore.efi\n   * efi/oc/drivers/openruntime.efi(不要忘记这个，opencore不会启动不匹配的版本)\n\n * 如果有的话，你也可以更新其他驱动程序，这些只是为了正确引导必须更新的驱动程序\n\n\n\n\n# 4. 比较你的 config.plist 和新的 sample.plist\n\n * 有几种方法可以做到这一点:\n   \n   * occonfigcompare 用于比较sample.plist 和你的 config.plist\n   * 在终端中输入diff (file input 1) (file input 2)\n   * meld merge, winmerge，或其他您最喜欢的比较软件\n   * 根据阅读更新的opencore安装指南制作一个新配置\n\n\n\n * 一旦您进行了调整，以确保您的配置与opencore的最新版本兼容，您可以使用opencore实用工具ocvalidate:此工具将帮助确保您的 config.plist 与匹配构建的opencore规范匹配。\n   * 请注意，ocvalidate必须与使用的opencore版本匹配，并且可能无法检测到文件中存在的所有配置缺陷。我们建议您使用opencore指南再次检查您的设置，以了解设置的内容，否则请阅读differences.pdf 以获取有关更改的更深入的文档。\n   * 要运行ocvalidate， cd进入opencore的utilities/ocvalidate/再运行./ocvalidate。注意，你可能需要运行chmod +x ocvalidate才能执行。\n   * 此外，更新propertree并执行oc快照(ctrl/cmd+r)，以确保您的ssdts、驱动程序、kext等的配置条目符合opencore预期的格式。\n\n\n\n\n# 5. 引导!\n\n * 一旦虚拟usb正常工作，你就可以挂载efi并将其移动到硬盘的efi分区。记得保留一份你的旧efi的副本，以防万一opencore在路上表现得很滑稽\n\n\n# 更新kext\n\n * 更新kext与更新opencore的过程类似，复制所有内容并在虚拟usb上更新，以防出现问题\n\n * 更新kext最简单的方法是使用以下两个工具:\n   \n   * lilu 和 friends 下载并编译kext\n   * kext extractor 合并到您的efi\n\n\n# 更新macos\n\n * 所以这可能是最具挑战性的部分之一，通过操作系统更新来维护您的系统。需要注意的主要事项:\n   \n   * 更新操作系统时，请确保所有内容都已更新，并且有某种形式的恢复，如timemachine或已知efi良好的旧macos安装程序\n   * 在谷歌上搜索一下，看看其他人对最新的更新是否有问题\n\n * 我还提供了更多关于macos版本中变化的详细示意图，参见下面:\n\nmacos catalina:\n\n * 10.15.0\n   * 需要适当的ec\n   * 双插座和大多数amd cpu需要 applemcereporterdisabler.kext\n   * macpro5,1的支持已经取消\n * 10.15.1\n   * 需要whatevergreen 1.3.4+\n   * 破坏了许多gpu的drm(参见drm图表)\n   * 需要所有以前的修复\n * 10.15.2\n   * 修复了安装程序中的navi支持\n   * 需要所有以前的修复\n * 10.15.3\n   * 不变\n   * 需要所有以前的修复\n * 10.15.4\n   * amd cpu用户需要更新cpuid_set_cpufamily补丁\n   * 修正了许多基于ellesmere的北极星gpu上的drm\n   * 需要之前所有的修复(不包括polaris drm的shikigva=80)\n * 10.15.5\n   * uhd 630的framebuffer坏了，如果你收到黑屏，你可能需要从07009b3e切换到00009b3e\n   * comet lake不再需要欺骗cpu id\n * 10.15.6\n   * 不变\n   * 需要10.15.5之前的所有修复\n * 10.15.7\n   * 不变\n   * 需要10.15.5之前的所有修复\n\nmacos big sur:\n\n * 11.0.1\n   * 查看这里: opencore 和 macos 11: big sur\n\nmacos monterey:\n\n * 12.0.1\n   * 查看这里: opencore 和 macos 12: monterey",charsets:{cjk:!0}},{title:"为什么你要USB映射",frontmatter:{},regularPath:"/usb/",relativePath:"usb/README.md",key:"v-478f963e",path:"/usb/",headers:[{level:2,title:"macOS和15端口限制",slug:"macos和15端口限制",normalizedTitle:"macos和15端口限制",charIndex:543},{level:2,title:"现在背景故事已经完成，让我们前往系统准备",slug:"现在背景故事已经完成-让我们前往系统准备",normalizedTitle:"现在背景故事已经完成，让我们前往系统准备",charIndex:1255}],lastUpdated:"2/14/2023, 5:12:00 PM",lastUpdatedTimestamp:167639472e4,headersStr:"macOS和15端口限制 现在背景故事已经完成，让我们前往系统准备",content:"# 为什么你要USB映射\n\nUSB映射的过程是定义你到macOS的端口，并告诉它它们是什么类型，我们想这样做的原因是:\n\n * macOS很不擅长猜测你有什么样的端口\n * 一些端口可能会低于其额定速度(3.1端口运行在2.0)\n * 有些端口可能完全不能工作\n * 蓝牙无法使用\n * 某些服务，如切换可能无法正常工作\n * 睡眠可能会中断\n * 热插拔损坏\n * 甚至是来自XhciPortLimit的数据损坏\n\n所以现在你知道为什么你应该USB映射，我们现在可以谈谈USB映射的技术信息。这是一个你不能跳过的部分，否则下面的所有信息将看起来像是一个醉酒的斯拉夫人写的一个非常蹩脚的俄语翻译。\n\n因此，对于USB，我们需要了解并非所有端口都是相同的，有些端口实际上隐藏了其他端口!我的意思如下:\n\n * 一个USB 3.0端口实际上可以看作到macOS的两个端口:一个USB 2.0 和一个USB 3.0\n * 这也是USB保持向后兼容性的方式，因为所有USB 3.0设备必须支持USB 2.0\n\n现在让我们看一下USB端口的图，以便更好地理解这一点:\n\n\n\n现在让我们看一下USB端口的图，以便更好地理解这一点:\n\n现在有了基本的理解，我们现在要讨论可怕的15端口限制。\n\n\n# macOS和15端口限制\n\n现在让我带你回到2015年末OS X 10.11 El Capitan发布的时候。这是一个更新，在社区中建立了许多既让我们高兴又让我们痛苦的东西，如系统完整性保护和15端口限制。\n\n在macOS(当时称为OS X)中，15个端口的限制是严格限制每个控制器只有15个可能的端口，当我们查看主板上包含的芯片组端口时，这就成为一个问题:\n\n * Z170和更新的芯片组:总共26端口\n\n你甚至可能没有26个实际的端口，但它们仍然在你的ACPI表中声明，这导致了问题，因为macOS无法区分真正的端口和固件作者忘记删除的端口。\n\n> 但是为什么苹果选择15个端口作为限制呢?\n\n这就进入了计算机的一个有趣的子集，十六进制计数系统!它与十进制系统的不同之处在于，一共有15个值，最后一个值是0xF。这意味着，比起将端口限制扩展到255(0xFF)，停止在15要好得多。在苹果看来，端口超过15是没有意义的，因为他们支持的mac都没有超过这个限制。如果Mac Pro用户增加一个USB扩展卡，它就会有自己的15端口限制。\n\n现在当我们考虑怪异的XhciPortLimit时，你可以看到为什么会发生数据损坏。当我们超过0xF极限，进入其他人的空间时。所以，尽可能避免这种怪癖。\n\n * 注意:虽然XhciPortLimit这个名称看起来似乎是在限制XHCI端口的数量，但实际上它是在为XHCI端口限制打补丁，使其达到更高的值。\n\n> 那么USB集线器呢?\n\n连接到USB控制器端口的USB集线器有一种不同的端口限制。总的来说，一个USB端口可以拆分为127个端口。这包括USB集线器连接到USB集线器\n\n\n# 现在背景故事已经完成，让我们前往系统准备",normalizedContent:"# 为什么你要usb映射\n\nusb映射的过程是定义你到macos的端口，并告诉它它们是什么类型，我们想这样做的原因是:\n\n * macos很不擅长猜测你有什么样的端口\n * 一些端口可能会低于其额定速度(3.1端口运行在2.0)\n * 有些端口可能完全不能工作\n * 蓝牙无法使用\n * 某些服务，如切换可能无法正常工作\n * 睡眠可能会中断\n * 热插拔损坏\n * 甚至是来自xhciportlimit的数据损坏\n\n所以现在你知道为什么你应该usb映射，我们现在可以谈谈usb映射的技术信息。这是一个你不能跳过的部分，否则下面的所有信息将看起来像是一个醉酒的斯拉夫人写的一个非常蹩脚的俄语翻译。\n\n因此，对于usb，我们需要了解并非所有端口都是相同的，有些端口实际上隐藏了其他端口!我的意思如下:\n\n * 一个usb 3.0端口实际上可以看作到macos的两个端口:一个usb 2.0 和一个usb 3.0\n * 这也是usb保持向后兼容性的方式，因为所有usb 3.0设备必须支持usb 2.0\n\n现在让我们看一下usb端口的图，以便更好地理解这一点:\n\n\n\n现在让我们看一下usb端口的图，以便更好地理解这一点:\n\n现在有了基本的理解，我们现在要讨论可怕的15端口限制。\n\n\n# macos和15端口限制\n\n现在让我带你回到2015年末os x 10.11 el capitan发布的时候。这是一个更新，在社区中建立了许多既让我们高兴又让我们痛苦的东西，如系统完整性保护和15端口限制。\n\n在macos(当时称为os x)中，15个端口的限制是严格限制每个控制器只有15个可能的端口，当我们查看主板上包含的芯片组端口时，这就成为一个问题:\n\n * z170和更新的芯片组:总共26端口\n\n你甚至可能没有26个实际的端口，但它们仍然在你的acpi表中声明，这导致了问题，因为macos无法区分真正的端口和固件作者忘记删除的端口。\n\n> 但是为什么苹果选择15个端口作为限制呢?\n\n这就进入了计算机的一个有趣的子集，十六进制计数系统!它与十进制系统的不同之处在于，一共有15个值，最后一个值是0xf。这意味着，比起将端口限制扩展到255(0xff)，停止在15要好得多。在苹果看来，端口超过15是没有意义的，因为他们支持的mac都没有超过这个限制。如果mac pro用户增加一个usb扩展卡，它就会有自己的15端口限制。\n\n现在当我们考虑怪异的xhciportlimit时，你可以看到为什么会发生数据损坏。当我们超过0xf极限，进入其他人的空间时。所以，尽可能避免这种怪癖。\n\n * 注意:虽然xhciportlimit这个名称看起来似乎是在限制xhci端口的数量，但实际上它是在为xhci端口限制打补丁，使其达到更高的值。\n\n> 那么usb集线器呢?\n\n连接到usb控制器端口的usb集线器有一种不同的端口限制。总的来说，一个usb端口可以拆分为127个端口。这包括usb集线器连接到usb集线器\n\n\n# 现在背景故事已经完成，让我们前往系统准备",charsets:{cjk:!0}},{title:"USB Mapping",frontmatter:{},regularPath:"/usb/amd-mapping/amd.html",relativePath:"usb/amd-mapping/amd.md",key:"v-71251f53",path:"/usb/amd-mapping/amd.html",headers:[{level:2,title:"AMD and 3rd Party USB Mapping",slug:"amd-and-3rd-party-usb-mapping",normalizedTitle:"amd and 3rd party usb mapping",charIndex:38},{level:2,title:"Creating the map",slug:"creating-the-map",normalizedTitle:"creating the map",charIndex:71},{level:2,title:"Port mapping on screwed up DSDTs",slug:"port-mapping-on-screwed-up-dsdts",normalizedTitle:"port mapping on screwed up dsdts",charIndex:91},{level:2,title:"Port mapping with generic AppleUSB20XHCIPort/'AppleUSB30XHCIPort",slug:"port-mapping-with-generic-appleusb20xhciport-appleusb30xhciport",normalizedTitle:"port mapping with generic appleusb20xhciport/'appleusb30xhciport",charIndex:6273},{level:2,title:"Port mapping when you have multiple of the same controller",slug:"port-mapping-when-you-have-multiple-of-the-same-controller",normalizedTitle:"port mapping when you have multiple of the same controller",charIndex:127},{level:3,title:"IOPathMatch property",slug:"iopathmatch-property",normalizedTitle:"iopathmatch property",charIndex:7238},{level:3,title:"SSDT Recreation",slug:"ssdt-recreation",normalizedTitle:"ssdt recreation",charIndex:7360}],lastUpdated:"2/14/2023, 5:12:00 PM",lastUpdatedTimestamp:167639472e4,headersStr:"AMD and 3rd Party USB Mapping Creating the map Port mapping on screwed up DSDTs Port mapping with generic AppleUSB20XHCIPort/'AppleUSB30XHCIPort Port mapping when you have multiple of the same controller IOPathMatch property SSDT Recreation",content:"# USB Mapping\n\nTable of Contents:\n\n * AMD and 3rd Party USB Mapping\n * Creating the map\n * Port mapping on screwed up DSDTs\n * Port mapping when you have multiple of the same controller\n\nSo with the prerequisites out of the way, we can finally get to the meat of this guide. And now we get to finally read one of my favorite books before I go to bed each night: The Advanced Configuration and Power Interface (ACPI) Specification!\n\nNow if you haven't read through this before(which I highly recommend you do, it's a thrilling tale), I'll point you to the meat of the USB situation:\n\n * Section 9.14: _UPC (USB Port Capabilities)\n\nHere we're greeted with all the possible USB ports in ACPI:\n\nTYPE   INFO                                                    COMMENTS\n0      USB 2.0 Type-A connector                                This is what macOS will default all ports to when no map is\n                                                               present\n3      USB 3.0 Type-A connector                                3.0, 3.1 and 3.2 ports share the same Type\n8      Type C connector - USB 2.0-only                         Mainly seen in phones\n9      Type C connector - USB 2.0 and USB 3.0 with Switch      Flipping the device does not change the ACPI port\n10     Type C connector - USB 2.0 and USB 3.0 without Switch   Flipping the device does change the ACPI port. generally\n                                                               seen on 3.1/2 motherboard headers\n255    Proprietary connector                                   For Internal USB ports like Bluetooth\n\n\n# AMD and 3rd Party USB Mapping\n\nThe steps are quite simple:\n\n * Read this guide\n * Cry a bit\n * Cry some more\n * Buy some Intel hardware\n * Return said hardware\n * Gather courage to USB map on AMD\n * Read the rest of the guide again and actually USB map\n\n\n# Creating the map\n\nSo to start off, open IORegistryExplorer and find the USB controller you'd wish to map. For controllers, they come in some variations:\n\n * XHC\n * XHC0\n * XHC1\n * XHC2\n * XHCI\n * XHCX\n * AS43\n * PTXH (Commonly associated with AMD Chipset controllers)\n * PTCP (Found on AsRock X399, in ACPI these ports are actually called PXTX but macOS will enumerate them differently)\n * PXSX(This is a generic PCIe device, double check it's a USB device)\n\nThe best way to find controllers is by searching for XHC and then looking at the results that come up, the parent of all the ports is the USB controller. Do note that many boards have multiple controllers but the port limit is per controller.\n\nFor today's example, we'll be both adding missing ports and getting under the 15 port limit for this X399 chipset which has the identifier PTXH\n\n\n\nAs you can see from the photo above, we're missing a shit ton of ports! Specifically ports POT3, POT4, POT7, POT8, PO12, PO13, PO15, PO16, PO17, PO18, PO19, PO20, PO21, PO22!\n\nSo how do we fix this? Well if you look in the corner you'll see the port value. This is going to be important to us when mapping\n\nNext, let's take a peek at our DSDT and check for our PTXH device with maciASL:\n\nTOP OF PTXH   BOTTOM OF PTXH\n              \n\nAll of our ports are here! So why in the world is macOS hiding them? Well there's a couple of reasons but this being the main: Conflicting SMBIOS USB map\n\nInside the AppleUSBHostPlatformProperties.kext you'll find the USB map for most SMBIOS, this means that that machine's USB map is forced onto your system.\n\nWell to kick out these bad maps, we gotta make a plugin kext. For us, that's the AMD-USB-Map.kext\n\nNow right-click and press Show Package Contents, then navigate to Contents/Info.plist\n\nIf the port values don't show in Xcode, right click and select Show Raw Keys/Values\n\nSo what kind of data do we shove into this plist? Well, there are a couple of sections to note:\n\n * Model: SMBIOS the kext will match against, set this up to what SMBIOS you are currently using\n * IONameMatch: The name of the controller it'll match against, in this example we'll use PTXH\n   * IOPathMatch is another entry you can use instead, if you have multiple controllers with the same name(ie. 2 XHC0)\n * port-count: The last/largest port value that you want to be injected\n * port: The address of the USB controller\n * UsbConnector: The type of USB connector, which can be found on the ACPI 6.3 spec, section 9.14\n\n> How do I know which ports are 2.0 and which are 3.0?\n\nWell, the easiest way is grabbing a USB 2.0 and USB 3.0 device, then write down which ports are what type from observing IOReg.\n\n * Remember: USB 3.0 ports have dual personalities, so you must test both a 2.0 drive and 3.0 to know which ports are associated with it in IOReg.\n\nNow, let's take this section:\n\nDevice (PO18)\n   {\n   Name (_ADR, 0x12) // _ADR: Address\n   Name (_UPC, Package (0x04) // _UPC: USB Port Capabilities\n      {\n         Zero,\n         0xFF,\n         Zero,\n         Zero\n      })\n   }\n\n\nFor us, what matters is the Name (_ADR, 0x12) // _ADR: Address as this tells us the location of the USB port. This value will be turned into our port value on the plist. Some DSDTs don't declare their USB address, for these situations we can see their IOReg properties.\n\n\n\nReminder: Don't drag and drop the kext, read the guide carefully. Rename IONameMatch value to the correct controller you're wanting to map and verify that the ports are named correctly to your DSDT. If you could drag and drop it and have it work for everyone there wouldn't be a guide ;p\n\nNow save and add this to both your kext folder and config.plist then reboot!\n\nNow we can finally start to slowly remove unwanted ports from the Info.plist and remove the XhciPortLimit quirk once you have 15 ports total or less per controller.\n\n\n# Port mapping on screwed up DSDTs\n\nSomething you may have noticed is that your DSDT is even missing some ports, like for example:\n\n\n\nIn this DSDT, we're missing HS02, HS03, HS04, HS05, etc. When this happens, we actually need to outright remove all our ports from that controller in our DSDT. What this will let us do is allow macOS to build the ports itself instead of basing it off of the ACPI. Save this modified DSDT.aml and place it in your EFI/OC/ACPI folder and specify it in your config.plist -> ACPI -> Add(note that DSDT.aml must be forced to work correctly)\n\n\n# Port mapping with generic AppleUSB20XHCIPort/'AppleUSB30XHCIPort\n\nAn odd issue with some OEM's ACPI is that they never actually define or properly name the USB ports. And so when macOS's IOService starts scanning and building the ports, they're given a generic name. This makes it difficult to really know where your ports are.\n\nTo resolve this, we can simply add names with our USBmap.kext, this is thanks to us matching the USB map based off of the USB port's location instead of by name.\n\nSo before you USB map, you'll get something like this:\n\n\n\nWith our map, your kext should look something like this:\n\n\n\nAnd the end result once the map is applied:\n\n\n\n\n# Port mapping when you have multiple of the same controller\n\nThis becomes a problem when we run systems with many USB controllers which all want to have the same identifier, commonly being multiple XHC0 devices or AsMedia controllers showing up as generic PXSX devices. To fix this, we have 3 options:\n\n * IOPathMatch property\n * ACPI Rename (won't be covered in this guide, see ACPI section of OpenCore's configuration.pdf)\n * SSDT Recreation\n\n\n# IOPathMatch property\n\nActually quite simple, grab the sample USBmap.kext we provided earlier and look for the IONameMatch Property. Now rename this to IOPathMatch.\n\nFinally, grab IOreg and look for your USB controller:\n\n\n\nFrom here, pay very close attention to which actual device I selected. Specifically the child of XHC0@0,3 being XHC0@61000000, reason for this is that's our Root-hub(or what macOS uses to enumerate ports) The child with the same name is actually a root hub but does not concern us\n\nNow copy the XHC0@61000000 entry and paste it back into the IOPathMatch entry in our USBmap.kext's info.plist, this should result in quite a long path name:\n\nIOService:/AppleACPIPlatformExpert/S0D1@0/AppleACPIPCI/D1C0@7,1/IOPP/XHC0@0,3/XHC0@61000000\n\n\nAnd once done your USBmap's IOPathMatch should look like this:\n\n\n\n\n# SSDT Recreation\n\nWith the SSDT Recreation method, what we'll be doing is \"renaming\" the device but in reality creating a brand new device just for macOS that is in the exact same spot as your old USB controller.\n\nTo do this, grab the following SSDT:\n\n * SSDT-SHC0.dsl\n\nWhat you'll want to do is find a controller you want to rename, find its full ACPI path and replace the one in the sample SSDT. In our sample, we're be renaming PCI0.GP13.XHC0 to SHC0 so change accordingly.\n\n\n\nNote: In rare cases, macOS isn't able to properly rebuild the USB ports with the new \"fake\" USB controller. In these situations we need to manually add ports to it that are present in the original controller(ie. HS01, HS02, POT1, etc)\n\n> But how do I map a non-standard controller that shows up as PXSX?\n\nSimilar idea to regular SSDT renaming except you need to actually find the controller. This becomes difficult as SSDs, network controllers, and other generic PCIe devices can also show up as PXSX. Check the ACPI-path in IOreg to find its path:\n\n\n\nAs we can see, IOACPIPlane:/_SB/PC00@0/RP05@1c0004/PXSX@0 would be interpreted as SB.PC00.RP05.PXSX\n\nAnd so from the above SSDT, we change the following:\n\n * External (_SB_.PCI0.GP13, DeviceObj) -> External (_SB_.PC00.RP05, DeviceObj)\n * External (_SB_.PCI0.GP13.XHC0, DeviceObj) -> External (_SB_.PC00.RP05.PXSX, DeviceObj)\n * Scope (\\_SB.PCI0.GP13) -> Scope (\\_SB.PC00.RP05)\n * Scope (XHC0) -> Scope (PXSX)",normalizedContent:"# usb mapping\n\ntable of contents:\n\n * amd and 3rd party usb mapping\n * creating the map\n * port mapping on screwed up dsdts\n * port mapping when you have multiple of the same controller\n\nso with the prerequisites out of the way, we can finally get to the meat of this guide. and now we get to finally read one of my favorite books before i go to bed each night: the advanced configuration and power interface (acpi) specification!\n\nnow if you haven't read through this before(which i highly recommend you do, it's a thrilling tale), i'll point you to the meat of the usb situation:\n\n * section 9.14: _upc (usb port capabilities)\n\nhere we're greeted with all the possible usb ports in acpi:\n\ntype   info                                                    comments\n0      usb 2.0 type-a connector                                this is what macos will default all ports to when no map is\n                                                               present\n3      usb 3.0 type-a connector                                3.0, 3.1 and 3.2 ports share the same type\n8      type c connector - usb 2.0-only                         mainly seen in phones\n9      type c connector - usb 2.0 and usb 3.0 with switch      flipping the device does not change the acpi port\n10     type c connector - usb 2.0 and usb 3.0 without switch   flipping the device does change the acpi port. generally\n                                                               seen on 3.1/2 motherboard headers\n255    proprietary connector                                   for internal usb ports like bluetooth\n\n\n# amd and 3rd party usb mapping\n\nthe steps are quite simple:\n\n * read this guide\n * cry a bit\n * cry some more\n * buy some intel hardware\n * return said hardware\n * gather courage to usb map on amd\n * read the rest of the guide again and actually usb map\n\n\n# creating the map\n\nso to start off, open ioregistryexplorer and find the usb controller you'd wish to map. for controllers, they come in some variations:\n\n * xhc\n * xhc0\n * xhc1\n * xhc2\n * xhci\n * xhcx\n * as43\n * ptxh (commonly associated with amd chipset controllers)\n * ptcp (found on asrock x399, in acpi these ports are actually called pxtx but macos will enumerate them differently)\n * pxsx(this is a generic pcie device, double check it's a usb device)\n\nthe best way to find controllers is by searching for xhc and then looking at the results that come up, the parent of all the ports is the usb controller. do note that many boards have multiple controllers but the port limit is per controller.\n\nfor today's example, we'll be both adding missing ports and getting under the 15 port limit for this x399 chipset which has the identifier ptxh\n\n\n\nas you can see from the photo above, we're missing a shit ton of ports! specifically ports pot3, pot4, pot7, pot8, po12, po13, po15, po16, po17, po18, po19, po20, po21, po22!\n\nso how do we fix this? well if you look in the corner you'll see the port value. this is going to be important to us when mapping\n\nnext, let's take a peek at our dsdt and check for our ptxh device with maciasl:\n\ntop of ptxh   bottom of ptxh\n              \n\nall of our ports are here! so why in the world is macos hiding them? well there's a couple of reasons but this being the main: conflicting smbios usb map\n\ninside the appleusbhostplatformproperties.kext you'll find the usb map for most smbios, this means that that machine's usb map is forced onto your system.\n\nwell to kick out these bad maps, we gotta make a plugin kext. for us, that's the amd-usb-map.kext\n\nnow right-click and press show package contents, then navigate to contents/info.plist\n\nif the port values don't show in xcode, right click and select show raw keys/values\n\nso what kind of data do we shove into this plist? well, there are a couple of sections to note:\n\n * model: smbios the kext will match against, set this up to what smbios you are currently using\n * ionamematch: the name of the controller it'll match against, in this example we'll use ptxh\n   * iopathmatch is another entry you can use instead, if you have multiple controllers with the same name(ie. 2 xhc0)\n * port-count: the last/largest port value that you want to be injected\n * port: the address of the usb controller\n * usbconnector: the type of usb connector, which can be found on the acpi 6.3 spec, section 9.14\n\n> how do i know which ports are 2.0 and which are 3.0?\n\nwell, the easiest way is grabbing a usb 2.0 and usb 3.0 device, then write down which ports are what type from observing ioreg.\n\n * remember: usb 3.0 ports have dual personalities, so you must test both a 2.0 drive and 3.0 to know which ports are associated with it in ioreg.\n\nnow, let's take this section:\n\ndevice (po18)\n   {\n   name (_adr, 0x12) // _adr: address\n   name (_upc, package (0x04) // _upc: usb port capabilities\n      {\n         zero,\n         0xff,\n         zero,\n         zero\n      })\n   }\n\n\nfor us, what matters is the name (_adr, 0x12) // _adr: address as this tells us the location of the usb port. this value will be turned into our port value on the plist. some dsdts don't declare their usb address, for these situations we can see their ioreg properties.\n\n\n\nreminder: don't drag and drop the kext, read the guide carefully. rename ionamematch value to the correct controller you're wanting to map and verify that the ports are named correctly to your dsdt. if you could drag and drop it and have it work for everyone there wouldn't be a guide ;p\n\nnow save and add this to both your kext folder and config.plist then reboot!\n\nnow we can finally start to slowly remove unwanted ports from the info.plist and remove the xhciportlimit quirk once you have 15 ports total or less per controller.\n\n\n# port mapping on screwed up dsdts\n\nsomething you may have noticed is that your dsdt is even missing some ports, like for example:\n\n\n\nin this dsdt, we're missing hs02, hs03, hs04, hs05, etc. when this happens, we actually need to outright remove all our ports from that controller in our dsdt. what this will let us do is allow macos to build the ports itself instead of basing it off of the acpi. save this modified dsdt.aml and place it in your efi/oc/acpi folder and specify it in your config.plist -> acpi -> add(note that dsdt.aml must be forced to work correctly)\n\n\n# port mapping with generic appleusb20xhciport/'appleusb30xhciport\n\nan odd issue with some oem's acpi is that they never actually define or properly name the usb ports. and so when macos's ioservice starts scanning and building the ports, they're given a generic name. this makes it difficult to really know where your ports are.\n\nto resolve this, we can simply add names with our usbmap.kext, this is thanks to us matching the usb map based off of the usb port's location instead of by name.\n\nso before you usb map, you'll get something like this:\n\n\n\nwith our map, your kext should look something like this:\n\n\n\nand the end result once the map is applied:\n\n\n\n\n# port mapping when you have multiple of the same controller\n\nthis becomes a problem when we run systems with many usb controllers which all want to have the same identifier, commonly being multiple xhc0 devices or asmedia controllers showing up as generic pxsx devices. to fix this, we have 3 options:\n\n * iopathmatch property\n * acpi rename (won't be covered in this guide, see acpi section of opencore's configuration.pdf)\n * ssdt recreation\n\n\n# iopathmatch property\n\nactually quite simple, grab the sample usbmap.kext we provided earlier and look for the ionamematch property. now rename this to iopathmatch.\n\nfinally, grab ioreg and look for your usb controller:\n\n\n\nfrom here, pay very close attention to which actual device i selected. specifically the child of xhc0@0,3 being xhc0@61000000, reason for this is that's our root-hub(or what macos uses to enumerate ports) the child with the same name is actually a root hub but does not concern us\n\nnow copy the xhc0@61000000 entry and paste it back into the iopathmatch entry in our usbmap.kext's info.plist, this should result in quite a long path name:\n\nioservice:/appleacpiplatformexpert/s0d1@0/appleacpipci/d1c0@7,1/iopp/xhc0@0,3/xhc0@61000000\n\n\nand once done your usbmap's iopathmatch should look like this:\n\n\n\n\n# ssdt recreation\n\nwith the ssdt recreation method, what we'll be doing is \"renaming\" the device but in reality creating a brand new device just for macos that is in the exact same spot as your old usb controller.\n\nto do this, grab the following ssdt:\n\n * ssdt-shc0.dsl\n\nwhat you'll want to do is find a controller you want to rename, find its full acpi path and replace the one in the sample ssdt. in our sample, we're be renaming pci0.gp13.xhc0 to shc0 so change accordingly.\n\n\n\nnote: in rare cases, macos isn't able to properly rebuild the usb ports with the new \"fake\" usb controller. in these situations we need to manually add ports to it that are present in the original controller(ie. hs01, hs02, pot1, etc)\n\n> but how do i map a non-standard controller that shows up as pxsx?\n\nsimilar idea to regular ssdt renaming except you need to actually find the controller. this becomes difficult as ssds, network controllers, and other generic pcie devices can also show up as pxsx. check the acpi-path in ioreg to find its path:\n\n\n\nas we can see, ioacpiplane:/_sb/pc00@0/rp05@1c0004/pxsx@0 would be interpreted as sb.pc00.rp05.pxsx\n\nand so from the above ssdt, we change the following:\n\n * external (_sb_.pci0.gp13, deviceobj) -> external (_sb_.pc00.rp05, deviceobj)\n * external (_sb_.pci0.gp13.xhc0, deviceobj) -> external (_sb_.pc00.rp05.pxsx, deviceobj)\n * scope (\\_sb.pci0.gp13) -> scope (\\_sb.pc00.rp05)\n * scope (xhc0) -> scope (pxsx)",charsets:{}},{title:"USB映射",frontmatter:{},regularPath:"/usb/intel-mapping/intel.html",relativePath:"usb/intel-mapping/intel.md",key:"v-1474475a",path:"/usb/intel-mapping/intel.html",headers:[{level:3,title:"本指南已过时，请参阅USBMap的README了解更新信息，直到本指南被重写",slug:"本指南已过时-请参阅usbmap的readme了解更新信息-直到本指南被重写",normalizedTitle:"本指南已过时，请参阅usbmap的readme了解更新信息，直到本指南被重写",charIndex:12},{level:3,title:"Intel USB Mapping",slug:"intel-usb-mapping",normalizedTitle:"intel usb mapping",charIndex:75}],lastUpdated:"2/14/2023, 5:12:00 PM",lastUpdatedTimestamp:167639472e4,headersStr:"本指南已过时，请参阅USBMap的README了解更新信息，直到本指南被重写 Intel USB Mapping",content:"# USB映射\n\n\n# 本指南已过时，请参阅USBMap的README了解更新信息，直到本指南被重写\n\nTable of Contents:\n\n * Intel USB Mapping\n\nSo with the prerequisites out of the way, we can finally get to the meat of this guide. And now we get to finally read one of my favorite books before I go to bed each night: The Advanced Configuration and Power Interface (ACPI) Specification!\n\nNow if you haven't read through this before(which I highly recommend you do, it's a thrilling tale), I'll point you to the meat of the USB situation:\n\n * Section 9.14: _UPC (USB Port Capabilities)\n\nHere we're greeted with all the possible USB ports in ACPI:\n\nTYPE   INFO                                                    COMMENTS\n0      USB 2.0 Type-A connector                                This is what macOS will default all ports to when no map is\n                                                               present\n3      USB 3.0 Type-A connector                                3.0, 3.1 and 3.2 ports share the same Type\n8      Type C connector - USB 2.0-only                         Mainly seen in phones\n9      Type C connector - USB 2.0 and USB 3.0 with Switch      Flipping the device does not change the ACPI port\n10     Type C connector - USB 2.0 and USB 3.0 without Switch   Flipping the device does change the ACPI port. generally\n                                                               seen on 3.1/2 motherboard headers\n255    Proprietary connector                                   For Internal USB ports like Bluetooth\n\n\n# Intel USB Mapping\n\nUSB mapping on Intel is super easy mainly because both the ACPI is sane and more tools available for the platform. For this guide we'll be using the USBmap tool from CorpNewt.\n\nNow open up USBmap.command and select D. Discover Ports:\n\n\n\nThe interface for USBmap is quite simple and easy to grasp so won't go into detail here, the README.md should do you well enough. The basic idea is insert a device, give it a name to remember the port by, remove and then try another port until you have a whole list of ports you want to keep.\n\n * Note: USRx(ie. USR1, USR2) ports are not real USB ports, they're specifically USBR ports which macOS has no support for(and why real Macs don't have this). These can be excluded from your USB map.\n\nOnce you're done discovering your ports, select Press Q then [enter] to stop then head to P. Edit Plist & Create SSDT/Kext from the main menu.\n\nFor this example, I'll choose all the ports that were discovered, remember that there is a 15 port limit so you cannot go over it. USB hubs will count as one USB port so you can expand from there if you are limited on ports.\n\n\n\nT:1,3,4,5,6,7,16,17,19,21,22:3\n\n\nThe above will set all ports listed to type 3 which is USB 3.0.\n\nT:9:255\n\n\nThis will set my Bluetooth to internal, this is super important as macOS expects Bluetooth to always be internal.\n\n\n\nNow we can select K. Build USBMap.kext and let it build our kext for us.\n\nNote: Do not use either the SSDT-UIAC.aml or USBInjectAll with the USBmap.kext. This kext we just made should be used by itself with no other USB kexts besides XhciUnsupported if your system needs it. Reason for this is USBInjectAll is no longer being maintained and the USBmap.kext version is how real Macs USB map as well so as close to \"Apple Like\" as possible to fit the OpenCore mood.\n\nNow reboot and run USBmap again, you should see a lot less ports in your map:\n\n",normalizedContent:"# usb映射\n\n\n# 本指南已过时，请参阅usbmap的readme了解更新信息，直到本指南被重写\n\ntable of contents:\n\n * intel usb mapping\n\nso with the prerequisites out of the way, we can finally get to the meat of this guide. and now we get to finally read one of my favorite books before i go to bed each night: the advanced configuration and power interface (acpi) specification!\n\nnow if you haven't read through this before(which i highly recommend you do, it's a thrilling tale), i'll point you to the meat of the usb situation:\n\n * section 9.14: _upc (usb port capabilities)\n\nhere we're greeted with all the possible usb ports in acpi:\n\ntype   info                                                    comments\n0      usb 2.0 type-a connector                                this is what macos will default all ports to when no map is\n                                                               present\n3      usb 3.0 type-a connector                                3.0, 3.1 and 3.2 ports share the same type\n8      type c connector - usb 2.0-only                         mainly seen in phones\n9      type c connector - usb 2.0 and usb 3.0 with switch      flipping the device does not change the acpi port\n10     type c connector - usb 2.0 and usb 3.0 without switch   flipping the device does change the acpi port. generally\n                                                               seen on 3.1/2 motherboard headers\n255    proprietary connector                                   for internal usb ports like bluetooth\n\n\n# intel usb mapping\n\nusb mapping on intel is super easy mainly because both the acpi is sane and more tools available for the platform. for this guide we'll be using the usbmap tool from corpnewt.\n\nnow open up usbmap.command and select d. discover ports:\n\n\n\nthe interface for usbmap is quite simple and easy to grasp so won't go into detail here, the readme.md should do you well enough. the basic idea is insert a device, give it a name to remember the port by, remove and then try another port until you have a whole list of ports you want to keep.\n\n * note: usrx(ie. usr1, usr2) ports are not real usb ports, they're specifically usbr ports which macos has no support for(and why real macs don't have this). these can be excluded from your usb map.\n\nonce you're done discovering your ports, select press q then [enter] to stop then head to p. edit plist & create ssdt/kext from the main menu.\n\nfor this example, i'll choose all the ports that were discovered, remember that there is a 15 port limit so you cannot go over it. usb hubs will count as one usb port so you can expand from there if you are limited on ports.\n\n\n\nt:1,3,4,5,6,7,16,17,19,21,22:3\n\n\nthe above will set all ports listed to type 3 which is usb 3.0.\n\nt:9:255\n\n\nthis will set my bluetooth to internal, this is super important as macos expects bluetooth to always be internal.\n\n\n\nnow we can select k. build usbmap.kext and let it build our kext for us.\n\nnote: do not use either the ssdt-uiac.aml or usbinjectall with the usbmap.kext. this kext we just made should be used by itself with no other usb kexts besides xhciunsupported if your system needs it. reason for this is usbinjectall is no longer being maintained and the usbmap.kext version is how real macs usb map as well so as close to \"apple like\" as possible to fit the opencore mood.\n\nnow reboot and run usbmap again, you should see a lot less ports in your map:\n\n",charsets:{cjk:!0}},{title:"USB映射",frontmatter:{},regularPath:"/usb/manual/manual.html",relativePath:"usb/manual/manual.md",key:"v-1fe02573",path:"/usb/manual/manual.html",headers:[{level:2,title:"USB映射:手动方式",slug:"usb映射-手动方式",normalizedTitle:"usb映射:手动方式",charIndex:576},{level:2,title:"找到你的USB端口",slug:"找到你的usb端口",normalizedTitle:"找到你的usb端口",charIndex:1151},{level:3,title:"找出哪个端口与哪个控制器匹配",slug:"找出哪个端口与哪个控制器匹配",normalizedTitle:"找出哪个端口与哪个控制器匹配",charIndex:2014},{level:3,title:"USB-A 映射",slug:"usb-a-映射",normalizedTitle:"usb-a 映射",charIndex:2249},{level:3,title:"创建个人地图",slug:"创建个人地图",normalizedTitle:"创建个人地图",charIndex:2662},{level:3,title:"USB-C映射",slug:"usb-c映射",normalizedTitle:"usb-c映射",charIndex:2869},{level:3,title:"继续映射",slug:"继续映射",normalizedTitle:"继续映射",charIndex:3250},{level:3,title:"Special Notes",slug:"special-notes",normalizedTitle:"special notes",charIndex:3329},{level:2,title:"创建kext",slug:"创建kext",normalizedTitle:"创建kext",charIndex:4758},{level:3,title:"Determining the properties",slug:"determining-the-properties",normalizedTitle:"determining the properties",charIndex:5381},{level:3,title:"IOProviderMergeProperties",slug:"ioprovidermergeproperties",normalizedTitle:"ioprovidermergeproperties",charIndex:5337},{level:3,title:"继续",slug:"继续",normalizedTitle:"继续",charIndex:3250},{level:2,title:"清理",slug:"清理",normalizedTitle:"清理",charIndex:4295}],lastUpdated:"2/14/2023, 5:12:00 PM",lastUpdatedTimestamp:167639472e4,headersStr:"USB映射:手动方式 找到你的USB端口 找出哪个端口与哪个控制器匹配 USB-A 映射 创建个人地图 USB-C映射 继续映射 Special Notes 创建kext Determining the properties IOProviderMergeProperties 继续 清理",content:"# USB映射\n\n因此，有了先决条件，我们终于可以开始这篇指南的核心内容了。现在我们终于可以在每晚睡觉前读一本我最喜欢的书:高级配置和电源接口(ACPI)规范!\n\n现在，如果你之前没有读过这篇文章(我强烈建议你读，这是一个激动人心的故事)，我将向你指出USB的主要情况:\n\n * 第9.14节:_UPC (USB端口能力)\n\n在这里，我们可以看到ACPI中所有可能的USB端口:\n\n类型    信息                               说明\n0     USB 2.0 Type-A连接器                这是macOS在没有映射时默认的所有端口\n3     USB 3.0 Type-A连接器                3.0、3.1和3.2端口共享相同的类型\n8     Type C连接器 - 仅支持USB 2.0           主要用于手机\n9     Type C连接器 - USB 2.0和USB 3.0和开关   翻转设备不会改变ACPI端口\n10    Type C连接器 - USB 2.0和USB 3.0无开关   翻转设备会改变ACPI端口。一般见于3.1/2主板头\n255   专用连接器                            用于内部USB端口，如蓝牙\n\n\n# USB映射:手动方式\n\n本节是为那些想深入了解黑苹果的人准备的，他们可以真正了解它在做什么，并在USBmap.py和其他映射工具有任何问题时提供帮助。首先，我们需要一些东西:\n\n * macOS的安装版本\n   * 这是由于macOS枚举端口的方式，试图从其他操作系统映射会使这变得困难\n   * 注:本指南将集中在OS X 10.11, El Capitan和更新。旧的操作系统不需要任何USB映射\n * 无冲突的USB名称\n   * 请参阅上一节:检查你需要的重命名\n * 用于测试的USB 2.0和USB 3.0设备\n   * 你必须有两个独立的设备，以确保映射的时候系统不会混淆\n * IORegistryExplorer.app\n   * 更容易查看macOS的内部工作原理\n   * 如果您计划使用Discord进行故障排除，v2.1.0在文件大小上分辨会更容易一些。\n * USBInjectAll\n   * 这在较旧的USB控制器才需要，如Broadwell和更旧的，但是一些Coffee Lake系统可能仍然需要它\n   * 提示这个kext不能在AMD上工作\n * Sample-USB-Map.kext\n * ProperTree\n   * 或任何其他plist编辑器\n\n现在，所有这些都解决了，让我们进入USB映射!\n\n\n# 找到你的USB端口\n\n让我们打开之前下载的IORegistryExplorer.app并搜索我们的USB控制器。\n\n两个主要的搜索词是 XHC 和 EHC, 但如果你有一个带有UHCI或OHCI控制器的 legacy 板，你就需要调整。一个笼统的 USB 搜索可能会显示太多的条目，让你感到困惑。\n\n对于这个例子，让我们尝试映射华硕X299-E Strix主板:\n\n\n\n从上图中我们可以看到3个USB控制器:\n\n * PXSX(1, 上)\n * PXSX(2, 中)\n * XHCI(3, 下)\n\n请注意，它们是独立的控制器，因为这意味着每个USB控制器都有自己的端口限制。所以你并不像你想的那样渴望USB端口。\n\n现在我个人知道哪个USB控制器匹配哪个物理端口，问题是它并不总是那么明显的哪个端口匹配哪个控制器。所以我们试着找出哪个是什么。\n\n注意:AppleUSBLegacyRoot项列出了所有活动的USB控制器和端口，这些不是USB控制器本身，所以你可以直接忽略它们。\n\n注2:请记住，每个主板型号都有一组独特的端口组合、控制器类型和名称。因此，虽然我们的示例使用PXSX，但您的示例可能有XHC0或PTCP名称。在较老的主板上很常见的是，你可能只有一个控制器，这是好的，所以不要强调和例子有完全相同的设置。\n\n你可以查看常用的名称:\n\n * USB 3.x 控制器:\n   * XHC\n   * XHC0\n   * XHC1\n   * XHC2\n   * XHCI\n   * XHCX\n   * AS43\n   * PTXH\n     * 通常与AMD芯片组控制器相关\n   * PTCP\n     * 在AsRock X399上找到\n   * PXSX\n     * 这是一个通用的PCIe设备，仔细检查它是否是USB设备，因为NVMe控制器和其他设备可以使用相同的名称。\n * USB 2.x 控制器:\n   * EHCI\n   * EHC1\n   * EHC2\n   * EUSB\n   * USBE\n\n\n# 找出哪个端口与哪个控制器匹配\n\n首先，我要把一个USB设备插入我的USB 3.1(a型)和USB 3.2(c型):\n\n\n\n接下来让我们看看IOReg，我们可以看到我们的USB设备出现在哪里:\n\nUSB-C   USB-A\n        \n\n在这里我们看到了一些东西:\n\n * 前3.2类型-c在PXSX(2，中间)控制器上\n * 前3.1类型-a在XHCI(3，底部)控制器上\n\n现在我们已经知道了哪个端口连接到哪个控制器，现在可以看看我们如何映射USB了。\n\n\n# USB-A 映射\n\n如前所述，usb3.x端口分为两种类型:usb2.0和usb3.0。这是为了确保向后兼容，但macOS本身很难确定哪些特型与哪些端口匹配。这就是我们要提供帮助的地方。\n\n所以让我们使用USB-a端口，当我们将USB 3.0设备插入它时，我们看到XHCI -> SS03亮起。这是端口的USB 3.0特性。现在我们要在该端口上插入USB 2.0设备:\n\n3.0 特型   2.0 特型\n         \n\n我们看到我们的3.0端口的USB 2.0特性是XHCI -> HS03，现在你应该能够了解我们试图做什么:\n\n * 正面a型:\n   * HS03: 2.0特型\n   * SS03: 3.0特型\n\n注意:如果你的USB端口显示为AppleUSB20XHCIPort或AppleUSB30XHCIPort，你仍然可以映射，但是会有点困难。与其把名字写下来，不如密切关注右边的port属性:\n\n\n\n\n# 创建个人地图\n\n这就是我们拿出笔和纸，开始写下哪个端口与哪个数字端口相匹配的地方。你的地图可能看起来像这样的一个例子:\n\n名称映射   属性映射\n       \n\n你自己的地图不需要完全像这样，但是你需要一些你很容易理解和参考的东西。\n\n注意:\n\n * 名称映射:当一个正确的名称在IOReg中显示时(例如:HS01)\n * 属性映射:当没有给出合适的名称时(例如:AppleUSB30XHCIPort）\n\n\n# USB-C映射\n\n接下来映射我们的USB-C端口，这是非常棘手的地方，你可能已经注意到了:\n\n类型   信息                                说明\n8    Type C连接器 - 仅支持USB 2.0的           主要见于手机\n9    Type C连接器 - USB 2.0和USB 3.0带开关    翻动设备不改变ACPI接口\n10   Type C连接器 - USB 2.0和USB 3.0没有开关   \n\n所以当我们映射我们的USB-C头时，我们注意到它占用了SS01端口。但当我们翻转它时，我们实际上是在SS02端口上填充它。当发生这种情况时，你需要在应用端口类型时将其记录下来。\n\n * 注意:该端口的所有特型将被置于10型之下\n * 注意2:并非所有USB-C表头都是10，仔细检查你的表头\n\n\n\n\n# 继续映射\n\n现在您已经有了基本的想法，您将需要到处查看每个USB端口并将其映射出来。这需要时间，别忘了把它写下来。最终的图表应该类似于下面这样:\n\n\n\n\n# Special Notes\n\n * 蓝牙\n * USRx端口\n * 没有 USB 端口\n\n# 蓝牙\n\n所以，虽然对很多人来说并不明显，但蓝牙实际上是在内部通过USB接口运行的。这意味着在映射时，你需要密切关注IOReg中已经显示的设备:\n\n\n\n请记住这一点，因为这是255类型，并使某些服务(如切换)正常工作。\n\n# USRx端口\n\n在映射时，您可能会注意到一些剩余的端口，特别是USR1和USR2。这些端口被称为“USBR”端口，或者更具体地说是USB重定向端口.使用这些设备是为了进行远程管理，但真正的mac没有附带USBR设备，所以在操作系统方面没有对它们的支持。实际上，你可以忽略USB映射表中的这些条目:\n\n\n\n# 缺少USB接口\n\n在一些罕见的情况下，某些USB端口可能根本不显示在macOS中。这可能是由于您的ACPI表中缺少定义，因此我们有几个选择:\n\n * Coffee Lake 及以上应使用 USBInjectAll\n   * 不要忘记添加到 EFI/OC/Kexts 和你的 config.plist's kernel -> Add中\n * Comet Lake和更新版本应该使用SSDT-RHUB\n * AMD系统也应该使用SSDT-RHUB\n\nSSDT-RHUB的目的是重置你的USB控制器，并强制macOS重新枚举它们。这避免了为现有的ACPI表打补丁的麻烦。\n\n创建自己的SSDT-RHUB-MAP:\n\n * 获取SSDT副本: SSDT-RHUB.dsl\n * 获取 maciASL\n\n接下来，用maciASL打开我们新下载的SSDT，你应该会看到以下内容:\n\n\n\n现在，打开IOReg并找到你想要重置的USB控制器(注意，它是USB控制器，而不是同名的子RHUB):\n\n如果你看右边，你应该会看到acpi-apth属性。这里我们需要把它翻译成我们的SSDT可以使用的东西:\n\n# 修改前\nIOService:/AppleACPIPlatformExpert/PC00@0/AppleACPIPCI/RP05@1C,4/IOPP/PXSX@0\n\n\n现在我们要去掉所有不必要的数据:\n\n * IOService:/AppleACPIPlatformExpert/\n * @##\n * IOPP\n\n一旦清理干净，你的应该看起来类似:\n\n# 修改后\nPC00.RP05.PXSX\n\n\n按照上面的例子，我们将 PCI0.XHC1.RHUB 重命名为 PC00.RP05.PXSX.RHUB:\n\n之前:\n\nExternal (_SB_.PCI0.XHC1.RHUB, DeviceObj) <- 重命名\n\nScope (_SB.PCI0.XHC1.RHUB) <- 重命名\n\n\n\n\n按照我们找到的示例路径，SSDT应该看起来像这样:\n\n之后:\n\nExternal (_SB.PC00.RP05.PXSX.RHUB, DeviceObj) <- 重命名\n\nScope (_SB.PC00.RP05.PXSX.RHUB) <- 重命名\n\n\n\n\n一旦你将SSDT编辑到USB控制器的路径下，你就可以使用File -> SaveAs -> ACPI Machine Language Binary将其导出:\n\n\n\n最后，请记住将此SSDT添加到 EFI/OC/ACPI 和你 config.plist 中的 ACPI -> Add.\n\n\n# 创建kext\n\n大家期待已久的时间到了，我们终于可以创建我们的USB map了!\n\n首先，我们需要获取一个USB map kext示例:\n\n * Sample-USB-Map.kext\n\n接下来右键单击.kext，并选择“显示包内容”。然后深入到info.plist:\n\n显示内容   INFO.PLIST\n       \n\n现在让我们打开ProperTree，看看这个info.plist:\n\n\n\n下面我们看到在iokitpersonality下的几个部分:\n\n * RP05 - PXSX(1)\n * RP07 - PXSX(2)\n * XHCI - XHCI\n\n这里的每个条目表示一个USB控制器，特别是每个控制器的映射。然而，条目的名称并不重要，它更重要的是为了好记，以便您知道哪个条目有哪个USB映射。\n\n接下来让我们进入RP05 - PXSX(1)条目:\n\n\n\n这里我们看到了一些更重要的属性:\n\nPROPERTY                    COMMENT\nIOPathMatch                 macOS将选择将map附加到该设备\nIOProviderClass             macOS将选择附加的USB驱动程序\nmodel                       USB映射也连接了SMBIOS\nIOProviderMergeProperties   保存实际端口映射的字典\n\n\n# Determining the properties\n\nDetermining the value for each property is actually quite straight forward:\n\n * IOPathMatch\n * IOProviderClass\n * model\n * IOProviderMergeProperties\n\n# IOPathMatch\n\n找到IOPathMatch非常简单，首先找到你想要映射的USB控制器，然后选择根集线器(所以PXSX子集线器与父集线器同名，不要担心，当你查看图像时，它会减少困惑):\n\n\n\n现在选择PXSX条目，简单地复制(Cmd+C)并粘贴到我们的info.plist。你的属性应该如下图所示:\n\nIOService:/AppleACPIPlatformExpert/PC00@0/AppleACPIPCI/RP05@1C,4/IOPP/PXSX@0/PXSX@01000000\n\n\n注意:每个USB控制器都有一个唯一的IOPathMatch值，如果你有多个同名控制器，请记住这一点。这款Asus X299板有2个PXSX USB控制器，因此每个新的USB map字典将有一个唯一的IOPathMatch条目。\n\n# IOProviderClass\n\n查找IOProviderClass也很简单，再次选择Root-hub并查找CFBundleIdentifier值:\n\nIOREG   INFO.PLIST\n        \n\n现在我们不能把这个值设为1-1，而是需要将Kext的短名称改为AppleUSBXHCIPCI(因此我们删除了com.apple.driver.usb.)。\n\n# model\n\n如果你忘记了你正在使用的SMBIOS，你可以在IOReg中检查顶级设备:\n\nIOREG   INFO.PLIST\n        \n\n\n# IOProviderMergeProperties\n\n现在让我们打开IOProviderMergeProperties字典:\n\n\n\n这里我们有很多数据要处理:\n\n属性             说明\nname           USB端口的字典名称\nport-count     这是要注入的最大端口值\nUsbConnector   这是ACPI 9.14节中提到的USB端口类型\nport           您的USB端口在ACPI中的物理位置\nComment        一个可选的条目，帮助您备注端口\n\nAnd a reminder of all possible port types:\n\nTYPE   INFO                              COMMENTS\n0      USB 2.0 Type-A连接器                 这是macOS在没有映射时默认的所有端口\n3      USB 3.0 Type-A连接器                 3.0、3.1和3.2端口共享相同的类型\n8      Type C连接器 - 仅支持USB 2.0            主要出现在手机上\n9      Type C连接器 - USB 2.0和USB 3.0带开关    翻转设备不会改变ACPI端口\n10     Type C连接器 - USB 2.0和USB 3.0不带开关   翻转设备会改变ACPI端口。通常可以在3.1/2主板标头上看到\n255    专用连接器                             用于内部USB端口，如蓝牙\n\n现在应该回到原点了，你可以看到我们之前映射端口的工作方式。\n\n# name\n\nname属性实际上是USB端口字典的名称，仅用于内部维护。记住，你想使用的每个USB端口都需要有自己独特的USB端口字典。\n\n除了显示在IOReg中，名称本身没有任何值，所以这可以是你喜欢的任何值。为了保持正常，我们使用ACPI表已经给出的名称(在本例中是HS01)，但名称可以是任何4个字符的条目。但是不要超过这4字符限制,会发生意想不到的副作用。\n\n * 注意:那些带有AppleUSB20XHCIPort或AppleUSB30XHCIPort名称的USB端口，你应该选择一个易于识别的名称。在英特尔，这是HSxx为2.0特型，SSxx为3.0特型\n\n\n\n# port\n\n要找到port值，只需在IOReg中选择你的USB端口并查找port条目:\n\nIOREG   INFO.PLIST\n        \n\n从这里我们得到<03 00 00 00>，你可以简单地删除任何空格并将其添加到你的USB映射中\n\n# 端口数\n\n最后剩下的值，回头看看你的USB映射表，看看哪个port条目最大:\n\n\n\n这里我们看到PXSX(1)中最大的是<04000000>，请记住，如果您在USB map中获得任何字母，port使用十六进制。\n\n\n# 继续\n\n现在我们已经讨论了如何为特定的控制器映射USB端口，您应该有足够的理解来映射更多的控制器。我提供的示例USB-map.kext有3个USB控制器列在其中(PXSX-1, PXSX-2和XHCI)。记得相应地编辑并删除任何不必要的映射。\n\n\n# 清理\n\n一旦你保存了你的USB地图的 info.plist, 记得添加kext到你的 EFI/OC/Kexts 并添加到config.plist的 Kernel -> Add(ProperTree的快照可以为你做这件事)\n\n接下来，删除/禁用:\n\n * USBInjectAll.kext(如果你正在使用它)\n   * 原因是USBInjectAll实际上破坏了Apple构建端口映射的方式。因此，虽然它对于初始端口映射很好，但它可能会破坏你最终的USB映射\n * Kernel -> Quirks -> XhciPortLimit -> False\n   * 现在我们终于低于15个端口的限制，我们不再需要这个黑客式的修复\n\n然后重新启动，最后一次检查IOReg:\n\n\n\n瞧!如你所见，我们的USB地图应用成功!\n\n需要验证的主要属性是:\n\n * 正确设置Usb接口的Usb连接器属性\n * 应用注释(如果注入)\n * 移除未使用的端口",normalizedContent:"# usb映射\n\n因此，有了先决条件，我们终于可以开始这篇指南的核心内容了。现在我们终于可以在每晚睡觉前读一本我最喜欢的书:高级配置和电源接口(acpi)规范!\n\n现在，如果你之前没有读过这篇文章(我强烈建议你读，这是一个激动人心的故事)，我将向你指出usb的主要情况:\n\n * 第9.14节:_upc (usb端口能力)\n\n在这里，我们可以看到acpi中所有可能的usb端口:\n\n类型    信息                               说明\n0     usb 2.0 type-a连接器                这是macos在没有映射时默认的所有端口\n3     usb 3.0 type-a连接器                3.0、3.1和3.2端口共享相同的类型\n8     type c连接器 - 仅支持usb 2.0           主要用于手机\n9     type c连接器 - usb 2.0和usb 3.0和开关   翻转设备不会改变acpi端口\n10    type c连接器 - usb 2.0和usb 3.0无开关   翻转设备会改变acpi端口。一般见于3.1/2主板头\n255   专用连接器                            用于内部usb端口，如蓝牙\n\n\n# usb映射:手动方式\n\n本节是为那些想深入了解黑苹果的人准备的，他们可以真正了解它在做什么，并在usbmap.py和其他映射工具有任何问题时提供帮助。首先，我们需要一些东西:\n\n * macos的安装版本\n   * 这是由于macos枚举端口的方式，试图从其他操作系统映射会使这变得困难\n   * 注:本指南将集中在os x 10.11, el capitan和更新。旧的操作系统不需要任何usb映射\n * 无冲突的usb名称\n   * 请参阅上一节:检查你需要的重命名\n * 用于测试的usb 2.0和usb 3.0设备\n   * 你必须有两个独立的设备，以确保映射的时候系统不会混淆\n * ioregistryexplorer.app\n   * 更容易查看macos的内部工作原理\n   * 如果您计划使用discord进行故障排除，v2.1.0在文件大小上分辨会更容易一些。\n * usbinjectall\n   * 这在较旧的usb控制器才需要，如broadwell和更旧的，但是一些coffee lake系统可能仍然需要它\n   * 提示这个kext不能在amd上工作\n * sample-usb-map.kext\n * propertree\n   * 或任何其他plist编辑器\n\n现在，所有这些都解决了，让我们进入usb映射!\n\n\n# 找到你的usb端口\n\n让我们打开之前下载的ioregistryexplorer.app并搜索我们的usb控制器。\n\n两个主要的搜索词是 xhc 和 ehc, 但如果你有一个带有uhci或ohci控制器的 legacy 板，你就需要调整。一个笼统的 usb 搜索可能会显示太多的条目，让你感到困惑。\n\n对于这个例子，让我们尝试映射华硕x299-e strix主板:\n\n\n\n从上图中我们可以看到3个usb控制器:\n\n * pxsx(1, 上)\n * pxsx(2, 中)\n * xhci(3, 下)\n\n请注意，它们是独立的控制器，因为这意味着每个usb控制器都有自己的端口限制。所以你并不像你想的那样渴望usb端口。\n\n现在我个人知道哪个usb控制器匹配哪个物理端口，问题是它并不总是那么明显的哪个端口匹配哪个控制器。所以我们试着找出哪个是什么。\n\n注意:appleusblegacyroot项列出了所有活动的usb控制器和端口，这些不是usb控制器本身，所以你可以直接忽略它们。\n\n注2:请记住，每个主板型号都有一组独特的端口组合、控制器类型和名称。因此，虽然我们的示例使用pxsx，但您的示例可能有xhc0或ptcp名称。在较老的主板上很常见的是，你可能只有一个控制器，这是好的，所以不要强调和例子有完全相同的设置。\n\n你可以查看常用的名称:\n\n * usb 3.x 控制器:\n   * xhc\n   * xhc0\n   * xhc1\n   * xhc2\n   * xhci\n   * xhcx\n   * as43\n   * ptxh\n     * 通常与amd芯片组控制器相关\n   * ptcp\n     * 在asrock x399上找到\n   * pxsx\n     * 这是一个通用的pcie设备，仔细检查它是否是usb设备，因为nvme控制器和其他设备可以使用相同的名称。\n * usb 2.x 控制器:\n   * ehci\n   * ehc1\n   * ehc2\n   * eusb\n   * usbe\n\n\n# 找出哪个端口与哪个控制器匹配\n\n首先，我要把一个usb设备插入我的usb 3.1(a型)和usb 3.2(c型):\n\n\n\n接下来让我们看看ioreg，我们可以看到我们的usb设备出现在哪里:\n\nusb-c   usb-a\n        \n\n在这里我们看到了一些东西:\n\n * 前3.2类型-c在pxsx(2，中间)控制器上\n * 前3.1类型-a在xhci(3，底部)控制器上\n\n现在我们已经知道了哪个端口连接到哪个控制器，现在可以看看我们如何映射usb了。\n\n\n# usb-a 映射\n\n如前所述，usb3.x端口分为两种类型:usb2.0和usb3.0。这是为了确保向后兼容，但macos本身很难确定哪些特型与哪些端口匹配。这就是我们要提供帮助的地方。\n\n所以让我们使用usb-a端口，当我们将usb 3.0设备插入它时，我们看到xhci -> ss03亮起。这是端口的usb 3.0特性。现在我们要在该端口上插入usb 2.0设备:\n\n3.0 特型   2.0 特型\n         \n\n我们看到我们的3.0端口的usb 2.0特性是xhci -> hs03，现在你应该能够了解我们试图做什么:\n\n * 正面a型:\n   * hs03: 2.0特型\n   * ss03: 3.0特型\n\n注意:如果你的usb端口显示为appleusb20xhciport或appleusb30xhciport，你仍然可以映射，但是会有点困难。与其把名字写下来，不如密切关注右边的port属性:\n\n\n\n\n# 创建个人地图\n\n这就是我们拿出笔和纸，开始写下哪个端口与哪个数字端口相匹配的地方。你的地图可能看起来像这样的一个例子:\n\n名称映射   属性映射\n       \n\n你自己的地图不需要完全像这样，但是你需要一些你很容易理解和参考的东西。\n\n注意:\n\n * 名称映射:当一个正确的名称在ioreg中显示时(例如:hs01)\n * 属性映射:当没有给出合适的名称时(例如:appleusb30xhciport）\n\n\n# usb-c映射\n\n接下来映射我们的usb-c端口，这是非常棘手的地方，你可能已经注意到了:\n\n类型   信息                                说明\n8    type c连接器 - 仅支持usb 2.0的           主要见于手机\n9    type c连接器 - usb 2.0和usb 3.0带开关    翻动设备不改变acpi接口\n10   type c连接器 - usb 2.0和usb 3.0没有开关   \n\n所以当我们映射我们的usb-c头时，我们注意到它占用了ss01端口。但当我们翻转它时，我们实际上是在ss02端口上填充它。当发生这种情况时，你需要在应用端口类型时将其记录下来。\n\n * 注意:该端口的所有特型将被置于10型之下\n * 注意2:并非所有usb-c表头都是10，仔细检查你的表头\n\n\n\n\n# 继续映射\n\n现在您已经有了基本的想法，您将需要到处查看每个usb端口并将其映射出来。这需要时间，别忘了把它写下来。最终的图表应该类似于下面这样:\n\n\n\n\n# special notes\n\n * 蓝牙\n * usrx端口\n * 没有 usb 端口\n\n# 蓝牙\n\n所以，虽然对很多人来说并不明显，但蓝牙实际上是在内部通过usb接口运行的。这意味着在映射时，你需要密切关注ioreg中已经显示的设备:\n\n\n\n请记住这一点，因为这是255类型，并使某些服务(如切换)正常工作。\n\n# usrx端口\n\n在映射时，您可能会注意到一些剩余的端口，特别是usr1和usr2。这些端口被称为“usbr”端口，或者更具体地说是usb重定向端口.使用这些设备是为了进行远程管理，但真正的mac没有附带usbr设备，所以在操作系统方面没有对它们的支持。实际上，你可以忽略usb映射表中的这些条目:\n\n\n\n# 缺少usb接口\n\n在一些罕见的情况下，某些usb端口可能根本不显示在macos中。这可能是由于您的acpi表中缺少定义，因此我们有几个选择:\n\n * coffee lake 及以上应使用 usbinjectall\n   * 不要忘记添加到 efi/oc/kexts 和你的 config.plist's kernel -> add中\n * comet lake和更新版本应该使用ssdt-rhub\n * amd系统也应该使用ssdt-rhub\n\nssdt-rhub的目的是重置你的usb控制器，并强制macos重新枚举它们。这避免了为现有的acpi表打补丁的麻烦。\n\n创建自己的ssdt-rhub-map:\n\n * 获取ssdt副本: ssdt-rhub.dsl\n * 获取 maciasl\n\n接下来，用maciasl打开我们新下载的ssdt，你应该会看到以下内容:\n\n\n\n现在，打开ioreg并找到你想要重置的usb控制器(注意，它是usb控制器，而不是同名的子rhub):\n\n如果你看右边，你应该会看到acpi-apth属性。这里我们需要把它翻译成我们的ssdt可以使用的东西:\n\n# 修改前\nioservice:/appleacpiplatformexpert/pc00@0/appleacpipci/rp05@1c,4/iopp/pxsx@0\n\n\n现在我们要去掉所有不必要的数据:\n\n * ioservice:/appleacpiplatformexpert/\n * @##\n * iopp\n\n一旦清理干净，你的应该看起来类似:\n\n# 修改后\npc00.rp05.pxsx\n\n\n按照上面的例子，我们将 pci0.xhc1.rhub 重命名为 pc00.rp05.pxsx.rhub:\n\n之前:\n\nexternal (_sb_.pci0.xhc1.rhub, deviceobj) <- 重命名\n\nscope (_sb.pci0.xhc1.rhub) <- 重命名\n\n\n\n\n按照我们找到的示例路径，ssdt应该看起来像这样:\n\n之后:\n\nexternal (_sb.pc00.rp05.pxsx.rhub, deviceobj) <- 重命名\n\nscope (_sb.pc00.rp05.pxsx.rhub) <- 重命名\n\n\n\n\n一旦你将ssdt编辑到usb控制器的路径下，你就可以使用file -> saveas -> acpi machine language binary将其导出:\n\n\n\n最后，请记住将此ssdt添加到 efi/oc/acpi 和你 config.plist 中的 acpi -> add.\n\n\n# 创建kext\n\n大家期待已久的时间到了，我们终于可以创建我们的usb map了!\n\n首先，我们需要获取一个usb map kext示例:\n\n * sample-usb-map.kext\n\n接下来右键单击.kext，并选择“显示包内容”。然后深入到info.plist:\n\n显示内容   info.plist\n       \n\n现在让我们打开propertree，看看这个info.plist:\n\n\n\n下面我们看到在iokitpersonality下的几个部分:\n\n * rp05 - pxsx(1)\n * rp07 - pxsx(2)\n * xhci - xhci\n\n这里的每个条目表示一个usb控制器，特别是每个控制器的映射。然而，条目的名称并不重要，它更重要的是为了好记，以便您知道哪个条目有哪个usb映射。\n\n接下来让我们进入rp05 - pxsx(1)条目:\n\n\n\n这里我们看到了一些更重要的属性:\n\nproperty                    comment\niopathmatch                 macos将选择将map附加到该设备\nioproviderclass             macos将选择附加的usb驱动程序\nmodel                       usb映射也连接了smbios\nioprovidermergeproperties   保存实际端口映射的字典\n\n\n# determining the properties\n\ndetermining the value for each property is actually quite straight forward:\n\n * iopathmatch\n * ioproviderclass\n * model\n * ioprovidermergeproperties\n\n# iopathmatch\n\n找到iopathmatch非常简单，首先找到你想要映射的usb控制器，然后选择根集线器(所以pxsx子集线器与父集线器同名，不要担心，当你查看图像时，它会减少困惑):\n\n\n\n现在选择pxsx条目，简单地复制(cmd+c)并粘贴到我们的info.plist。你的属性应该如下图所示:\n\nioservice:/appleacpiplatformexpert/pc00@0/appleacpipci/rp05@1c,4/iopp/pxsx@0/pxsx@01000000\n\n\n注意:每个usb控制器都有一个唯一的iopathmatch值，如果你有多个同名控制器，请记住这一点。这款asus x299板有2个pxsx usb控制器，因此每个新的usb map字典将有一个唯一的iopathmatch条目。\n\n# ioproviderclass\n\n查找ioproviderclass也很简单，再次选择root-hub并查找cfbundleidentifier值:\n\nioreg   info.plist\n        \n\n现在我们不能把这个值设为1-1，而是需要将kext的短名称改为appleusbxhcipci(因此我们删除了com.apple.driver.usb.)。\n\n# model\n\n如果你忘记了你正在使用的smbios，你可以在ioreg中检查顶级设备:\n\nioreg   info.plist\n        \n\n\n# ioprovidermergeproperties\n\n现在让我们打开ioprovidermergeproperties字典:\n\n\n\n这里我们有很多数据要处理:\n\n属性             说明\nname           usb端口的字典名称\nport-count     这是要注入的最大端口值\nusbconnector   这是acpi 9.14节中提到的usb端口类型\nport           您的usb端口在acpi中的物理位置\ncomment        一个可选的条目，帮助您备注端口\n\nand a reminder of all possible port types:\n\ntype   info                              comments\n0      usb 2.0 type-a连接器                 这是macos在没有映射时默认的所有端口\n3      usb 3.0 type-a连接器                 3.0、3.1和3.2端口共享相同的类型\n8      type c连接器 - 仅支持usb 2.0            主要出现在手机上\n9      type c连接器 - usb 2.0和usb 3.0带开关    翻转设备不会改变acpi端口\n10     type c连接器 - usb 2.0和usb 3.0不带开关   翻转设备会改变acpi端口。通常可以在3.1/2主板标头上看到\n255    专用连接器                             用于内部usb端口，如蓝牙\n\n现在应该回到原点了，你可以看到我们之前映射端口的工作方式。\n\n# name\n\nname属性实际上是usb端口字典的名称，仅用于内部维护。记住，你想使用的每个usb端口都需要有自己独特的usb端口字典。\n\n除了显示在ioreg中，名称本身没有任何值，所以这可以是你喜欢的任何值。为了保持正常，我们使用acpi表已经给出的名称(在本例中是hs01)，但名称可以是任何4个字符的条目。但是不要超过这4字符限制,会发生意想不到的副作用。\n\n * 注意:那些带有appleusb20xhciport或appleusb30xhciport名称的usb端口，你应该选择一个易于识别的名称。在英特尔，这是hsxx为2.0特型，ssxx为3.0特型\n\n\n\n# port\n\n要找到port值，只需在ioreg中选择你的usb端口并查找port条目:\n\nioreg   info.plist\n        \n\n从这里我们得到<03 00 00 00>，你可以简单地删除任何空格并将其添加到你的usb映射中\n\n# 端口数\n\n最后剩下的值，回头看看你的usb映射表，看看哪个port条目最大:\n\n\n\n这里我们看到pxsx(1)中最大的是<04000000>，请记住，如果您在usb map中获得任何字母，port使用十六进制。\n\n\n# 继续\n\n现在我们已经讨论了如何为特定的控制器映射usb端口，您应该有足够的理解来映射更多的控制器。我提供的示例usb-map.kext有3个usb控制器列在其中(pxsx-1, pxsx-2和xhci)。记得相应地编辑并删除任何不必要的映射。\n\n\n# 清理\n\n一旦你保存了你的usb地图的 info.plist, 记得添加kext到你的 efi/oc/kexts 并添加到config.plist的 kernel -> add(propertree的快照可以为你做这件事)\n\n接下来，删除/禁用:\n\n * usbinjectall.kext(如果你正在使用它)\n   * 原因是usbinjectall实际上破坏了apple构建端口映射的方式。因此，虽然它对于初始端口映射很好，但它可能会破坏你最终的usb映射\n * kernel -> quirks -> xhciportlimit -> false\n   * 现在我们终于低于15个端口的限制，我们不再需要这个黑客式的修复\n\n然后重新启动，最后一次检查ioreg:\n\n\n\n瞧!如你所见，我们的usb地图应用成功!\n\n需要验证的主要属性是:\n\n * 正确设置usb接口的usb连接器属性\n * 应用注释(如果注入)\n * 移除未使用的端口",charsets:{cjk:!0}},{title:"杂项修复",frontmatter:{},regularPath:"/usb/misc/",relativePath:"usb/misc/README.md",key:"v-115108b8",path:"/usb/misc/",lastUpdated:"2/14/2023, 5:12:00 PM",lastUpdatedTimestamp:167639472e4,headersStr:null,content:"# 杂项修复\n\n * 修复USB电源\n * 修复关机/重启\n * GPRW/UPRW/LANC即时唤醒补丁\n * 键盘唤醒问题",normalizedContent:"# 杂项修复\n\n * 修复usb电源\n * 修复关机/重启\n * gprw/uprw/lanc即时唤醒补丁\n * 键盘唤醒问题",charsets:{cjk:!0}},{title:"GPRW/UPRW/LANC即时唤醒补丁",frontmatter:{},regularPath:"/usb/misc/instant-wake.html",relativePath:"usb/misc/instant-wake.md",key:"v-15555df3",path:"/usb/misc/instant-wake.html",lastUpdated:"2/14/2023, 5:12:00 PM",lastUpdatedTimestamp:167639472e4,headersStr:null,content:'# GPRW/UPRW/LANC即时唤醒补丁\n\n与“修复关机/重启”部分类似，如果睡眠期间USB或电源状态发生变化，macOS将立即唤醒。为了解决这个问题，我们需要将GPRW/UPRW/LANC调用重新路由到一个新的SSDT，在尝试以下操作之前，请验证您是否存在即时唤醒问题。\n\n最好的检查方法:\n\npmset -g log | grep -e "Sleep.*due to" -e "Wake.*due to"\n\n\n通常你会得到这样的结果:\n\n * Wake [CDNVA] due to GLAN: Using AC\n   * 通常是由启用WakeOnLAN引起的，请首先在BIOS中禁用此选项\n   * 如果不是WOL的问题，你可以尝试下面的补丁\n * Wake [CDNVA] due to HDEF: Using AC\n   * 类似于GLAN问题\n * Wake [CDNVA] due to XHC: Using AC\n   * 通常是由于启用了WakeOnUSB引起的，请首先在BIOS中禁用此选项\n   * 可能需要GPRW补丁\n * DarkWake from Normal Sleep [CDNPB] : due to RTC/Maintenance Using AC\n   * 一般由小睡引起\n * Wake reason: RTC (Alarm)\n   * 通常是由应用程序唤醒系统引起的，在睡觉前退出该应用程序应该可以解决这个问题\n\n不要一次使用所有这些补丁，查看你的DSDT，看看你有哪些补丁:\n\nSSDT        ACPI PATCH           COMMENTS\nSSDT-GPRW   GPRW to XPRW Patch   如果你的ACPI中有Method (GPRW, 2，请使用它\nSSDT-UPRW   UPRW to XPRW Patch   如果你的ACPI中有Method (UPRW, 2，请使用此方法\nSSDT-LANC   LANC to XPRW Patch   如果你的ACPI中有Device (LANC)，请使用它\n\nACPI补丁和SSDTs由 Rehabman, 1Revenger1 和 Fewtarius 提供',normalizedContent:'# gprw/uprw/lanc即时唤醒补丁\n\n与“修复关机/重启”部分类似，如果睡眠期间usb或电源状态发生变化，macos将立即唤醒。为了解决这个问题，我们需要将gprw/uprw/lanc调用重新路由到一个新的ssdt，在尝试以下操作之前，请验证您是否存在即时唤醒问题。\n\n最好的检查方法:\n\npmset -g log | grep -e "sleep.*due to" -e "wake.*due to"\n\n\n通常你会得到这样的结果:\n\n * wake [cdnva] due to glan: using ac\n   * 通常是由启用wakeonlan引起的，请首先在bios中禁用此选项\n   * 如果不是wol的问题，你可以尝试下面的补丁\n * wake [cdnva] due to hdef: using ac\n   * 类似于glan问题\n * wake [cdnva] due to xhc: using ac\n   * 通常是由于启用了wakeonusb引起的，请首先在bios中禁用此选项\n   * 可能需要gprw补丁\n * darkwake from normal sleep [cdnpb] : due to rtc/maintenance using ac\n   * 一般由小睡引起\n * wake reason: rtc (alarm)\n   * 通常是由应用程序唤醒系统引起的，在睡觉前退出该应用程序应该可以解决这个问题\n\n不要一次使用所有这些补丁，查看你的dsdt，看看你有哪些补丁:\n\nssdt        acpi patch           comments\nssdt-gprw   gprw to xprw patch   如果你的acpi中有method (gprw, 2，请使用它\nssdt-uprw   uprw to xprw patch   如果你的acpi中有method (uprw, 2，请使用此方法\nssdt-lanc   lanc to xprw patch   如果你的acpi中有device (lanc)，请使用它\n\nacpi补丁和ssdts由 rehabman, 1revenger1 和 fewtarius 提供',charsets:{cjk:!0}},{title:"键盘唤醒问题",frontmatter:{},regularPath:"/usb/misc/keyboard.html",relativePath:"usb/misc/keyboard.md",key:"v-13fb6693",path:"/usb/misc/keyboard.html",headers:[{level:2,title:"方法1 -添加唤醒类型属性(推荐)",slug:"方法1-添加唤醒类型属性-推荐",normalizedTitle:"方法1 -添加唤醒类型属性(推荐)",charIndex:260},{level:2,title:"方法2 -创建一个假ACPI设备",slug:"方法2-创建一个假acpi设备",normalizedTitle:"方法2 -创建一个假acpi设备",charIndex:569},{level:2,title:"方法3 -配置darkwake",slug:"方法3-配置darkwake",normalizedTitle:"方法3 -配置darkwake",charIndex:943}],lastUpdated:"2/14/2023, 5:12:00 PM",lastUpdatedTimestamp:167639472e4,headersStr:"方法1 -添加唤醒类型属性(推荐) 方法2 -创建一个假ACPI设备 方法3 -配置darkwake",content:"# 键盘唤醒问题\n\n因此，英特尔的100系列及更新的芯片组有一个奇怪的bug，即有时macOS需要第二次按键盘或其他唤醒事件来启动显示器，有些需要按键+电源按钮才能唤醒。要解决这个问题，我们需要:\n\n * 将acpi-wake-type设置为USB控制器(推荐)\n * 创建一个假ACPI设备\n * 禁用darkwake(不理想，因为后台任务也会打开显示)\n\n你可以在这里找到关于整个情况和修复的伟大的文章:USB修复.\n\n这是一本优秀的读物，强烈推荐你去真正理解到底发生了什么，而且这篇指南似乎还没有让你读够\n\n\n# 方法1 -添加唤醒类型属性(推荐)\n\n因此，理想的方法是将XHCI控制器(这是我们的USB控制器)声明为ACPI唤醒设备，因为我们没有macOS的兼容ec来处理正确的唤醒调用。以上翻译结果来自有道神经网络翻译（YNMT）· 通用领域\n\n首先，我们需要获取USB控制器的PciRoot(我们将使用gfxutil，通常名称是XHC, XHC1和XHCI)\n\n\n\n现在使用PciRoot，打开您的config.plist，并在DeviceProperties -> add下添加一个新条目，并添加您的PciRoot。然后创建一个具有以下属性的子节点:\n\nacpi-wake-type | Data | <01>\n\n\n\n\n# 方法2 -创建一个假ACPI设备\n\n这个方法创建一个与GPE关联的假ACPI设备，然后用USBWakeFixup.kext添加ACPI-wake-type属性。\n\n它实际上很容易设置，你将需要以下内容:\n\n * USBWakeFixup.kext\n   * 在EFI/OC/ kext和config.plist下\n * SSDT-USBW.dsl\n\n要为特定的系统创建SSDT-USBW，需要USB控制器的ACPI路径。如果我们回顾上面的gfxutil示例，我们可以看到它还列出了我们的ACPI路径:\n\n * /PC00@0/XHCI@14 -> \\_SB.PC00.XHCI\n\n现在我们可以把它塞进我们的SSDT:\n\n\n\n现在，您可以编译并将其添加到您的EFI和config.plist中。有关编译ssdt的更多信息，请参见ACPI入门\n\n\n# 方法3 -配置darkwake\n\n在我们深入配置darkwake之前，最好解释一下什么是darkwake。霍利菲尔德的一篇深度文章可以在这里找到:DarkWake on macOS Catalina\n\n在其最简单的形式中，您可以将darkwake视为“部分唤醒”，在这种情况下，只有硬件的某些部分为维护任务而亮起，而其他部分则处于睡眠状态(例如:显示)。我们关心这一点的原因可能是，darkwake可以在唤醒过程中添加额外的步骤，如按键盘，但直接禁用它会使我们的黑苹果唤醒随机。所以理想情况下，我们会通过下表找到一个理想值。\n\n现在让我们看一下IOPMrootDomain的源代码:\n\n// gDarkWakeFlags\nenum {\n    kDarkWakeFlagHIDTickleEarly      = 0x01, // hid tickle before gfx suppression\n    kDarkWakeFlagHIDTickleLate       = 0x02, // hid tickle after gfx suppression\n    kDarkWakeFlagHIDTickleNone       = 0x03, // hid tickle is not posted\n    kDarkWakeFlagHIDTickleMask       = 0x03,\n    kDarkWakeFlagAlarmIsDark         = 0x0100,\n    kDarkWakeFlagGraphicsPowerState1 = 0x0200,\n    kDarkWakeFlagAudioNotSuppressed  = 0x0400\n};\n\n\n现在让我们逐一检查每一位:\n\nBIT    NAME                     COMMENT\n0      N/A                      据说会使darkwake失效\n1      HID Tickle Early         帮助从盖子唤醒，另外可能需要电源按钮按下唤醒\n2      HID Tickle Late          帮助单按键唤醒，但禁用自动休眠\n3      HID Tickle None          如果设置为none，则默认darkwake值\n3      HID Tickle Mask          配对:与其他配对\n256    Alarm Is Dark            有待探索\n512    Graphics Power State 1   使wranglerTickled完全从休眠和RTC唤醒\n1024   Audio Not Suppressed     据说有助于消除醒来后的声音消失\n\n * 注意HID =人机界面设备(键盘、鼠标、指针设备等)\n\n要将上述表格应用于您的系统，就像获取计算器一样简单，将所需的darkwake值相加，然后将最终值应用于您的启动参数。但是，我们建议每次尝试一个，而不是一次合并所有，除非你知道你在做什么(尽管你可能不会阅读这篇指南)。\n\n对于这个例子，让我们尝试组合kdarkwakeflaghidtickklelate和kDarkWakeFlagGraphicsPowerState1:\n\n * 2= kDarkWakeFlagHIDTickleLate\n * 512= kDarkWakeFlagAudioNotSuppressed\n\n所以我们的最终值是darkwake=514，我们可以把它放到引导参数中:\n\nNVRAM\n|---Add\n  |---7C436110-AB2A-4BBB-A880-FE41995C9F82\n    |---boot-args | Sting | darkwake=514\n\n\n下面更多是为了澄清已经使用darkwake或正在研究它的用户，特别是澄清哪些值不再工作:\n\n * darkwake=8: 自从Mavericks之后，内核中就没有这个功能了。\n   * 正确的引导参数是darkwake=0\n * darkwake=10: 自从Mavericks之后，内核中就没有这个功能了。\n   * 正确的引导参数是darkwake=2",normalizedContent:"# 键盘唤醒问题\n\n因此，英特尔的100系列及更新的芯片组有一个奇怪的bug，即有时macos需要第二次按键盘或其他唤醒事件来启动显示器，有些需要按键+电源按钮才能唤醒。要解决这个问题，我们需要:\n\n * 将acpi-wake-type设置为usb控制器(推荐)\n * 创建一个假acpi设备\n * 禁用darkwake(不理想，因为后台任务也会打开显示)\n\n你可以在这里找到关于整个情况和修复的伟大的文章:usb修复.\n\n这是一本优秀的读物，强烈推荐你去真正理解到底发生了什么，而且这篇指南似乎还没有让你读够\n\n\n# 方法1 -添加唤醒类型属性(推荐)\n\n因此，理想的方法是将xhci控制器(这是我们的usb控制器)声明为acpi唤醒设备，因为我们没有macos的兼容ec来处理正确的唤醒调用。以上翻译结果来自有道神经网络翻译（ynmt）· 通用领域\n\n首先，我们需要获取usb控制器的pciroot(我们将使用gfxutil，通常名称是xhc, xhc1和xhci)\n\n\n\n现在使用pciroot，打开您的config.plist，并在deviceproperties -> add下添加一个新条目，并添加您的pciroot。然后创建一个具有以下属性的子节点:\n\nacpi-wake-type | data | <01>\n\n\n\n\n# 方法2 -创建一个假acpi设备\n\n这个方法创建一个与gpe关联的假acpi设备，然后用usbwakefixup.kext添加acpi-wake-type属性。\n\n它实际上很容易设置，你将需要以下内容:\n\n * usbwakefixup.kext\n   * 在efi/oc/ kext和config.plist下\n * ssdt-usbw.dsl\n\n要为特定的系统创建ssdt-usbw，需要usb控制器的acpi路径。如果我们回顾上面的gfxutil示例，我们可以看到它还列出了我们的acpi路径:\n\n * /pc00@0/xhci@14 -> \\_sb.pc00.xhci\n\n现在我们可以把它塞进我们的ssdt:\n\n\n\n现在，您可以编译并将其添加到您的efi和config.plist中。有关编译ssdt的更多信息，请参见acpi入门\n\n\n# 方法3 -配置darkwake\n\n在我们深入配置darkwake之前，最好解释一下什么是darkwake。霍利菲尔德的一篇深度文章可以在这里找到:darkwake on macos catalina\n\n在其最简单的形式中，您可以将darkwake视为“部分唤醒”，在这种情况下，只有硬件的某些部分为维护任务而亮起，而其他部分则处于睡眠状态(例如:显示)。我们关心这一点的原因可能是，darkwake可以在唤醒过程中添加额外的步骤，如按键盘，但直接禁用它会使我们的黑苹果唤醒随机。所以理想情况下，我们会通过下表找到一个理想值。\n\n现在让我们看一下iopmrootdomain的源代码:\n\n// gdarkwakeflags\nenum {\n    kdarkwakeflaghidtickleearly      = 0x01, // hid tickle before gfx suppression\n    kdarkwakeflaghidticklelate       = 0x02, // hid tickle after gfx suppression\n    kdarkwakeflaghidticklenone       = 0x03, // hid tickle is not posted\n    kdarkwakeflaghidticklemask       = 0x03,\n    kdarkwakeflagalarmisdark         = 0x0100,\n    kdarkwakeflaggraphicspowerstate1 = 0x0200,\n    kdarkwakeflagaudionotsuppressed  = 0x0400\n};\n\n\n现在让我们逐一检查每一位:\n\nbit    name                     comment\n0      n/a                      据说会使darkwake失效\n1      hid tickle early         帮助从盖子唤醒，另外可能需要电源按钮按下唤醒\n2      hid tickle late          帮助单按键唤醒，但禁用自动休眠\n3      hid tickle none          如果设置为none，则默认darkwake值\n3      hid tickle mask          配对:与其他配对\n256    alarm is dark            有待探索\n512    graphics power state 1   使wranglertickled完全从休眠和rtc唤醒\n1024   audio not suppressed     据说有助于消除醒来后的声音消失\n\n * 注意hid =人机界面设备(键盘、鼠标、指针设备等)\n\n要将上述表格应用于您的系统，就像获取计算器一样简单，将所需的darkwake值相加，然后将最终值应用于您的启动参数。但是，我们建议每次尝试一个，而不是一次合并所有，除非你知道你在做什么(尽管你可能不会阅读这篇指南)。\n\n对于这个例子，让我们尝试组合kdarkwakeflaghidtickklelate和kdarkwakeflaggraphicspowerstate1:\n\n * 2= kdarkwakeflaghidticklelate\n * 512= kdarkwakeflagaudionotsuppressed\n\n所以我们的最终值是darkwake=514，我们可以把它放到引导参数中:\n\nnvram\n|---add\n  |---7c436110-ab2a-4bbb-a880-fe41995c9f82\n    |---boot-args | sting | darkwake=514\n\n\n下面更多是为了澄清已经使用darkwake或正在研究它的用户，特别是澄清哪些值不再工作:\n\n * darkwake=8: 自从mavericks之后，内核中就没有这个功能了。\n   * 正确的引导参数是darkwake=0\n * darkwake=10: 自从mavericks之后，内核中就没有这个功能了。\n   * 正确的引导参数是darkwake=2",charsets:{cjk:!0}},{title:"修复USB电源",frontmatter:{},regularPath:"/usb/misc/power.html",relativePath:"usb/misc/power.md",key:"v-8f91aef6",path:"/usb/misc/power.html",lastUpdated:"2/14/2023, 5:12:00 PM",lastUpdatedTimestamp:167639472e4,headersStr:null,content:"# 修复USB电源\n\n有了Skylake和更新的SMBIOS，苹果不再通过IOUSBHostFamily提供USB电源设置，这意味着我们需要采用与真正的mac相同的方法，为macOS提供一个USBX设备。这将设置所有USB端口的唤醒和睡眠功率值，并可以帮助修复许多高功率设备:\n\n * 麦克风\n * DACs\n * 网络摄像头\n * 蓝牙适配器\n\n以下SMBIOS需要USBX:\n\n * iMac17,x 及更新版本\n * MacPro7,1 及更新版本\n * iMacPro1,1 及更新版本\n * Macmini8,1 及更新版本\n * MacBook9,x 及更新版本\n * MacBookAir8,x 及更新版本\n * MacBookPro13,x 及更新版本\n\n幸运的是，你可以使用预编译的USBX文件: SSDT-USBX",normalizedContent:"# 修复usb电源\n\n有了skylake和更新的smbios，苹果不再通过iousbhostfamily提供usb电源设置，这意味着我们需要采用与真正的mac相同的方法，为macos提供一个usbx设备。这将设置所有usb端口的唤醒和睡眠功率值，并可以帮助修复许多高功率设备:\n\n * 麦克风\n * dacs\n * 网络摄像头\n * 蓝牙适配器\n\n以下smbios需要usbx:\n\n * imac17,x 及更新版本\n * macpro7,1 及更新版本\n * imacpro1,1 及更新版本\n * macmini8,1 及更新版本\n * macbook9,x 及更新版本\n * macbookair8,x 及更新版本\n * macbookpro13,x 及更新版本\n\n幸运的是，你可以使用预编译的usbx文件: ssdt-usbx",charsets:{cjk:!0}},{title:"修复关机/重启",frontmatter:{},regularPath:"/usb/misc/shutdown.html",relativePath:"usb/misc/shutdown.md",key:"v-6ff7519a",path:"/usb/misc/shutdown.html",lastUpdated:"2/14/2023, 5:12:00 PM",lastUpdatedTimestamp:167639472e4,headersStr:null,content:"# 修复关机/重启\n\n因此，在使用macOS时，你可能会遇到一个奇怪的现象:当你关机时，你的PC可能会重新启动。这实际上是由于缺少S5调用导致控制器断电。当然，Windows和Linux实现了一些hack来解决这个问题，但macOS没有这样的修复，相反，我们需要做一些脏活，修复他们的ACPI编写。别担心，这不会影响其他操作系统。\n\n为此，我们需要以下内容:\n\n * FixShutdown-USB-SSDT.dsl\n * _PTS to ZPTS Patch\n * USB控制器的ACPI路径\n\n要找到需要修复的USB控制器，请在您的DSDT中搜索_PRW，并查看其中提到的设备，通常情况下，这将类似于SB.PCI0.XHC。\n\n使用ACPI路径，编辑FixShutdown-USB-SSDT.dsl并将其编译为.aml文件(已组装)。MaciASL可以帮助你做到这一点",normalizedContent:"# 修复关机/重启\n\n因此，在使用macos时，你可能会遇到一个奇怪的现象:当你关机时，你的pc可能会重新启动。这实际上是由于缺少s5调用导致控制器断电。当然，windows和linux实现了一些hack来解决这个问题，但macos没有这样的修复，相反，我们需要做一些脏活，修复他们的acpi编写。别担心，这不会影响其他操作系统。\n\n为此，我们需要以下内容:\n\n * fixshutdown-usb-ssdt.dsl\n * _pts to zpts patch\n * usb控制器的acpi路径\n\n要找到需要修复的usb控制器，请在您的dsdt中搜索_prw，并查看其中提到的设备，通常情况下，这将类似于sb.pci0.xhc。\n\n使用acpi路径，编辑fixshutdown-usb-ssdt.dsl并将其编译为.aml文件(已组装)。maciasl可以帮助你做到这一点",charsets:{cjk:!0}},{title:"系统准备",frontmatter:{},regularPath:"/usb/system-preparation.html",relativePath:"usb/system-preparation.md",key:"v-5f9fb552",path:"/usb/system-preparation.html",headers:[{level:2,title:"检查你需要的重命名",slug:"检查你需要的重命名",normalizedTitle:"检查你需要的重命名",charIndex:33},{level:3,title:"查看IOService",slug:"查看ioservice",normalizedTitle:"查看ioservice",charIndex:48}],lastUpdated:"2/14/2023, 5:12:00 PM",lastUpdatedTimestamp:167639472e4,headersStr:"检查你需要的重命名 查看IOService",content:"# 系统准备\n\nTable of Contents:\n\n\n\n * 检查你需要的重命名\n   * 查看IOService\n\n\n\n所以在我们进行USB映射之前，我们需要设置一些事情:\n\n * USBInjectAll 添加到在 EFI/OC/Kexts 和 config.plist -> Kernel -> Add\n   * 我们需要这个kext来确保任何没有在ACPI中定义的端口仍然会在macOS中显示，请注意，在Skylake和更新的系统中不需要这一点，因为USB端口是在ACPI中定义的。\n     * 因为oem并不总是包括端口，即使在较新的系统上，我们建议所有英特尔用户使用USBInjectAll，直到正确映射。\n   * 注意，这个不能在AMD上工作\n * config.plist -> Kernel -> Quirks -> XhciPortLimit -> True\n   * 所以我们可以暂时绕过15个端口的限制来映射我们的端口\n * config.plist -> ACPI -> Patch -> EHCI and XHCI ACPI renames\n\n我们需要这些ACPI重命名的原因是由于与苹果自己的USB映射冲突，有趣的是，即使苹果也有USB映射!你实际上可以在Catalina的IOUSBHostFamily kext -> PlugIns -> AppleUSBHostPlatformProperties.kext中找到苹果的USB地图，虽然较新的mac实际上与他们的ACPI表端口地图代替。\n\n不需要ACPI重命名的smbios:\n\n * iMac18,x 及更新版本\n * MacPro7,1 及更新版本\n * Macmini8,1 及更新版本\n * MacBook9,x 及更新版本\n * MacBookAir8,x 及更新版本\n * MacBookPro13,x 及更新版本\n\n因此，对于较旧的SMBIOSes(上面没有列出)，我们需要确保它们的端口映射不连接，而我们尝试自己的USB映射。还有一些端口可能会消失，在应用这些补丁之前，请检查您的ACPI表中是否有这些端口，因为我们不想给错误的设备打补丁。如果你发现你的USB控制器需要重命名，在重命名之前写下它们的原始名称，这将使USB映射过程更容易:\n\n * XHC1 to SHCI: Skylake和较旧的SMBIOS需要\n\nKEY              TYPE      VALUE\nComment          String    XHC1 to SHCI\nCount            Number    <0>\nEnabled          Boolean   YES\nFind             Data      <58484331>\nLimit            Number    <0>\nReplace          Data      <53484349>\nSkip             Number    <0>\nTableLength      Number    <0>\nTableSignature   Data      <>\n\n * EHC1 to EH01: Broadwell和更老版本SMBIOS需要\n\nKEY              TYPE      VALUE\nComment          String    EHC1 to EH01\nCount            Number    <0>\nEnabled          Boolean   YES\nFind             Data      <45484331>\nLimit            Number    <0>\nReplace          Data      <45483031>\nSkip             Number    <0>\nTableLength      Number    <0>\nTableSignature   Data      <>\n\n * EHC2 to EH02: Broadwell和更老版本SMBIOS需要\n\nKEY              TYPE      VALUE\nComment          String    EHC2 to EH02\nCount            Number    <0>\nEnabled          Boolean   YES\nFind             Data      <45484332>\nLimit            Number    <0>\nReplace          Data      <45483032>\nSkip             Number    <0>\nTableLength      Number    <0>\nTableSignature   Data      <>\n\n\n# 检查你需要的重命名\n\n因此，通过重命名，很容易找到你使用的SMBIOS(可以在你的config.plist中找到PlatformInfo -> Generic -> SystemProductName)，并匹配确定你是否需要USB映射:\n\nSMBIOS 只需要 XHC1 重命名:\n\n * iMacPro1,1\n * iMac17,x 和更旧的\n * MacBookAir7,x\n\nSMBIOS 需要 XHC1 and EHC1 重命名:\n\n * MacPro6,1\n * Macmini7,1\n * MacBook8,x\n * MacBookAir6,x\n * MacBookPro12,x\n\nSMBIOS 需要 XHC1, EHC1 和 EHC2 重命名:\n\n * iMac16,x 和更旧的\n * MacPro5,1 和更旧的\n * Macmini6,x 和更旧的\n * MacBookAir5,x 和更旧的\n * MacBookPro11,x 和更旧的\n\n现在我们知道了SMBIOS需要什么重命名，接下来可以检查USB控制器的名称。\n\n\n# 查看IOService\n\n让我们以XHC1为例，执行以下命令:\n\nioreg -l -p IOService -w0 | grep -i XHC1\n\n\n如果你看到这个，你需要重命名:   如果你看到这个，你不需要重命名:\n                  \n\n对所有其他相关的冲突设备(例如EHC1, EHC2)重复此步骤，如表中列出的您的型号。\n\nioreg -l -p IOService -w0 | grep -i EHC1\nioreg -l -p IOService -w0 | grep -i EHC2\n\n\n如果没有返回任何内容(比如正确的图像)，则不需要任何重命名。\n\n如果返回了3个条目中的一个(如左图所示)，则需要为返回的内容重命名。\n\n如果你是后者，你现在想要添加所需的ACPI重命名到你的 config.plist -> ACPI -> Patch,您可以在这里找到一个预先制作的文件(注意，您需要启用您需要的那些):\n\n * usb-rename.plist\n   * 只需复制所需的补丁到您的config.plist\n\n\n# 分型方法\n\n但现在我们必须分成两部分，这取决于你有什么硬件:\n\n * Intel USB 映射\n   * 一个更自动化的过程，不过只适用于英特尔\n * 手动 USB 映射\n   * 更多的一步一步的过程，这是正确映射AMD和第三方USB控制器的唯一方法。",normalizedContent:"# 系统准备\n\ntable of contents:\n\n\n\n * 检查你需要的重命名\n   * 查看ioservice\n\n\n\n所以在我们进行usb映射之前，我们需要设置一些事情:\n\n * usbinjectall 添加到在 efi/oc/kexts 和 config.plist -> kernel -> add\n   * 我们需要这个kext来确保任何没有在acpi中定义的端口仍然会在macos中显示，请注意，在skylake和更新的系统中不需要这一点，因为usb端口是在acpi中定义的。\n     * 因为oem并不总是包括端口，即使在较新的系统上，我们建议所有英特尔用户使用usbinjectall，直到正确映射。\n   * 注意，这个不能在amd上工作\n * config.plist -> kernel -> quirks -> xhciportlimit -> true\n   * 所以我们可以暂时绕过15个端口的限制来映射我们的端口\n * config.plist -> acpi -> patch -> ehci and xhci acpi renames\n\n我们需要这些acpi重命名的原因是由于与苹果自己的usb映射冲突，有趣的是，即使苹果也有usb映射!你实际上可以在catalina的iousbhostfamily kext -> plugins -> appleusbhostplatformproperties.kext中找到苹果的usb地图，虽然较新的mac实际上与他们的acpi表端口地图代替。\n\n不需要acpi重命名的smbios:\n\n * imac18,x 及更新版本\n * macpro7,1 及更新版本\n * macmini8,1 及更新版本\n * macbook9,x 及更新版本\n * macbookair8,x 及更新版本\n * macbookpro13,x 及更新版本\n\n因此，对于较旧的smbioses(上面没有列出)，我们需要确保它们的端口映射不连接，而我们尝试自己的usb映射。还有一些端口可能会消失，在应用这些补丁之前，请检查您的acpi表中是否有这些端口，因为我们不想给错误的设备打补丁。如果你发现你的usb控制器需要重命名，在重命名之前写下它们的原始名称，这将使usb映射过程更容易:\n\n * xhc1 to shci: skylake和较旧的smbios需要\n\nkey              type      value\ncomment          string    xhc1 to shci\ncount            number    <0>\nenabled          boolean   yes\nfind             data      <58484331>\nlimit            number    <0>\nreplace          data      <53484349>\nskip             number    <0>\ntablelength      number    <0>\ntablesignature   data      <>\n\n * ehc1 to eh01: broadwell和更老版本smbios需要\n\nkey              type      value\ncomment          string    ehc1 to eh01\ncount            number    <0>\nenabled          boolean   yes\nfind             data      <45484331>\nlimit            number    <0>\nreplace          data      <45483031>\nskip             number    <0>\ntablelength      number    <0>\ntablesignature   data      <>\n\n * ehc2 to eh02: broadwell和更老版本smbios需要\n\nkey              type      value\ncomment          string    ehc2 to eh02\ncount            number    <0>\nenabled          boolean   yes\nfind             data      <45484332>\nlimit            number    <0>\nreplace          data      <45483032>\nskip             number    <0>\ntablelength      number    <0>\ntablesignature   data      <>\n\n\n# 检查你需要的重命名\n\n因此，通过重命名，很容易找到你使用的smbios(可以在你的config.plist中找到platforminfo -> generic -> systemproductname)，并匹配确定你是否需要usb映射:\n\nsmbios 只需要 xhc1 重命名:\n\n * imacpro1,1\n * imac17,x 和更旧的\n * macbookair7,x\n\nsmbios 需要 xhc1 and ehc1 重命名:\n\n * macpro6,1\n * macmini7,1\n * macbook8,x\n * macbookair6,x\n * macbookpro12,x\n\nsmbios 需要 xhc1, ehc1 和 ehc2 重命名:\n\n * imac16,x 和更旧的\n * macpro5,1 和更旧的\n * macmini6,x 和更旧的\n * macbookair5,x 和更旧的\n * macbookpro11,x 和更旧的\n\n现在我们知道了smbios需要什么重命名，接下来可以检查usb控制器的名称。\n\n\n# 查看ioservice\n\n让我们以xhc1为例，执行以下命令:\n\nioreg -l -p ioservice -w0 | grep -i xhc1\n\n\n如果你看到这个，你需要重命名:   如果你看到这个，你不需要重命名:\n                  \n\n对所有其他相关的冲突设备(例如ehc1, ehc2)重复此步骤，如表中列出的您的型号。\n\nioreg -l -p ioservice -w0 | grep -i ehc1\nioreg -l -p ioservice -w0 | grep -i ehc2\n\n\n如果没有返回任何内容(比如正确的图像)，则不需要任何重命名。\n\n如果返回了3个条目中的一个(如左图所示)，则需要为返回的内容重命名。\n\n如果你是后者，你现在想要添加所需的acpi重命名到你的 config.plist -> acpi -> patch,您可以在这里找到一个预先制作的文件(注意，您需要启用您需要的那些):\n\n * usb-rename.plist\n   * 只需复制所需的补丁到您的config.plist\n\n\n# 分型方法\n\n但现在我们必须分成两部分，这取决于你有什么硬件:\n\n * intel usb 映射\n   * 一个更自动化的过程，不过只适用于英特尔\n * 手动 usb 映射\n   * 更多的一步一步的过程，这是正确映射amd和第三方usb控制器的唯一方法。",charsets:{cjk:!0}}],themeConfig:{repo:"https://github.com/sumingyd/OpenCore-Post-Install",label:"简体中文",selectText:"选择语言",ariaLabel:"选择语言",editLinks:!0,editLinkText:"在 GitHub 上编辑此页",lastUpdated:"上次更新",logo:"/homepage.png",nav:[{text:"指南菜单",items:[{text:"OpenCore安装",link:"https://sumingyd.github.io/OpenCore-Install-Guide/"},{text:"OpenCore安装后",link:"https://sumingyd.github.io/OpenCore-Post-Install/"},{text:"OpenCore多重引导",link:"https://sumingyd.github.io/OpenCore-Multiboot/"},{text:"开始使用ACPI",link:"https://sumingyd.github.io/Getting-Started-With-ACPI/"},{text:"无线购买指南",link:"https://sumingyd.github.io/Wireless-Buyers-Guide/"},{text:"显卡购买指南",link:"https://sumingyd.github.io/GPU-Buyers-Guide/"},{text:"避免购买指南",link:"https://sumingyd.github.io/Anti-Hackintosh-Buyers-Guide/"}]},{text:"QQ群",link:"https://jq.qq.com/?_wv=1027&k=liYHt5VH"}],sidebar:[{title:"简介",collapsable:!1,sidebarDepth:1,children:[""]},{title:"通用",collapsable:!1,sidebarDepth:2,children:[["/universal/audio","修复音频"],["/universal/oc2hdd","无需USB启动"],["/universal/update","更新OpenCore, kexts和macOS"],["/universal/drm","修复 DRM"],["/universal/iservices","修复 iServices"],["/universal/pm","修复电源管理"],["/universal/sleep","修复睡眠"]]},{title:"USB 修复",collapsable:!1,sidebarDepth:1,children:[["/usb/","USB映射: 简介"],["/usb/system-preparation","系统准备"],{title:"USB 映射",collapsable:!0,sidebarDepth:2,children:[["/usb/intel-mapping/intel","Intel USB 映射"],["/usb/manual/manual","Manual 映射"]]},{title:"杂项修复",collapsable:!0,sidebarDepth:1,children:[["/usb/misc/power","修复 USB 电源"],["/usb/misc/shutdown","修复关机/重启"],["/usb/misc/instant-wake","修复瞬间唤醒"],["/usb/misc/keyboard","修复键盘唤醒问题"]]}]},{title:"安全",collapsable:!1,sidebarDepth:2,children:[["/universal/security","安全性和文件库"],{title:"",collapsable:!1,sidebarDepth:2,children:[["/universal/security/filevault","文件库"],["/universal/security/vault","保险库"],["/universal/security/scanpolicy","扫描策略"],["/universal/security/password","OpenCore菜单密码"],["/universal/security/applesecureboot","苹果安全引导"]]}]},{title:"笔记本电脑细节",collapsable:!1,children:[["/laptop-specific/battery","修复电池读数"]]},{title:"美化",collapsable:!1,children:[["/cosmetic/verbose","修复分辨率和啰嗦模式"],["/cosmetic/gui","添加gui和开机铃声"],["/universal/memory","修复MacPro7,1内存错误"]]},{title:"多引导",collapsable:!1,children:[["https://sumingyd.github.io/OpenCore-Multiboot/","OpenCore 多引导"],["/multiboot/bootstrap","设置启动选项"],["/multiboot/bootcamp","安装bootcamp"]]},{title:"杂项",collapsable:!1,children:[["/misc/rtc","修复 RTC"],["/misc/msr-lock","修复 CFG Lock"],["/misc/nvram","模拟 NVRAM"]]},{title:"GPU 修补",collapsable:!1,children:[["/gpu-patching/","深入GPU修补"],{title:"现代英特尔iGPU",collapsable:!1,children:[["/gpu-patching/intel-patching/","iGPU补丁介绍"],["/gpu-patching/intel-patching/vram","VRAM 补丁"],["/gpu-patching/intel-patching/connector","Connector-type 补丁"],["/gpu-patching/intel-patching/busid","BusID 补丁"]]},{title:"传统英特尔iGPU",collapsable:!1,children:[["/gpu-patching/legacy-intel/","GMA 补丁"]]},{title:"传统Nvidia",collapsable:!1,children:[["/gpu-patching/nvidia-patching/","Nvidia 补丁"]]}]}]}};t(236);Wt.component("Badge",()=>Promise.all([t.e(0),t.e(23)]).then(t.bind(null,483))),Wt.component("ThemeManager",()=>t.e(35).then(t.bind(null,439))),Wt.component("Badge",()=>Promise.all([t.e(0),t.e(20)]).then(t.bind(null,484))),Wt.component("CodeBlock",()=>Promise.all([t.e(0),t.e(21)]).then(t.bind(null,440))),Wt.component("CodeGroup",()=>Promise.all([t.e(0),t.e(22)]).then(t.bind(null,441)));var $s={name:"BackToTop",props:{threshold:{type:Number,default:300}},data:()=>({scrollTop:null}),computed:{show(){return this.scrollTop>this.threshold}},mounted(){this.scrollTop=this.getScrollTop(),window.addEventListener("scroll",Fs()(()=>{this.scrollTop=this.getScrollTop()},100))},methods:{getScrollTop:()=>window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0,scrollToTop(){window.scrollTo({top:0,behavior:"smooth"}),this.scrollTop=0}}},Ws=(t(237),Object(js.a)($s,(function(){var n=this._self._c;return n("transition",{attrs:{name:"fade"}},[this.show?n("svg",{staticClass:"go-to-top",attrs:{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 49.484 28.284"},on:{click:this.scrollToTop}},[n("g",{attrs:{transform:"translate(-229 -126.358)"}},[n("rect",{attrs:{fill:"currentColor",width:"35",height:"5",rx:"2",transform:"translate(229 151.107) rotate(-45)"}}),this._v(" "),n("rect",{attrs:{fill:"currentColor",width:"35",height:"5",rx:"2",transform:"translate(274.949 154.642) rotate(-135)"}})])]):this._e()])}),[],!1,null,"5fd4ef0c",null).exports);t(238),t(239);function Xs(n){const e=document.documentElement.getBoundingClientRect(),t=n.getBoundingClientRect();return{x:t.left-e.left,y:t.top-e.top}}var qs=[{},({Vue:n})=>{n.mixin({computed:{$dataBlock(){return this.$options.__data__block__}}})},{},({Vue:n})=>{n.component("BackToTop",Ws)},{},({Vue:n,router:e})=>{e.options.scrollBehavior=(e,t,o)=>{if(o)return window.scrollTo({top:o.y,behavior:"smooth"});if(e.hash){if(n.$vuepress.$get("disableScrollBehavior"))return!1;const t=document.querySelector(e.hash);return!!t&&window.scrollTo({top:Xs(t).y,behavior:"smooth"})}return window.scrollTo({top:0,behavior:"smooth"})}}],Ks=t(87);class Ys extends class{constructor(){this.store=new Wt({data:{state:{}}})}$get(n){return this.store.state[n]}$set(n,e){Wt.set(this.store.state,n,e)}$emit(...n){this.store.$emit(...n)}$on(...n){this.store.$on(...n)}}{}Object.assign(Ys.prototype,{getPageAsyncComponent:is,getLayoutAsyncComponent:ss,getAsyncComponent:cs,getVueComponent:ls});var Qs={install(n){const e=new Ys;n.$vuepress=e,n.prototype.$vuepress=e}};function Js(n,e){const t=e.toLowerCase();return n.options.routes.some(n=>n.path.toLowerCase()===t)}var Zs={props:{pageKey:String,slotKey:{type:String,default:"default"}},render(n){const e=this.pageKey||this.$parent.$page.key;return us("pageKey",e),Wt.component(e)||Wt.component(e,is(e)),Wt.component(e)?n(e):n("")}},nc={functional:!0,props:{slotKey:String,required:!0},render:(n,{props:e,slots:t})=>n("div",{class:["content__"+e.slotKey]},t()[e.slotKey])},ec={computed:{openInNewWindowTitle(){return this.$themeLocaleConfig.openNewWindowText||"(opens new window)"}}},tc=(t(240),t(241),Object(js.a)(ec,(function(){var n=this._self._c;return n("span",[n("svg",{staticClass:"icon outbound",attrs:{xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15"}},[n("path",{attrs:{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}}),this._v(" "),n("polygon",{attrs:{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"}})]),this._v(" "),n("span",{staticClass:"sr-only"},[this._v(this._s(this.openInNewWindowTitle))])])}),[],!1,null,null,null).exports),oc={functional:!0,render(n,{parent:e,children:t}){if(e._isMounted)return t;e.$once("hook:mounted",()=>{e.$forceUpdate()})}};Wt.config.productionTip=!1,Wt.use(Hi),Wt.use(Qs),Wt.mixin(function(n,e,t=Wt){!function(n){n.locales&&Object.keys(n.locales).forEach(e=>{n.locales[e].path=e});Object.freeze(n)}(e),t.$vuepress.$set("siteData",e);const o=new(n(t.$vuepress.$get("siteData"))),r=Object.getOwnPropertyDescriptors(Object.getPrototypeOf(o)),a={};return Object.keys(r).reduce((n,e)=>(e.startsWith("$")&&(n[e]=r[e].get),n),a),{computed:a}}(n=>class{setPage(n){this.__page=n}get $site(){return n}get $themeConfig(){return this.$site.themeConfig}get $frontmatter(){return this.$page.frontmatter}get $localeConfig(){const{locales:n={}}=this.$site;let e,t;for(const o in n)"/"===o?t=n[o]:0===this.$page.path.indexOf(o)&&(e=n[o]);return e||t||{}}get $siteTitle(){return this.$localeConfig.title||this.$site.title||""}get $canonicalUrl(){const{canonicalUrl:n}=this.$page.frontmatter;return"string"==typeof n&&n}get $title(){const n=this.$page,{metaTitle:e}=this.$page.frontmatter;if("string"==typeof e)return e;const t=this.$siteTitle,o=n.frontmatter.home?null:n.frontmatter.title||n.title;return t?o?o+" | "+t:t:o||"VuePress"}get $description(){const n=function(n){if(n){const e=n.filter(n=>"description"===n.name)[0];if(e)return e.content}}(this.$page.frontmatter.meta);return n||(this.$page.frontmatter.description||this.$localeConfig.description||this.$site.description||"")}get $lang(){return this.$page.frontmatter.lang||this.$localeConfig.lang||"en-US"}get $localePath(){return this.$localeConfig.path||"/"}get $themeLocaleConfig(){return(this.$site.themeConfig.locales||{})[this.$localePath]||{}}get $page(){return this.__page?this.__page:function(n,e){for(let t=0;t<n.length;t++){const o=n[t];if(o.path.toLowerCase()===e.toLowerCase())return o}return{path:"",frontmatter:{}}}(this.$site.pages,this.$route.path)}},Hs)),Wt.component("Content",Zs),Wt.component("ContentSlotsDistributor",nc),Wt.component("OutboundLink",tc),Wt.component("ClientOnly",oc),Wt.component("Layout",ss("Layout")),Wt.component("NotFound",ss("NotFound")),Wt.prototype.$withBase=function(n){const e=this.$site.base;return"/"===n.charAt(0)?e+n.slice(1):n},window.__VUEPRESS__={version:"1.9.8",hash:"4f3e080"},async function(n){const e="undefined"!=typeof window&&window.__VUEPRESS_ROUTER_BASE__?window.__VUEPRESS_ROUTER_BASE__:Hs.routerBase||Hs.base,t=new Hi({base:e,mode:"history",fallback:!1,routes:Vs,scrollBehavior:(n,e,t)=>t||(n.hash?!Wt.$vuepress.$get("disableScrollBehavior")&&{selector:decodeURIComponent(n.hash)}:{x:0,y:0})});!function(n){n.beforeEach((e,t,o)=>{if(Js(n,e.path))o();else if(/(\/|\.html)$/.test(e.path))if(/\/$/.test(e.path)){const t=e.path.replace(/\/$/,"")+".html";Js(n,t)?o(t):o()}else o();else{const t=e.path+"/",r=e.path+".html";Js(n,r)?o(r):Js(n,t)?o(t):o()}})}(t);const o={};try{await Promise.all(qs.filter(n=>"function"==typeof n).map(e=>e({Vue:Wt,options:o,router:t,siteData:Hs,isServer:n})))}catch(n){console.error(n)}return{app:new Wt(Object.assign(o,{router:t,render:n=>n("div",{attrs:{id:"app"}},[n("RouterView",{ref:"layout"}),n("div",{class:"global-ui"},Ks.a.map(e=>n(e)))])})),router:t}}(!1).then(({app:n,router:e})=>{e.onReady(()=>{n.$mount("#app")})})}]);