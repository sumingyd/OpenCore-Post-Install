(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{365:function(v,t,e){v.exports=e.p+"assets/img/sign.194f5ee7.png"},366:function(v,t,e){v.exports=e.p+"assets/img/sign-demo.1f95ff8c.png"},470:function(v,t,e){"use strict";e.r(t);var _=e(10),i=Object(_.a)({},(function(){var v=this,t=v._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h1",{attrs:{id:"保险库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#保险库"}},[v._v("#")]),v._v(" 保险库")]),v._v(" "),t("p",[t("strong",[v._v("什么是保险库?")])]),v._v(" "),t("p",[v._v("好的保险库是基于两个东西, vault.plist 和 vault.sig:")]),v._v(" "),t("ul",[t("li",[v._v("vault.plist: 您的EFI的“快照”")]),v._v(" "),t("li",[v._v("vault.sig: vault.plist的验证")])]),v._v(" "),t("p",[v._v("这可以被视为OpenCore的安全启动，因此没有人可以在没有您的允许的情况下修改它并进入。")]),v._v(" "),t("p",[v._v("保险库的具体特征是一个256字节的RSA-2048签名。plist将被塞进我们的OpenCore.efi。这个键可以在编译前插入"),t("a",{attrs:{href:"https://github.com/acidanthera/OpenCorePkg/blob/master/Platform/OpenCore/OpenCoreVault.c",target:"_blank",rel:"noopener noreferrer"}},[v._v("OpenCoreVault.c"),t("OutboundLink")],1),v._v("，如果你已经编译了OpenCore efi，也可以使用"),t("code",[v._v("sign.command")]),v._v("。")]),v._v(" "),t("p",[v._v("请注意，nvram plist不会被保险，因此使用模拟nvram的用户仍然有添加/删除某些nvram变量的风险")]),v._v(" "),t("p",[t("strong",[v._v("设置你的config.plist")]),v._v(":")]),v._v(" "),t("ul",[t("li",[t("code",[v._v("Misc -> Security -> Vault")]),v._v(":\n"),t("ul",[t("li",[t("code",[v._v("Basic")]),v._v(": 只需要vault.plist，主要用于文件系统完整性验证")]),v._v(" "),t("li",[t("code",[v._v("Secure")]),v._v(": 需要vault.plist和vault.sig，用于保险库的最佳安全性。Plist更改需要新的签名")])])]),v._v(" "),t("li",[t("code",[v._v("Booter -> ProtectSecureBoot:")]),v._v(" "),t("code",[v._v("YES")]),v._v(" "),t("ul",[t("li",[v._v("Insyde固件需要修复安全启动密钥和报告违规行为")])])])]),v._v(" "),t("p",[t("strong",[v._v("设置升级保险")]),v._v(":")]),v._v(" "),t("p",[v._v("获取OpenCorePkg并打开"),t("code",[v._v("CreateVault")]),v._v("文件夹，在里面我们会找到以下内容:")]),v._v(" "),t("ul",[t("li",[t("code",[v._v("create_vault.sh")])]),v._v(" "),t("li",[t("code",[v._v("RsaTool")])]),v._v(" "),t("li",[t("code",[v._v("sign.command")])])]),v._v(" "),t("p",[v._v("最后一个是我们关心的: "),t("code",[v._v("sign.command")])]),v._v(" "),t("p",[v._v("所以当我们运行这个命令时，它会在我们的Utilities文件夹旁边查找EFI文件夹，所以我们需要将我们的个人EFI带到OpenCorePkg文件夹中，或者将Utilities带到我们的EFI文件夹中:")]),v._v(" "),t("p",[t("img",{attrs:{src:e(365),alt:""}})]),v._v(" "),t("p",[v._v("现在，我们准备运行"),t("code",[v._v("sign.command")]),v._v(":")]),v._v(" "),t("p",[t("img",{attrs:{src:e(366),alt:""}})]),v._v(" "),t("p",[t("strong",[v._v("在安装后禁用保险库")]),v._v(":")]),v._v(" "),t("p",[v._v("如果你正在进行繁重的故障排除或需要禁用保险库，需要更改的主要内容如下:")]),v._v(" "),t("ul",[t("li",[v._v("获取一个新的OpenCore.efi副本")]),v._v(" "),t("li",[t("code",[v._v("Misc -> Security -> Vault")]),v._v(" 设置为 Optional")]),v._v(" "),t("li",[v._v("删除 "),t("code",[v._v("vault.plist")]),v._v(" 和 "),t("code",[v._v("vault.sig")])])])])}),[],!1,null,null,null);t.default=i.exports}}]);